
I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  0000355d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003466  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000063  0000b466  00003466  000034fa  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000003bf  00803800  00803800  0000355d  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  0000355d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000035bc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000398  00000000  00000000  000035fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005c84  00000000  00000000  00003994  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002a38  00000000  00000000  00009618  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002216  00000000  00000000  0000c050  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000bd4  00000000  00000000  0000e268  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001925  00000000  00000000  0000ee3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000335c  00000000  00000000  00010761  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000338  00000000  00000000  00013abd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__ctors_end>
       4:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
       8:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
       c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      10:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      14:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      18:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      1c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      20:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      24:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      28:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      2c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      30:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      34:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__vector_13>
      38:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      3c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      40:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      44:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__vector_17>
      48:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      4c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      50:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      54:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      58:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      5c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      60:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      64:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      68:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      6c:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      70:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>
      74:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__bad_interrupt>

00000078 <__trampolines_end>:
      78:	4e 41       	sbci	r20, 0x1E	; 30
      7a:	4e 49       	Address 0x0000007a is out of bounds.
.word	0xffff	; ????

0000007b <pstr_inity>:
      7b:	49 4e 49 54 59                                      INITY

00000080 <pstr_inf>:
      80:	49 4e 46                                            INF

00000083 <pwr_m10>:
      83:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      93:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000009b <pwr_p10>:
      9b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      ab:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000000b3 <__c.4392>:
      b3:	7c 0a 20 20 20 00                                   |.   .

000000b9 <__c.4384>:
      b9:	2e 00                                               ..

000000bb <__c.4382>:
      bb:	25 63 00                                            %c.

000000be <__c.4380>:
      be:	20 20 7c 00                                           |.

000000c2 <__c.4378>:
      c2:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

000000cc <__c.4376>:
      cc:	3e 3e 20 6d 64 70 20 61 64 64 72 20 5b 73 69 7a     >> mdp addr [siz
      dc:	65 5d 20 0a 00                                      e] ..

000000e1 <__c.4359>:
      e1:	7c 0a 20 20 20 00                                   |.   .

000000e7 <__c.4351>:
      e7:	2e 00                                               ..

000000e9 <__c.4349>:
      e9:	25 63 00                                            %c.

000000ec <__c.4347>:
      ec:	20 20 7c 00                                           |.

000000f0 <__c.4345>:
      f0:	20 30 78 25 30 38 58 00                              0x%08X.

000000f8 <__c.4343>:
      f8:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

00000102 <__c.4341>:
     102:	3e 3e 20 6d 64 20 61 64 64 72 20 5b 73 69 7a 65     >> md addr [size
     112:	5d 20 0a 00                                         ] ..

00000116 <__c.4327>:
     116:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     126:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     -------------...

00000136 <__c.4322>:
     136:	0d 0a 00                                            ...

00000139 <__c.4319>:
     139:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 20 63 6d 64 20 6c     ---------- cmd l
     149:	69 73 74 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     ist ---------...

00000159 <__c.4317>:
     159:	0d 0a 00                                            ...

0000015c <__c.4170>:
     15c:	63 6c 69 23 20 00                                   cli# .

00000162 <__c.4168>:
     162:	0a 0d 00                                            ...

00000165 <__c.4240>:
     165:	0d 0a 00                                            ...

00000168 <__c.4217>:
     168:	1b 5b 34 68 25 63 1b 5b 34 6c 00                    .[4h%c.[4l.

00000173 <__c.4209>:
     173:	08 20 08 1b 5b 31 50 00                             . ..[1P.

0000017b <__c.4201>:
     17b:	1b 5b 31 50 00                                      .[1P.

00000180 <__c.4241>:
     180:	69 32 63 20 73 63 61 6e 0a 00                       i2c scan..

0000018a <__c.4175>:
     18a:	69 6e 66 6f 20 66 75 73 65 0a 00                    info fuse..

00000195 <__c.4173>:
     195:	20 20 20 20 20 41 50 50 45 4e 44 20 20 20 20 20          APPEND     
     1a5:	09 20 3a 20 25 64 20 4b 42 0a 00                    . : %d KB..

000001b0 <__c.4171>:
     1b0:	0a 46 55 53 45 2e 41 50 50 45 4e 44 20 20 20 09     .FUSE.APPEND   .
     1c0:	20 3a 20 30 78 25 30 38 58 0a 00                     : 0x%08X..

000001cb <__c.4169>:
     1cb:	20 20 20 20 20 42 4f 4f 54 45 4e 44 20 20 20 20          BOOTEND    
     1db:	20 09 20 3a 20 25 64 20 4b 42 0a 00                  . : %d KB..

000001e7 <__c.4167>:
     1e7:	0a 46 55 53 45 2e 42 4f 4f 54 45 4e 44 20 20 20     .FUSE.BOOTEND   
     1f7:	09 20 3a 20 30 78 25 30 38 58 0a 00                 . : 0x%08X..

00000203 <__c.4165>:
     203:	0a 00                                               ..

00000205 <__c.4163>:
     205:	20 20 20 20 20 53 55 54 20 20 20 20 20 20 20 20          SUT        
     215:	20 20 09 20 3a 20 00                                  . : .

0000021c <__c.4161>:
     21c:	36 34 20 6d 73 00                                   64 ms.

00000222 <__c.4159>:
     222:	33 32 20 6d 73 00                                   32 ms.

00000228 <__c.4157>:
     228:	31 36 20 6d 73 00                                   16 ms.

0000022e <__c.4155>:
     22e:	38 20 6d 73 00                                      8 ms.

00000233 <__c.4153>:
     233:	34 20 6d 73 00                                      4 ms.

00000238 <__c.4151>:
     238:	32 20 6d 73 00                                      2 ms.

0000023d <__c.4149>:
     23d:	31 20 6d 73 00                                      1 ms.

00000242 <__c.4147>:
     242:	30 20 6d 73 00                                      0 ms.

00000247 <__c.4144>:
     247:	0a 46 55 53 45 2e 53 59 53 43 46 47 31 20 20 20     .FUSE.SYSCFG1   
     257:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

00000264 <__c.4142>:
     264:	0a 00                                               ..

00000266 <__c.4140>:
     266:	20 20 20 20 20 45 45 53 41 56 45 20 20 20 20 20          EESAVE     
     276:	09 20 3a 20 00                                      . : .

0000027b <__c.4138>:
     27b:	0a 00                                               ..

0000027d <__c.4136>:
     27d:	20 20 20 20 20 52 53 54 50 49 4e 43 46 47 20 20          RSTPINCFG  
     28d:	09 20 3a 20 00                                      . : .

00000292 <__c.4134>:
     292:	45 45 50 52 4f 4d 20 6e 6f 74 20 65 72 61 73 65     EEPROM not erase
     2a2:	64 20 75 6e 64 65 72 20 43 68 69 70 20 45 72 61     d under Chip Era
     2b2:	73 65 00                                            se.

000002b5 <__c.4132>:
     2b5:	45 45 50 52 4f 4d 20 65 72 61 73 65 64 20 64 75     EEPROM erased du
     2c5:	72 69 6e 67 20 43 68 69 70 20 45 72 61 73 65 00     ring Chip Erase.

000002d5 <__c.4129>:
     2d5:	2d 20 00                                            - .

000002d8 <__c.4127>:
     2d8:	52 45 53 45 54 20 45 78 74 65 72 6e 61 6c 20 52     RESET External R
     2e8:	65 73 65 74 20 65 6e 61 62 6c 65 64 20 6f 6e 20     eset enabled on 
     2f8:	50 46 36 00                                         PF6.

000002fc <__c.4125>:
     2fc:	2d 20 00                                            - .

000002ff <__c.4123>:
     2ff:	49 4e 50 55 54 20 50 46 36 20 63 6f 6e 66 69 67     INPUT PF6 config
     30f:	75 72 65 64 20 61 73 20 67 65 6e 65 72 61 6c 20     ured as general 
     31f:	69 6e 70 75 74 20 70 69 6e 00                       input pin.

00000329 <__c.4120>:
     329:	0a 46 55 53 45 2e 53 59 53 43 46 47 30 20 20 20     .FUSE.SYSCFG0   
     339:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

00000346 <__c.4118>:
     346:	0a 00                                               ..

00000348 <__c.4116>:
     348:	20 20 20 20 20 43 4c 4b 53 45 4c 20 20 20 20 20          CLKSEL     
     358:	09 20 3a 20 00                                      . : .

0000035d <__c.4114>:
     35d:	4f 53 43 33 32 4b 00                                OSC32K.

00000364 <__c.4112>:
     364:	4f 53 43 48 46 00                                   OSCHF.

0000036a <__c.4109>:
     36a:	0a 46 55 53 45 2e 4f 53 43 43 46 47 20 20 20 20     .FUSE.OSCCFG    
     37a:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

00000387 <__c.4107>:
     387:	0a 00                                               ..

00000389 <__c.4105>:
     389:	20 20 20 20 20 53 4c 45 45 50 20 20 20 20 20 20          SLEEP      
     399:	20 09 20 3a 20 00                                    . : .

0000039f <__c.4103>:
     39f:	0a 00                                               ..

000003a1 <__c.4101>:
     3a1:	20 20 20 20 20 41 43 54 49 56 45 20 20 20 20 20          ACTIVE     
     3b1:	20 09 20 3a 20 00                                    . : .

000003b7 <__c.4099>:
     3b7:	0a 00                                               ..

000003b9 <__c.4097>:
     3b9:	20 20 20 20 20 53 41 4d 50 46 52 45 51 20 20 20          SAMPFREQ   
     3c9:	20 09 20 3a 20 00                                    . : .

000003cf <__c.4095>:
     3cf:	0a 00                                               ..

000003d1 <__c.4093>:
     3d1:	20 20 20 20 20 4c 56 4c 20 20 20 20 20 20 20 20          LVL        
     3e1:	20 09 20 3a 20 00                                    . : .

000003e7 <__c.4091>:
     3e7:	52 65 73 65 72 76 65 64 00                          Reserved.

000003f0 <__c.4089>:
     3f0:	53 41 4d 50 4c 45 00                                SAMPLE.

000003f7 <__c.4087>:
     3f7:	45 4e 41 42 4c 45 00                                ENABLE.

000003fe <__c.4085>:
     3fe:	44 49 53 41 42 4c 45 00                             DISABLE.

00000406 <__c.4082>:
     406:	45 4e 41 42 4c 45 57 41 49 54 00                    ENABLEWAIT.

00000411 <__c.4080>:
     411:	53 41 4d 50 4c 45 00                                SAMPLE.

00000418 <__c.4078>:
     418:	45 4e 41 42 4c 45 00                                ENABLE.

0000041f <__c.4076>:
     41f:	44 49 53 41 42 4c 45 00                             DISABLE.

00000427 <__c.4073>:
     427:	33 32 48 7a 00                                      32Hz.

0000042c <__c.4071>:
     42c:	31 32 38 48 7a 00                                   128Hz.

00000432 <__c.4068>:
     432:	32 2e 38 35 56 00                                   2.85V.

00000438 <__c.4066>:
     438:	32 2e 37 30 56 00                                   2.70V.

0000043e <__c.4064>:
     43e:	32 2e 34 35 56 00                                   2.45V.

00000444 <__c.4062>:
     444:	31 2e 39 56 00                                      1.9V.

00000449 <__c.4059>:
     449:	0a 46 55 53 45 2e 42 4f 44 43 46 47 20 20 20 20     .FUSE.BODCFG    
     459:	20 20 09 20 3a 20 30 78 25 30 38 58 0a 00             . : 0x%08X..

00000467 <__c.4056>:
     467:	20 20 20 20 20 50 45 52 49 4f 44 5b 33 3a 30 5d          PERIOD[3:0]
     477:	20 09 20 3a 20 30 78 25 58 0a 00                     . : 0x%X..

00000482 <__c.4054>:
     482:	20 20 20 20 20 57 49 4e 44 4f 57 5b 33 3a 30 5d          WINDOW[3:0]
     492:	20 09 20 3a 20 30 78 25 58 0a 00                     . : 0x%X..

0000049d <__c.4052>:
     49d:	0a 46 55 53 45 2e 57 44 54 43 46 47 20 20 20 20     .FUSE.WDTCFG    
     4ad:	20 20 09 20 3a 20 30 78 25 30 38 58 0a 00             . : 0x%08X..

000004bb <pin_tbl>:
     4bb:	40 04 44 04 00 00                                   @.D...

000004c1 <__c.4089>:
     4c1:	52 65 73 65 74 46 72 6f 6d 20 3a 20 45 74 63 0d     ResetFrom : Etc.
     4d1:	0a 00                                               ..

000004d3 <__c.4087>:
     4d3:	52 65 73 65 74 46 72 6f 6d 20 3a 20 42 6f 44 0d     ResetFrom : BoD.
     4e3:	0a 00                                               ..

000004e5 <__c.4085>:
     4e5:	52 65 73 65 74 46 72 6f 6d 20 3a 20 53 6f 66 74     ResetFrom : Soft
     4f5:	0d 0a 00                                            ...

000004f8 <__c.4083>:
     4f8:	52 65 73 65 74 46 72 6f 6d 20 3a 20 57 64 67 0d     ResetFrom : Wdg.
     508:	0a 00                                               ..

0000050a <__c.4081>:
     50a:	52 65 73 65 74 46 72 6f 6d 20 3a 20 50 69 6e 0d     ResetFrom : Pin.
     51a:	0a 00                                               ..

0000051c <__c.4079>:
     51c:	52 65 73 65 74 46 72 6f 6d 20 3a 20 50 6f 77 65     ResetFrom : Powe
     52c:	72 0d 0a 00                                         r...

00000530 <__c.4077>:
     530:	52 65 73 65 74 4d 6f 64 65 20 3a 20 30 78 25 30     ResetMode : 0x%0
     540:	32 58 0d 0a 00                                      2X...

00000545 <__c.4075>:
     545:	0a 00                                               ..

00000547 <__c.4113>:
     547:	72 65 73 65 74 20 62 6f 6f 74 20 30 78 30 30 7e     reset boot 0x00~
     557:	30 78 46 46 0a 00                                   0xFF..

0000055d <__c.4111>:
     55d:	72 65 73 65 74 20 69 6e 66 6f 0a 00 00              reset info...

0000056a <__ctors_end>:
     56a:	11 24       	eor	r1, r1
     56c:	1f be       	out	0x3f, r1	; 63
     56e:	cf ef       	ldi	r28, 0xFF	; 255
     570:	cd bf       	out	0x3d, r28	; 61
     572:	df e3       	ldi	r29, 0x3F	; 63
     574:	de bf       	out	0x3e, r29	; 62

00000576 <__do_clear_bss>:
     576:	2b e3       	ldi	r18, 0x3B	; 59
     578:	a0 e0       	ldi	r26, 0x00	; 0
     57a:	b8 e3       	ldi	r27, 0x38	; 56
     57c:	01 c0       	rjmp	.+2      	; 0x580 <.do_clear_bss_start>

0000057e <.do_clear_bss_loop>:
     57e:	1d 92       	st	X+, r1

00000580 <.do_clear_bss_start>:
     580:	af 3b       	cpi	r26, 0xBF	; 191
     582:	b2 07       	cpc	r27, r18
     584:	e1 f7       	brne	.-8      	; 0x57e <.do_clear_bss_loop>
     586:	0e 94 a4 11 	call	0x2348	; 0x2348 <main>
     58a:	0c 94 31 1a 	jmp	0x3462	; 0x3462 <_exit>

0000058e <__bad_interrupt>:
     58e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000592 <memcpy_PF>:
     592:	fa 01       	movw	r30, r20
     594:	dc 01       	movw	r26, r24
     596:	02 c0       	rjmp	.+4      	; 0x59c <memcpy_PF+0xa>
     598:	05 90       	lpm	r0, Z+
     59a:	0d 92       	st	X+, r0
     59c:	21 50       	subi	r18, 0x01	; 1
     59e:	30 40       	sbci	r19, 0x00	; 0
     5a0:	d8 f7       	brcc	.-10     	; 0x598 <memcpy_PF+0x6>
     5a2:	08 95       	ret

000005a4 <apInit>:



void apInit(void)
{
	cliOpen(_DEF_UART1, 115200);
     5a4:	40 e0       	ldi	r20, 0x00	; 0
     5a6:	52 ec       	ldi	r21, 0xC2	; 194
     5a8:	61 e0       	ldi	r22, 0x01	; 1
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <cliOpen>
	i2cBegin(_DEF_I2C1, 100000);
     5b2:	40 ea       	ldi	r20, 0xA0	; 160
     5b4:	56 e8       	ldi	r21, 0x86	; 134
     5b6:	61 e0       	ldi	r22, 0x01	; 1
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	0e 94 96 0b 	call	0x172c	; 0x172c <i2cBegin>
     5c0:	08 95       	ret

000005c2 <apMain>:
void apMain(void)
{
  uint32_t pre_time;


  pre_time = millis();
     5c2:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
     5c6:	6b 01       	movw	r12, r22
     5c8:	7c 01       	movw	r14, r24
  while(1)
  {
    if(millis() - pre_time >= 200)
     5ca:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
     5ce:	dc 01       	movw	r26, r24
     5d0:	cb 01       	movw	r24, r22
     5d2:	8c 19       	sub	r24, r12
     5d4:	9d 09       	sbc	r25, r13
     5d6:	ae 09       	sbc	r26, r14
     5d8:	bf 09       	sbc	r27, r15
     5da:	88 3c       	cpi	r24, 0xC8	; 200
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	38 f0       	brcs	.+14     	; 0x5f2 <apMain+0x30>
    {
      pre_time = millis();
     5e4:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
     5e8:	6b 01       	movw	r12, r22
     5ea:	7c 01       	movw	r14, r24
  	  ledToggle(_DEF_LED1);
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <ledToggle>
    }
		
		cliMain();
     5f2:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <cliMain>
  }
     5f6:	e9 cf       	rjmp	.-46     	; 0x5ca <apMain+0x8>

000005f8 <__vector_13>:

static volatile uint32_t ms_cnt = 0;


ISR(TCB0_INT_vect, ISR_NOBLOCK)
{
     5f8:	78 94       	sei
     5fa:	1f 92       	push	r1
     5fc:	0f 92       	push	r0
     5fe:	0f b6       	in	r0, 0x3f	; 63
     600:	0f 92       	push	r0
     602:	11 24       	eor	r1, r1
     604:	8f 93       	push	r24
     606:	9f 93       	push	r25
     608:	af 93       	push	r26
     60a:	bf 93       	push	r27
  ms_cnt++;
     60c:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
     610:	90 91 01 38 	lds	r25, 0x3801	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     614:	a0 91 02 38 	lds	r26, 0x3802	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     618:	b0 91 03 38 	lds	r27, 0x3803	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	a1 1d       	adc	r26, r1
     620:	b1 1d       	adc	r27, r1
     622:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
     626:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     62a:	a0 93 02 38 	sts	0x3802, r26	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     62e:	b0 93 03 38 	sts	0x3803, r27	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
  TCB0.INTFLAGS = (1 << TCB_CAPT_bp);
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <__RODATA_PM_OFFSET__+0x7f8a86>
}
     638:	bf 91       	pop	r27
     63a:	af 91       	pop	r26
     63c:	9f 91       	pop	r25
     63e:	8f 91       	pop	r24
     640:	0f 90       	pop	r0
     642:	0f be       	out	0x3f, r0	; 63
     644:	0f 90       	pop	r0
     646:	1f 90       	pop	r1
     648:	18 95       	reti

0000064a <bspInit>:



void bspInit(void)
{
	CCP = CCP_IOREG_gc;
     64a:	88 ed       	ldi	r24, 0xD8	; 216
     64c:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLA = (0 << CLKCTRL_CLKSEL_gp);
     64e:	e0 e6       	ldi	r30, 0x60	; 96
     650:	f0 e0       	ldi	r31, 0x00	; 0
     652:	10 82       	st	Z, r1

  CCP = CCP_IOREG_gc;
     654:	84 bf       	out	0x34, r24	; 52
  CLKCTRL.MCLKCTRLB = (0 << CLKCTRL_PEN_bp);
     656:	11 82       	std	Z+1, r1	; 0x01

  TCB0.CTRLA   = (0x00 << TCB_CLKSEL_gp);
     658:	e0 e8       	ldi	r30, 0x80	; 128
     65a:	fa e0       	ldi	r31, 0x0A	; 10
     65c:	10 82       	st	Z, r1
  TCB0.CTRLB   = (0x00 << TCB_CNTMODE_gp);
     65e:	11 82       	std	Z+1, r1	; 0x01
  TCB0.INTCTRL = (1 << TCB_CAPT_bp);
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	85 83       	std	Z+5, r24	; 0x05
  TCB0.CCMP    = (1000 * (F_CPU/1000000)) - 1;
     664:	8f e1       	ldi	r24, 0x1F	; 31
     666:	9e e4       	ldi	r25, 0x4E	; 78
     668:	84 87       	std	Z+12, r24	; 0x0c
     66a:	95 87       	std	Z+13, r25	; 0x0d
  TCB0.CTRLA  |= (1 << TCB_ENABLE_bp);
     66c:	80 81       	ld	r24, Z
     66e:	81 60       	ori	r24, 0x01	; 1
     670:	80 83       	st	Z, r24

  sei();
     672:	78 94       	sei
     674:	08 95       	ret

00000676 <millis>:
}

uint32_t millis(void)
{
	uint32_t ret;
  uint8_t old_sreg = SREG;
     676:	2f b7       	in	r18, 0x3f	; 63
 

  cli();
     678:	f8 94       	cli
  ret = ms_cnt;
     67a:	60 91 00 38 	lds	r22, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
     67e:	70 91 01 38 	lds	r23, 0x3801	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     682:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     686:	90 91 03 38 	lds	r25, 0x3803	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
  SREG = old_sreg;
     68a:	2f bf       	out	0x3f, r18	; 63
	
	return ret;
}
     68c:	08 95       	ret

0000068e <delay>:
  sei();
}


void delay(uint32_t ms)
{
     68e:	8f 92       	push	r8
     690:	9f 92       	push	r9
     692:	af 92       	push	r10
     694:	bf 92       	push	r11
     696:	cf 92       	push	r12
     698:	df 92       	push	r13
     69a:	ef 92       	push	r14
     69c:	ff 92       	push	r15
     69e:	4b 01       	movw	r8, r22
     6a0:	5c 01       	movw	r10, r24
	uint32_t pre_time = millis();
     6a2:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
     6a6:	6b 01       	movw	r12, r22
     6a8:	7c 01       	movw	r14, r24
	while(millis() - pre_time < ms)
     6aa:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
     6ae:	dc 01       	movw	r26, r24
     6b0:	cb 01       	movw	r24, r22
     6b2:	8c 19       	sub	r24, r12
     6b4:	9d 09       	sbc	r25, r13
     6b6:	ae 09       	sbc	r26, r14
     6b8:	bf 09       	sbc	r27, r15
     6ba:	88 15       	cp	r24, r8
     6bc:	99 05       	cpc	r25, r9
     6be:	aa 05       	cpc	r26, r10
     6c0:	bb 05       	cpc	r27, r11
     6c2:	98 f3       	brcs	.-26     	; 0x6aa <delay+0x1c>
	{

	}
}
     6c4:	ff 90       	pop	r15
     6c6:	ef 90       	pop	r14
     6c8:	df 90       	pop	r13
     6ca:	cf 90       	pop	r12
     6cc:	bf 90       	pop	r11
     6ce:	af 90       	pop	r10
     6d0:	9f 90       	pop	r9
     6d2:	8f 90       	pop	r8
     6d4:	08 95       	ret

000006d6 <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     6d6:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in  	= 0;
     6d8:	10 82       	st	Z, r1
     6da:	11 82       	std	Z+1, r1	; 0x01
     6dc:	12 82       	std	Z+2, r1	; 0x02
     6de:	13 82       	std	Z+3, r1	; 0x03
	p_node->out 	= 0;
     6e0:	14 82       	std	Z+4, r1	; 0x04
     6e2:	15 82       	std	Z+5, r1	; 0x05
     6e4:	16 82       	std	Z+6, r1	; 0x06
     6e6:	17 82       	std	Z+7, r1	; 0x07
	p_node->len 	= length;
     6e8:	20 87       	std	Z+8, r18	; 0x08
     6ea:	31 87       	std	Z+9, r19	; 0x09
     6ec:	42 87       	std	Z+10, r20	; 0x0a
     6ee:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     6f0:	64 87       	std	Z+12, r22	; 0x0c
     6f2:	75 87       	std	Z+13, r23	; 0x0d

	return ret;
}
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	08 95       	ret

000006f8 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     6f8:	4f 92       	push	r4
     6fa:	5f 92       	push	r5
     6fc:	6f 92       	push	r6
     6fe:	7f 92       	push	r7
     700:	af 92       	push	r10
     702:	bf 92       	push	r11
     704:	cf 92       	push	r12
     706:	df 92       	push	r13
     708:	ef 92       	push	r14
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	ec 01       	movw	r28, r24
     716:	5b 01       	movw	r10, r22
     718:	29 01       	movw	r4, r18
     71a:	3a 01       	movw	r6, r20
	bool ret = true;
	uint32_t next_in;

	for(int i=0; i<length; i++)
     71c:	00 e0       	ldi	r16, 0x00	; 0
     71e:	10 e0       	ldi	r17, 0x00	; 0
     720:	2c c0       	rjmp	.+88     	; 0x77a <qbufferWrite+0x82>
	{
		next_in = (p_node->in + 1) % p_node->len;
     722:	c8 80       	ld	r12, Y
     724:	d9 80       	ldd	r13, Y+1	; 0x01
     726:	ea 80       	ldd	r14, Y+2	; 0x02
     728:	fb 80       	ldd	r15, Y+3	; 0x03
     72a:	c7 01       	movw	r24, r14
     72c:	b6 01       	movw	r22, r12
     72e:	6f 5f       	subi	r22, 0xFF	; 255
     730:	7f 4f       	sbci	r23, 0xFF	; 255
     732:	8f 4f       	sbci	r24, 0xFF	; 255
     734:	9f 4f       	sbci	r25, 0xFF	; 255
     736:	28 85       	ldd	r18, Y+8	; 0x08
     738:	39 85       	ldd	r19, Y+9	; 0x09
     73a:	4a 85       	ldd	r20, Y+10	; 0x0a
     73c:	5b 85       	ldd	r21, Y+11	; 0x0b
     73e:	0e 94 ca 13 	call	0x2794	; 0x2794 <__udivmodsi4>

		if(next_in != p_node->out)
     742:	2c 81       	ldd	r18, Y+4	; 0x04
     744:	3d 81       	ldd	r19, Y+5	; 0x05
     746:	4e 81       	ldd	r20, Y+6	; 0x06
     748:	5f 81       	ldd	r21, Y+7	; 0x07
     74a:	62 17       	cp	r22, r18
     74c:	73 07       	cpc	r23, r19
     74e:	84 07       	cpc	r24, r20
     750:	95 07       	cpc	r25, r21
     752:	f9 f0       	breq	.+62     	; 0x792 <qbufferWrite+0x9a>
		{
			if(p_node->p_buf != NULL)
     754:	2c 85       	ldd	r18, Y+12	; 0x0c
     756:	3d 85       	ldd	r19, Y+13	; 0x0d
     758:	21 15       	cp	r18, r1
     75a:	31 05       	cpc	r19, r1
     75c:	41 f0       	breq	.+16     	; 0x76e <qbufferWrite+0x76>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     75e:	d9 01       	movw	r26, r18
     760:	ac 0d       	add	r26, r12
     762:	bd 1d       	adc	r27, r13
     764:	f5 01       	movw	r30, r10
     766:	e0 0f       	add	r30, r16
     768:	f1 1f       	adc	r31, r17
     76a:	20 81       	ld	r18, Z
     76c:	2c 93       	st	X, r18
			}
			p_node->in = next_in;
     76e:	68 83       	st	Y, r22
     770:	79 83       	std	Y+1, r23	; 0x01
     772:	8a 83       	std	Y+2, r24	; 0x02
     774:	9b 83       	std	Y+3, r25	; 0x03
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
	uint32_t next_in;

	for(int i=0; i<length; i++)
     776:	0f 5f       	subi	r16, 0xFF	; 255
     778:	1f 4f       	sbci	r17, 0xFF	; 255
     77a:	c8 01       	movw	r24, r16
     77c:	01 2e       	mov	r0, r17
     77e:	00 0c       	add	r0, r0
     780:	aa 0b       	sbc	r26, r26
     782:	bb 0b       	sbc	r27, r27
     784:	84 15       	cp	r24, r4
     786:	95 05       	cpc	r25, r5
     788:	a6 05       	cpc	r26, r6
     78a:	b7 05       	cpc	r27, r7
     78c:	50 f2       	brcs	.-108    	; 0x722 <qbufferWrite+0x2a>
	return ret;
}

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     78e:	81 e0       	ldi	r24, 0x01	; 1
     790:	01 c0       	rjmp	.+2      	; 0x794 <qbufferWrite+0x9c>
			}
			p_node->in = next_in;
		}
		else
		{
			ret = false;
     792:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	1f 91       	pop	r17
     79a:	0f 91       	pop	r16
     79c:	ff 90       	pop	r15
     79e:	ef 90       	pop	r14
     7a0:	df 90       	pop	r13
     7a2:	cf 90       	pop	r12
     7a4:	bf 90       	pop	r11
     7a6:	af 90       	pop	r10
     7a8:	7f 90       	pop	r7
     7aa:	6f 90       	pop	r6
     7ac:	5f 90       	pop	r5
     7ae:	4f 90       	pop	r4
     7b0:	08 95       	ret

000007b2 <qbufferRead>:

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     7b2:	4f 92       	push	r4
     7b4:	5f 92       	push	r5
     7b6:	6f 92       	push	r6
     7b8:	7f 92       	push	r7
     7ba:	8f 92       	push	r8
     7bc:	9f 92       	push	r9
     7be:	af 92       	push	r10
     7c0:	bf 92       	push	r11
     7c2:	ef 92       	push	r14
     7c4:	ff 92       	push	r15
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	ec 01       	movw	r28, r24
     7d0:	7b 01       	movw	r14, r22
     7d2:	49 01       	movw	r8, r18
     7d4:	5a 01       	movw	r10, r20
	bool ret = true;

	for(int i=0; i<length; i++)
     7d6:	00 e0       	ldi	r16, 0x00	; 0
     7d8:	10 e0       	ldi	r17, 0x00	; 0
     7da:	30 c0       	rjmp	.+96     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
	{
		if(p_node->p_buf != NULL)
     7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
     7de:	3d 85       	ldd	r19, Y+13	; 0x0d
     7e0:	21 15       	cp	r18, r1
     7e2:	31 05       	cpc	r19, r1
     7e4:	61 f0       	breq	.+24     	; 0x7fe <qbufferRead+0x4c>
		{
			p_data[i] = p_node->p_buf[p_node->out];
     7e6:	8c 81       	ldd	r24, Y+4	; 0x04
     7e8:	9d 81       	ldd	r25, Y+5	; 0x05
     7ea:	ae 81       	ldd	r26, Y+6	; 0x06
     7ec:	bf 81       	ldd	r27, Y+7	; 0x07
     7ee:	f9 01       	movw	r30, r18
     7f0:	e8 0f       	add	r30, r24
     7f2:	f9 1f       	adc	r31, r25
     7f4:	80 81       	ld	r24, Z
     7f6:	f7 01       	movw	r30, r14
     7f8:	e0 0f       	add	r30, r16
     7fa:	f1 1f       	adc	r31, r17
     7fc:	80 83       	st	Z, r24
		}

		if(p_node->out != p_node->in)
     7fe:	8c 81       	ldd	r24, Y+4	; 0x04
     800:	9d 81       	ldd	r25, Y+5	; 0x05
     802:	ae 81       	ldd	r26, Y+6	; 0x06
     804:	bf 81       	ldd	r27, Y+7	; 0x07
     806:	48 80       	ld	r4, Y
     808:	59 80       	ldd	r5, Y+1	; 0x01
     80a:	6a 80       	ldd	r6, Y+2	; 0x02
     80c:	7b 80       	ldd	r7, Y+3	; 0x03
     80e:	84 15       	cp	r24, r4
     810:	95 05       	cpc	r25, r5
     812:	a6 05       	cpc	r26, r6
     814:	b7 05       	cpc	r27, r7
     816:	f1 f0       	breq	.+60     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
     818:	bc 01       	movw	r22, r24
     81a:	cd 01       	movw	r24, r26
     81c:	6f 5f       	subi	r22, 0xFF	; 255
     81e:	7f 4f       	sbci	r23, 0xFF	; 255
     820:	8f 4f       	sbci	r24, 0xFF	; 255
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	28 85       	ldd	r18, Y+8	; 0x08
     826:	39 85       	ldd	r19, Y+9	; 0x09
     828:	4a 85       	ldd	r20, Y+10	; 0x0a
     82a:	5b 85       	ldd	r21, Y+11	; 0x0b
     82c:	0e 94 ca 13 	call	0x2794	; 0x2794 <__udivmodsi4>
     830:	6c 83       	std	Y+4, r22	; 0x04
     832:	7d 83       	std	Y+5, r23	; 0x05
     834:	8e 83       	std	Y+6, r24	; 0x06
     836:	9f 83       	std	Y+7, r25	; 0x07

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;

	for(int i=0; i<length; i++)
     838:	0f 5f       	subi	r16, 0xFF	; 255
     83a:	1f 4f       	sbci	r17, 0xFF	; 255
     83c:	c8 01       	movw	r24, r16
     83e:	01 2e       	mov	r0, r17
     840:	00 0c       	add	r0, r0
     842:	aa 0b       	sbc	r26, r26
     844:	bb 0b       	sbc	r27, r27
     846:	88 15       	cp	r24, r8
     848:	99 05       	cpc	r25, r9
     84a:	aa 05       	cpc	r26, r10
     84c:	bb 05       	cpc	r27, r11
     84e:	30 f2       	brcs	.-116    	; 0x7dc <qbufferRead+0x2a>
	return ret;
}

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	01 c0       	rjmp	.+2      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
		}
		else
		{
			ret = false;
     854:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	1f 91       	pop	r17
     85c:	0f 91       	pop	r16
     85e:	ff 90       	pop	r15
     860:	ef 90       	pop	r14
     862:	bf 90       	pop	r11
     864:	af 90       	pop	r10
     866:	9f 90       	pop	r9
     868:	8f 90       	pop	r8
     86a:	7f 90       	pop	r7
     86c:	6f 90       	pop	r6
     86e:	5f 90       	pop	r5
     870:	4f 90       	pop	r4
     872:	08 95       	ret

00000874 <qbufferAvailable>:

uint32_t qbufferAvailable(qbuffer_t *p_node)
{
     874:	0f 93       	push	r16
     876:	1f 93       	push	r17
     878:	fc 01       	movw	r30, r24
	uint32_t ret;

	ret = (p_node->in - p_node->out) % p_node->len;
     87a:	80 81       	ld	r24, Z
     87c:	91 81       	ldd	r25, Z+1	; 0x01
     87e:	a2 81       	ldd	r26, Z+2	; 0x02
     880:	b3 81       	ldd	r27, Z+3	; 0x03
     882:	04 81       	ldd	r16, Z+4	; 0x04
     884:	15 81       	ldd	r17, Z+5	; 0x05
     886:	26 81       	ldd	r18, Z+6	; 0x06
     888:	37 81       	ldd	r19, Z+7	; 0x07
     88a:	bc 01       	movw	r22, r24
     88c:	cd 01       	movw	r24, r26
     88e:	60 1b       	sub	r22, r16
     890:	71 0b       	sbc	r23, r17
     892:	82 0b       	sbc	r24, r18
     894:	93 0b       	sbc	r25, r19
     896:	20 85       	ldd	r18, Z+8	; 0x08
     898:	31 85       	ldd	r19, Z+9	; 0x09
     89a:	42 85       	ldd	r20, Z+10	; 0x0a
     89c:	53 85       	ldd	r21, Z+11	; 0x0b
     89e:	0e 94 ca 13 	call	0x2794	; 0x2794 <__udivmodsi4>

	return ret;
}
     8a2:	1f 91       	pop	r17
     8a4:	0f 91       	pop	r16
     8a6:	08 95       	ret

000008a8 <cliLineClean>:
	{
		ret = false;
	}

	return ret;
}
     8a8:	fc 01       	movw	r30, r24
     8aa:	ef 5a       	subi	r30, 0xAF	; 175
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	10 82       	st	Z, r1
     8b0:	31 97       	sbiw	r30, 0x01	; 1
     8b2:	10 82       	st	Z, r1
     8b4:	31 97       	sbiw	r30, 0x01	; 1
     8b6:	2f e2       	ldi	r18, 0x2F	; 47
     8b8:	20 83       	st	Z, r18
     8ba:	f0 97       	sbiw	r30, 0x30	; 48
     8bc:	10 82       	st	Z, r1
     8be:	08 95       	ret

000008c0 <cliLineAdd>:
     8c0:	fc 01       	movw	r30, r24
     8c2:	ef 5a       	subi	r30, 0xAF	; 175
     8c4:	fe 4f       	sbci	r31, 0xFE	; 254
     8c6:	50 81       	ld	r21, Z
     8c8:	25 2f       	mov	r18, r21
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	43 e3       	ldi	r20, 0x33	; 51
     8ce:	42 9f       	mul	r20, r18
     8d0:	d0 01       	movw	r26, r0
     8d2:	43 9f       	mul	r20, r19
     8d4:	b0 0d       	add	r27, r0
     8d6:	11 24       	eor	r1, r1
     8d8:	a8 0f       	add	r26, r24
     8da:	b9 1f       	adc	r27, r25
     8dc:	ad 5a       	subi	r26, 0xAD	; 173
     8de:	be 4f       	sbci	r27, 0xFE	; 254
     8e0:	e2 53       	subi	r30, 0x32	; 50
     8e2:	ff 4f       	sbci	r31, 0xFF	; 255
     8e4:	01 90       	ld	r0, Z+
     8e6:	0d 92       	st	X+, r0
     8e8:	4a 95       	dec	r20
     8ea:	e1 f7       	brne	.-8      	; 0x8e4 <cliLineAdd+0x24>
     8ec:	fc 01       	movw	r30, r24
     8ee:	ee 5a       	subi	r30, 0xAE	; 174
     8f0:	fe 4f       	sbci	r31, 0xFE	; 254
     8f2:	40 81       	ld	r20, Z
     8f4:	44 30       	cpi	r20, 0x04	; 4
     8f6:	10 f4       	brcc	.+4      	; 0x8fc <cliLineAdd+0x3c>
     8f8:	4f 5f       	subi	r20, 0xFF	; 255
     8fa:	40 83       	st	Z, r20
     8fc:	fc 01       	movw	r30, r24
     8fe:	e0 5b       	subi	r30, 0xB0	; 176
     900:	fe 4f       	sbci	r31, 0xFE	; 254
     902:	50 83       	st	Z, r21
     904:	2f 5f       	subi	r18, 0xFF	; 255
     906:	3f 4f       	sbci	r19, 0xFF	; 255
     908:	23 70       	andi	r18, 0x03	; 3
     90a:	30 78       	andi	r19, 0x80	; 128
     90c:	33 23       	and	r19, r19
     90e:	34 f4       	brge	.+12     	; 0x91c <cliLineAdd+0x5c>
     910:	21 50       	subi	r18, 0x01	; 1
     912:	31 09       	sbc	r19, r1
     914:	2c 6f       	ori	r18, 0xFC	; 252
     916:	3f 6f       	ori	r19, 0xFF	; 255
     918:	2f 5f       	subi	r18, 0xFF	; 255
     91a:	3f 4f       	sbci	r19, 0xFF	; 255
     91c:	fc 01       	movw	r30, r24
     91e:	ef 5a       	subi	r30, 0xAF	; 175
     920:	fe 4f       	sbci	r31, 0xFE	; 254
     922:	20 83       	st	Z, r18
     924:	32 97       	sbiw	r30, 0x02	; 2
     926:	21 e0       	ldi	r18, 0x01	; 1
     928:	20 83       	st	Z, r18
     92a:	08 95       	ret

0000092c <cliToUpper>:
     92c:	fc 01       	movw	r30, r24
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	0e c0       	rjmp	.+28     	; 0x950 <cliToUpper+0x24>
     934:	df 01       	movw	r26, r30
     936:	a2 0f       	add	r26, r18
     938:	b3 1f       	adc	r27, r19
     93a:	9c 91       	ld	r25, X
     93c:	99 23       	and	r25, r25
     93e:	59 f0       	breq	.+22     	; 0x956 <cliToUpper+0x2a>
     940:	4f e9       	ldi	r20, 0x9F	; 159
     942:	49 0f       	add	r20, r25
     944:	4a 31       	cpi	r20, 0x1A	; 26
     946:	08 f4       	brcc	.+2      	; 0x94a <cliToUpper+0x1e>
     948:	90 52       	subi	r25, 0x20	; 32
     94a:	9c 93       	st	X, r25
     94c:	2f 5f       	subi	r18, 0xFF	; 255
     94e:	3f 4f       	sbci	r19, 0xFF	; 255
     950:	2e 30       	cpi	r18, 0x0E	; 14
     952:	31 05       	cpc	r19, r1
     954:	78 f3       	brcs	.-34     	; 0x934 <cliToUpper+0x8>
     956:	2e 30       	cpi	r18, 0x0E	; 14
     958:	31 05       	cpc	r19, r1
     95a:	29 f4       	brne	.+10     	; 0x966 <cliToUpper+0x3a>
     95c:	21 50       	subi	r18, 0x01	; 1
     95e:	31 09       	sbc	r19, r1
     960:	e2 0f       	add	r30, r18
     962:	f3 1f       	adc	r31, r19
     964:	10 82       	st	Z, r1
     966:	08 95       	ret

00000968 <cliArgsGetStr>:
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     96e:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     972:	82 17       	cp	r24, r18
     974:	93 07       	cpc	r25, r19
     976:	58 f4       	brcc	.+22     	; 0x98e <cliArgsGetStr+0x26>
     978:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     97c:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     980:	88 0f       	add	r24, r24
     982:	99 1f       	adc	r25, r25
     984:	e8 0f       	add	r30, r24
     986:	f9 1f       	adc	r31, r25
     988:	80 81       	ld	r24, Z
     98a:	91 81       	ldd	r25, Z+1	; 0x01
     98c:	08 95       	ret
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	08 95       	ret

00000994 <cliArgsIsStr>:
     994:	28 2f       	mov	r18, r24
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	80 91 5a 3b 	lds	r24, 0x3B5A	; 0x803b5a <cli_node+0x354>
     99c:	90 91 5b 3b 	lds	r25, 0x3B5B	; 0x803b5b <cli_node+0x355>
     9a0:	28 17       	cp	r18, r24
     9a2:	39 07       	cpc	r19, r25
     9a4:	88 f4       	brcc	.+34     	; 0x9c8 <cliArgsIsStr+0x34>
     9a6:	cb 01       	movw	r24, r22
     9a8:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     9ac:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     9b0:	22 0f       	add	r18, r18
     9b2:	33 1f       	adc	r19, r19
     9b4:	e2 0f       	add	r30, r18
     9b6:	f3 1f       	adc	r31, r19
     9b8:	60 81       	ld	r22, Z
     9ba:	71 81       	ldd	r23, Z+1	; 0x01
     9bc:	0e 94 82 16 	call	0x2d04	; 0x2d04 <strcmp>
     9c0:	89 2b       	or	r24, r25
     9c2:	21 f0       	breq	.+8      	; 0x9cc <cliArgsIsStr+0x38>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	08 95       	ret
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	08 95       	ret
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	08 95       	ret

000009d0 <cliArgsGetFloat>:
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     9d6:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     9da:	82 17       	cp	r24, r18
     9dc:	93 07       	cpc	r25, r19
     9de:	78 f4       	brcc	.+30     	; 0x9fe <cliArgsGetFloat+0x2e>
     9e0:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     9e4:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     9e8:	88 0f       	add	r24, r24
     9ea:	99 1f       	adc	r25, r25
     9ec:	e8 0f       	add	r30, r24
     9ee:	f9 1f       	adc	r31, r25
     9f0:	60 e0       	ldi	r22, 0x00	; 0
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	80 81       	ld	r24, Z
     9f6:	91 81       	ldd	r25, Z+1	; 0x01
     9f8:	0e 94 00 14 	call	0x2800	; 0x2800 <strtod>
     9fc:	08 95       	ret
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	cb 01       	movw	r24, r22
     a04:	08 95       	ret

00000a06 <cliArgsGetData>:
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     a0c:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     a10:	82 17       	cp	r24, r18
     a12:	93 07       	cpc	r25, r19
     a14:	88 f4       	brcc	.+34     	; 0xa38 <cliArgsGetData+0x32>
     a16:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     a1a:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	e8 0f       	add	r30, r24
     a24:	f9 1f       	adc	r31, r25
     a26:	40 e0       	ldi	r20, 0x00	; 0
     a28:	50 e0       	ldi	r21, 0x00	; 0
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	80 81       	ld	r24, Z
     a30:	91 81       	ldd	r25, Z+1	; 0x01
     a32:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <strtoul>
     a36:	08 95       	ret
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	08 95       	ret

00000a42 <cliLineChange>:
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	fc 01       	movw	r30, r24
     a4a:	ee 5a       	subi	r30, 0xAE	; 174
     a4c:	fe 4f       	sbci	r31, 0xFE	; 254
     a4e:	20 81       	ld	r18, Z
     a50:	22 23       	and	r18, r18
     a52:	09 f4       	brne	.+2      	; 0xa56 <cliLineChange+0x14>
     a54:	74 c0       	rjmp	.+232    	; 0xb3e <cliLineChange+0xfc>
     a56:	16 2f       	mov	r17, r22
     a58:	ec 01       	movw	r28, r24
     a5a:	e2 50       	subi	r30, 0x02	; 2
     a5c:	ff 4f       	sbci	r31, 0xFF	; 255
     a5e:	80 81       	ld	r24, Z
     a60:	88 23       	and	r24, r24
     a62:	79 f0       	breq	.+30     	; 0xa82 <cliLineChange+0x40>
     a64:	1f 92       	push	r1
     a66:	8f 93       	push	r24
     a68:	86 e6       	ldi	r24, 0x66	; 102
     a6a:	94 eb       	ldi	r25, 0xB4	; 180
     a6c:	9f 93       	push	r25
     a6e:	8f 93       	push	r24
     a70:	88 81       	ld	r24, Y
     a72:	8f 93       	push	r24
     a74:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
     a78:	0f 90       	pop	r0
     a7a:	0f 90       	pop	r0
     a7c:	0f 90       	pop	r0
     a7e:	0f 90       	pop	r0
     a80:	0f 90       	pop	r0
     a82:	fe 01       	movw	r30, r28
     a84:	ef 5a       	subi	r30, 0xAF	; 175
     a86:	fd 4f       	sbci	r31, 0xFD	; 253
     a88:	80 81       	ld	r24, Z
     a8a:	88 23       	and	r24, r24
     a8c:	79 f0       	breq	.+30     	; 0xaac <cliLineChange+0x6a>
     a8e:	1f 92       	push	r1
     a90:	8f 93       	push	r24
     a92:	8c e6       	ldi	r24, 0x6C	; 108
     a94:	94 eb       	ldi	r25, 0xB4	; 180
     a96:	9f 93       	push	r25
     a98:	8f 93       	push	r24
     a9a:	88 81       	ld	r24, Y
     a9c:	8f 93       	push	r24
     a9e:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
     aa2:	0f 90       	pop	r0
     aa4:	0f 90       	pop	r0
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	11 30       	cpi	r17, 0x01	; 1
     aae:	f1 f4       	brne	.+60     	; 0xaec <cliLineChange+0xaa>
     ab0:	fe 01       	movw	r30, r28
     ab2:	e1 5b       	subi	r30, 0xB1	; 177
     ab4:	fe 4f       	sbci	r31, 0xFE	; 254
     ab6:	80 81       	ld	r24, Z
     ab8:	88 23       	and	r24, r24
     aba:	21 f0       	breq	.+8      	; 0xac4 <cliLineChange+0x82>
     abc:	32 96       	adiw	r30, 0x02	; 2
     abe:	80 81       	ld	r24, Z
     ac0:	31 97       	sbiw	r30, 0x01	; 1
     ac2:	80 83       	st	Z, r24
     ac4:	fe 01       	movw	r30, r28
     ac6:	e0 5b       	subi	r30, 0xB0	; 176
     ac8:	fe 4f       	sbci	r31, 0xFE	; 254
     aca:	80 81       	ld	r24, Z
     acc:	de 01       	movw	r26, r28
     ace:	ae 5a       	subi	r26, 0xAE	; 174
     ad0:	be 4f       	sbci	r27, 0xFE	; 254
     ad2:	6c 91       	ld	r22, X
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	9b 01       	movw	r18, r22
     ad8:	28 0f       	add	r18, r24
     ada:	31 1d       	adc	r19, r1
     adc:	87 fd       	sbrc	r24, 7
     ade:	3a 95       	dec	r19
     ae0:	c9 01       	movw	r24, r18
     ae2:	01 97       	sbiw	r24, 0x01	; 1
     ae4:	0e 94 b6 13 	call	0x276c	; 0x276c <__divmodhi4>
     ae8:	80 83       	st	Z, r24
     aea:	10 c0       	rjmp	.+32     	; 0xb0c <cliLineChange+0xca>
     aec:	fe 01       	movw	r30, r28
     aee:	e0 5b       	subi	r30, 0xB0	; 176
     af0:	fe 4f       	sbci	r31, 0xFE	; 254
     af2:	80 81       	ld	r24, Z
     af4:	08 2e       	mov	r0, r24
     af6:	00 0c       	add	r0, r0
     af8:	99 0b       	sbc	r25, r25
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	de 01       	movw	r26, r28
     afe:	ae 5a       	subi	r26, 0xAE	; 174
     b00:	be 4f       	sbci	r27, 0xFE	; 254
     b02:	6c 91       	ld	r22, X
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	0e 94 b6 13 	call	0x276c	; 0x276c <__divmodhi4>
     b0a:	80 83       	st	Z, r24
     b0c:	de 01       	movw	r26, r28
     b0e:	a1 5e       	subi	r26, 0xE1	; 225
     b10:	bd 4f       	sbci	r27, 0xFD	; 253
     b12:	fe 01       	movw	r30, r28
     b14:	33 e3       	ldi	r19, 0x33	; 51
     b16:	83 9f       	mul	r24, r19
     b18:	e0 0d       	add	r30, r0
     b1a:	f1 1d       	adc	r31, r1
     b1c:	11 24       	eor	r1, r1
     b1e:	ed 5a       	subi	r30, 0xAD	; 173
     b20:	fe 4f       	sbci	r31, 0xFE	; 254
     b22:	83 e3       	ldi	r24, 0x33	; 51
     b24:	01 90       	ld	r0, Z+
     b26:	0d 92       	st	X+, r0
     b28:	8a 95       	dec	r24
     b2a:	e1 f7       	brne	.-8      	; 0xb24 <cliLineChange+0xe2>
     b2c:	fe 01       	movw	r30, r28
     b2e:	ef 5a       	subi	r30, 0xAF	; 175
     b30:	fd 4f       	sbci	r31, 0xFD	; 253
     b32:	80 81       	ld	r24, Z
     b34:	31 97       	sbiw	r30, 0x01	; 1
     b36:	80 83       	st	Z, r24
     b38:	c1 5b       	subi	r28, 0xB1	; 177
     b3a:	de 4f       	sbci	r29, 0xFE	; 254
     b3c:	18 82       	st	Y, r1
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <cliParseArgs>:
     b46:	cf 92       	push	r12
     b48:	df 92       	push	r13
     b4a:	ef 92       	push	r14
     b4c:	ff 92       	push	r15
     b4e:	0f 93       	push	r16
     b50:	1f 93       	push	r17
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
     b56:	00 d0       	rcall	.+0      	; 0xb58 <cliParseArgs+0x12>
     b58:	cd b7       	in	r28, 0x3d	; 61
     b5a:	de b7       	in	r29, 0x3e	; 62
     b5c:	6c 01       	movw	r12, r24
     b5e:	fc 01       	movw	r30, r24
     b60:	e3 5f       	subi	r30, 0xF3	; 243
     b62:	fe 4f       	sbci	r31, 0xFE	; 254
     b64:	10 82       	st	Z, r1
     b66:	11 82       	std	Z+1, r1	; 0x01
     b68:	7c 01       	movw	r14, r24
     b6a:	81 ef       	ldi	r24, 0xF1	; 241
     b6c:	e8 1a       	sub	r14, r24
     b6e:	8e ef       	ldi	r24, 0xFE	; 254
     b70:	f8 0a       	sbc	r15, r24
     b72:	f7 01       	movw	r30, r14
     b74:	10 82       	st	Z, r1
     b76:	11 82       	std	Z+1, r1	; 0x01
     b78:	ae 01       	movw	r20, r28
     b7a:	4f 5f       	subi	r20, 0xFF	; 255
     b7c:	5f 4f       	sbci	r21, 0xFF	; 255
     b7e:	62 e7       	ldi	r22, 0x72	; 114
     b80:	74 eb       	ldi	r23, 0xB4	; 180
     b82:	c6 01       	movw	r24, r12
     b84:	81 5e       	subi	r24, 0xE1	; 225
     b86:	9d 4f       	sbci	r25, 0xFD	; 253
     b88:	0e 94 92 16 	call	0x2d24	; 0x2d24 <strtok_r>
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	14 c0       	rjmp	.+40     	; 0xbba <cliParseArgs+0x74>
     b92:	89 01       	movw	r16, r18
     b94:	0f 5f       	subi	r16, 0xFF	; 255
     b96:	1f 4f       	sbci	r17, 0xFF	; 255
     b98:	22 0f       	add	r18, r18
     b9a:	33 1f       	adc	r19, r19
     b9c:	f7 01       	movw	r30, r14
     b9e:	e2 0f       	add	r30, r18
     ba0:	f3 1f       	adc	r31, r19
     ba2:	80 83       	st	Z, r24
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	ae 01       	movw	r20, r28
     ba8:	4f 5f       	subi	r20, 0xFF	; 255
     baa:	5f 4f       	sbci	r21, 0xFF	; 255
     bac:	62 e7       	ldi	r22, 0x72	; 114
     bae:	74 eb       	ldi	r23, 0xB4	; 180
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	0e 94 92 16 	call	0x2d24	; 0x2d24 <strtok_r>
     bb8:	98 01       	movw	r18, r16
     bba:	00 97       	sbiw	r24, 0x00	; 0
     bbc:	51 f7       	brne	.-44     	; 0xb92 <cliParseArgs+0x4c>
     bbe:	f6 01       	movw	r30, r12
     bc0:	e3 5f       	subi	r30, 0xF3	; 243
     bc2:	fe 4f       	sbci	r31, 0xFE	; 254
     bc4:	20 83       	st	Z, r18
     bc6:	31 83       	std	Z+1, r19	; 0x01
     bc8:	23 2b       	or	r18, r19
     bca:	11 f4       	brne	.+4      	; 0xbd0 <cliParseArgs+0x8a>
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	01 c0       	rjmp	.+2      	; 0xbd2 <cliParseArgs+0x8c>
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	0f 90       	pop	r0
     bd4:	0f 90       	pop	r0
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	1f 91       	pop	r17
     bdc:	0f 91       	pop	r16
     bde:	ff 90       	pop	r15
     be0:	ef 90       	pop	r14
     be2:	df 90       	pop	r13
     be4:	cf 90       	pop	r12
     be6:	08 95       	ret

00000be8 <cliOpen>:
     be8:	0f 93       	push	r16
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	e6 e0       	ldi	r30, 0x06	; 6
     bf2:	f8 e3       	ldi	r31, 0x38	; 56
     bf4:	80 83       	st	Z, r24
     bf6:	95 81       	ldd	r25, Z+5	; 0x05
     bf8:	99 23       	and	r25, r25
     bfa:	69 f0       	breq	.+26     	; 0xc16 <cliOpen+0x2e>
     bfc:	00 91 07 38 	lds	r16, 0x3807	; 0x803807 <cli_node+0x1>
     c00:	10 91 08 38 	lds	r17, 0x3808	; 0x803808 <cli_node+0x2>
     c04:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <cli_node+0x3>
     c08:	30 91 0a 38 	lds	r19, 0x380A	; 0x80380a <cli_node+0x4>
     c0c:	04 17       	cp	r16, r20
     c0e:	15 07       	cpc	r17, r21
     c10:	26 07       	cpc	r18, r22
     c12:	37 07       	cpc	r19, r23
     c14:	49 f0       	breq	.+18     	; 0xc28 <cliOpen+0x40>
     c16:	c6 e0       	ldi	r28, 0x06	; 6
     c18:	d8 e3       	ldi	r29, 0x38	; 56
     c1a:	49 83       	std	Y+1, r20	; 0x01
     c1c:	5a 83       	std	Y+2, r21	; 0x02
     c1e:	6b 83       	std	Y+3, r22	; 0x03
     c20:	7c 83       	std	Y+4, r23	; 0x04
     c22:	0e 94 58 10 	call	0x20b0	; 0x20b0 <uartOpen>
     c26:	8d 83       	std	Y+5, r24	; 0x05
     c28:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <cli_node+0x5>
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	08 95       	ret

00000c36 <cliPrintf>:
     c36:	cf 93       	push	r28
     c38:	df 93       	push	r29
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	9e 01       	movw	r18, r28
     c40:	2b 5f       	subi	r18, 0xFB	; 251
     c42:	3f 4f       	sbci	r19, 0xFF	; 255
     c44:	f9 01       	movw	r30, r18
     c46:	41 91       	ld	r20, Z+
     c48:	51 91       	ld	r21, Z+
     c4a:	9f 01       	movw	r18, r30
     c4c:	60 e0       	ldi	r22, 0x00	; 0
     c4e:	71 e0       	ldi	r23, 0x01	; 1
     c50:	83 e1       	ldi	r24, 0x13	; 19
     c52:	98 e3       	ldi	r25, 0x38	; 56
     c54:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <vsnprintf>
     c58:	9c 01       	movw	r18, r24
     c5a:	99 0f       	add	r25, r25
     c5c:	44 0b       	sbc	r20, r20
     c5e:	55 0b       	sbc	r21, r21
     c60:	63 e1       	ldi	r22, 0x13	; 19
     c62:	78 e3       	ldi	r23, 0x38	; 56
     c64:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
     c68:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <cliPrintf_P>:
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	9e 01       	movw	r18, r28
     c7c:	2b 5f       	subi	r18, 0xFB	; 251
     c7e:	3f 4f       	sbci	r19, 0xFF	; 255
     c80:	f9 01       	movw	r30, r18
     c82:	41 91       	ld	r20, Z+
     c84:	51 91       	ld	r21, Z+
     c86:	9f 01       	movw	r18, r30
     c88:	60 e0       	ldi	r22, 0x00	; 0
     c8a:	71 e0       	ldi	r23, 0x01	; 1
     c8c:	83 e1       	ldi	r24, 0x13	; 19
     c8e:	98 e3       	ldi	r25, 0x38	; 56
     c90:	0e 94 ed 16 	call	0x2dda	; 0x2dda <vsnprintf_P>
     c94:	9c 01       	movw	r18, r24
     c96:	99 0f       	add	r25, r25
     c98:	44 0b       	sbc	r20, r20
     c9a:	55 0b       	sbc	r21, r21
     c9c:	63 e1       	ldi	r22, 0x13	; 19
     c9e:	78 e3       	ldi	r23, 0x38	; 56
     ca0:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
     ca4:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
     ca8:	df 91       	pop	r29
     caa:	cf 91       	pop	r28
     cac:	08 95       	ret

00000cae <cliRunCmd>:
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	8c 01       	movw	r16, r24
     cb8:	0e 94 a3 05 	call	0xb46	; 0xb46 <cliParseArgs>
     cbc:	88 23       	and	r24, r24
     cbe:	09 f4       	brne	.+2      	; 0xcc2 <cliRunCmd+0x14>
     cc0:	50 c0       	rjmp	.+160    	; 0xd62 <cliRunCmd+0xb4>
     cc2:	85 e6       	ldi	r24, 0x65	; 101
     cc4:	91 e0       	ldi	r25, 0x01	; 1
     cc6:	9f 93       	push	r25
     cc8:	8f 93       	push	r24
     cca:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     cce:	f8 01       	movw	r30, r16
     cd0:	e1 5f       	subi	r30, 0xF1	; 241
     cd2:	fe 4f       	sbci	r31, 0xFE	; 254
     cd4:	80 81       	ld	r24, Z
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	0e 94 96 04 	call	0x92c	; 0x92c <cliToUpper>
     cdc:	0f 90       	pop	r0
     cde:	0f 90       	pop	r0
     ce0:	c0 e0       	ldi	r28, 0x00	; 0
     ce2:	d0 e0       	ldi	r29, 0x00	; 0
     ce4:	36 c0       	rjmp	.+108    	; 0xd52 <cliRunCmd+0xa4>
     ce6:	be 01       	movw	r22, r28
     ce8:	62 95       	swap	r22
     cea:	72 95       	swap	r23
     cec:	70 7f       	andi	r23, 0xF0	; 240
     cee:	76 27       	eor	r23, r22
     cf0:	60 7f       	andi	r22, 0xF0	; 240
     cf2:	76 27       	eor	r23, r22
     cf4:	6c 5a       	subi	r22, 0xAC	; 172
     cf6:	7d 4f       	sbci	r23, 0xFD	; 253
     cf8:	60 0f       	add	r22, r16
     cfa:	71 1f       	adc	r23, r17
     cfc:	f8 01       	movw	r30, r16
     cfe:	e1 5f       	subi	r30, 0xF1	; 241
     d00:	fe 4f       	sbci	r31, 0xFE	; 254
     d02:	80 81       	ld	r24, Z
     d04:	91 81       	ldd	r25, Z+1	; 0x01
     d06:	0e 94 82 16 	call	0x2d04	; 0x2d04 <strcmp>
     d0a:	89 2b       	or	r24, r25
     d0c:	09 f5       	brne	.+66     	; 0xd50 <cliRunCmd+0xa2>
     d0e:	f8 01       	movw	r30, r16
     d10:	e3 5f       	subi	r30, 0xF3	; 243
     d12:	fe 4f       	sbci	r31, 0xFE	; 254
     d14:	20 81       	ld	r18, Z
     d16:	31 81       	ldd	r19, Z+1	; 0x01
     d18:	21 50       	subi	r18, 0x01	; 1
     d1a:	31 09       	sbc	r19, r1
     d1c:	c8 01       	movw	r24, r16
     d1e:	8c 5a       	subi	r24, 0xAC	; 172
     d20:	9c 4f       	sbci	r25, 0xFC	; 252
     d22:	fc 01       	movw	r30, r24
     d24:	20 83       	st	Z, r18
     d26:	31 83       	std	Z+1, r19	; 0x01
     d28:	98 01       	movw	r18, r16
     d2a:	2f 5e       	subi	r18, 0xEF	; 239
     d2c:	3e 4f       	sbci	r19, 0xFE	; 254
     d2e:	32 96       	adiw	r30, 0x02	; 2
     d30:	20 83       	st	Z, r18
     d32:	31 83       	std	Z+1, r19	; 0x01
     d34:	c2 95       	swap	r28
     d36:	d2 95       	swap	r29
     d38:	d0 7f       	andi	r29, 0xF0	; 240
     d3a:	dc 27       	eor	r29, r28
     d3c:	c0 7f       	andi	r28, 0xF0	; 240
     d3e:	dc 27       	eor	r29, r28
     d40:	c0 0f       	add	r28, r16
     d42:	d1 1f       	adc	r29, r17
     d44:	ce 59       	subi	r28, 0x9E	; 158
     d46:	dd 4f       	sbci	r29, 0xFD	; 253
     d48:	e8 81       	ld	r30, Y
     d4a:	f9 81       	ldd	r31, Y+1	; 0x01
     d4c:	09 95       	icall
     d4e:	09 c0       	rjmp	.+18     	; 0xd62 <cliRunCmd+0xb4>
     d50:	21 96       	adiw	r28, 0x01	; 1
     d52:	f8 01       	movw	r30, r16
     d54:	ee 5a       	subi	r30, 0xAE	; 174
     d56:	fd 4f       	sbci	r31, 0xFD	; 253
     d58:	80 81       	ld	r24, Z
     d5a:	91 81       	ldd	r25, Z+1	; 0x01
     d5c:	c8 17       	cp	r28, r24
     d5e:	d9 07       	cpc	r29, r25
     d60:	10 f2       	brcs	.-124    	; 0xce6 <cliRunCmd+0x38>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	1f 91       	pop	r17
     d6a:	0f 91       	pop	r16
     d6c:	08 95       	ret

00000d6e <cliShowPrompt>:
     d6e:	82 e6       	ldi	r24, 0x62	; 98
     d70:	91 e0       	ldi	r25, 0x01	; 1
     d72:	9f 93       	push	r25
     d74:	8f 93       	push	r24
     d76:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     d7a:	8c e5       	ldi	r24, 0x5C	; 92
     d7c:	91 e0       	ldi	r25, 0x01	; 1
     d7e:	9f 93       	push	r25
     d80:	8f 93       	push	r24
     d82:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     d86:	0f 90       	pop	r0
     d88:	0f 90       	pop	r0
     d8a:	0f 90       	pop	r0
     d8c:	0f 90       	pop	r0
     d8e:	08 95       	ret

00000d90 <cliUpdate>:
     d90:	ef 92       	push	r14
     d92:	ff 92       	push	r15
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	cd b7       	in	r28, 0x3d	; 61
     d9e:	de b7       	in	r29, 0x3e	; 62
     da0:	29 97       	sbiw	r28, 0x09	; 9
     da2:	cd bf       	out	0x3d, r28	; 61
     da4:	de bf       	out	0x3e, r29	; 62
     da6:	8c 01       	movw	r16, r24
     da8:	69 87       	std	Y+9, r22	; 0x09
     daa:	dc 01       	movw	r26, r24
     dac:	1c 96       	adiw	r26, 0x0c	; 12
     dae:	8c 91       	ld	r24, X
     db0:	81 11       	cpse	r24, r1
     db2:	16 c1       	rjmp	.+556    	; 0xfe0 <cliUpdate+0x250>
     db4:	6d 30       	cpi	r22, 0x0D	; 13
     db6:	51 f0       	breq	.+20     	; 0xdcc <cliUpdate+0x3c>
     db8:	20 f4       	brcc	.+8      	; 0xdc2 <cliUpdate+0x32>
     dba:	68 30       	cpi	r22, 0x08	; 8
     dbc:	09 f4       	brne	.+2      	; 0xdc0 <cliUpdate+0x30>
     dbe:	56 c0       	rjmp	.+172    	; 0xe6c <cliUpdate+0xdc>
     dc0:	a2 c0       	rjmp	.+324    	; 0xf06 <cliUpdate+0x176>
     dc2:	6b 31       	cpi	r22, 0x1B	; 27
     dc4:	c9 f0       	breq	.+50     	; 0xdf8 <cliUpdate+0x68>
     dc6:	6f 37       	cpi	r22, 0x7F	; 127
     dc8:	d9 f0       	breq	.+54     	; 0xe00 <cliUpdate+0x70>
     dca:	9d c0       	rjmp	.+314    	; 0xf06 <cliUpdate+0x176>
     dcc:	f8 01       	movw	r30, r16
     dce:	e1 5e       	subi	r30, 0xE1	; 225
     dd0:	fd 4f       	sbci	r31, 0xFD	; 253
     dd2:	82 a9       	ldd	r24, Z+50	; 0x32
     dd4:	88 23       	and	r24, r24
     dd6:	31 f0       	breq	.+12     	; 0xde4 <cliUpdate+0x54>
     dd8:	c8 01       	movw	r24, r16
     dda:	0e 94 60 04 	call	0x8c0	; 0x8c0 <cliLineAdd>
     dde:	c8 01       	movw	r24, r16
     de0:	0e 94 57 06 	call	0xcae	; 0xcae <cliRunCmd>
     de4:	f8 01       	movw	r30, r16
     de6:	e1 5e       	subi	r30, 0xE1	; 225
     de8:	fd 4f       	sbci	r31, 0xFD	; 253
     dea:	12 aa       	std	Z+50, r1	; 0x32
     dec:	11 aa       	std	Z+49, r1	; 0x31
     dee:	10 82       	st	Z, r1
     df0:	c8 01       	movw	r24, r16
     df2:	0e 94 b7 06 	call	0xd6e	; 0xd6e <cliShowPrompt>
     df6:	f4 c0       	rjmp	.+488    	; 0xfe0 <cliUpdate+0x250>
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	f8 01       	movw	r30, r16
     dfc:	84 87       	std	Z+12, r24	; 0x0c
     dfe:	f0 c0       	rjmp	.+480    	; 0xfe0 <cliUpdate+0x250>
     e00:	f8 01       	movw	r30, r16
     e02:	e1 5e       	subi	r30, 0xE1	; 225
     e04:	fd 4f       	sbci	r31, 0xFD	; 253
     e06:	61 a9       	ldd	r22, Z+49	; 0x31
     e08:	f2 a8       	ldd	r15, Z+50	; 0x32
     e0a:	6f 15       	cp	r22, r15
     e0c:	08 f0       	brcs	.+2      	; 0xe10 <cliUpdate+0x80>
     e0e:	e8 c0       	rjmp	.+464    	; 0xfe0 <cliUpdate+0x250>
     e10:	7f 2d       	mov	r23, r15
     e12:	76 1b       	sub	r23, r22
     e14:	21 e0       	ldi	r18, 0x01	; 1
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	12 c0       	rjmp	.+36     	; 0xe3e <cliUpdate+0xae>
     e1a:	c9 01       	movw	r24, r18
     e1c:	86 0f       	add	r24, r22
     e1e:	91 1d       	adc	r25, r1
     e20:	ac 01       	movw	r20, r24
     e22:	41 50       	subi	r20, 0x01	; 1
     e24:	51 09       	sbc	r21, r1
     e26:	f8 01       	movw	r30, r16
     e28:	e1 5e       	subi	r30, 0xE1	; 225
     e2a:	fd 4f       	sbci	r31, 0xFD	; 253
     e2c:	df 01       	movw	r26, r30
     e2e:	a8 0f       	add	r26, r24
     e30:	b9 1f       	adc	r27, r25
     e32:	8c 91       	ld	r24, X
     e34:	e4 0f       	add	r30, r20
     e36:	f5 1f       	adc	r31, r21
     e38:	80 83       	st	Z, r24
     e3a:	2f 5f       	subi	r18, 0xFF	; 255
     e3c:	3f 4f       	sbci	r19, 0xFF	; 255
     e3e:	87 2f       	mov	r24, r23
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	28 17       	cp	r18, r24
     e44:	39 07       	cpc	r19, r25
     e46:	4c f3       	brlt	.-46     	; 0xe1a <cliUpdate+0x8a>
     e48:	af ef       	ldi	r26, 0xFF	; 255
     e4a:	af 0d       	add	r26, r15
     e4c:	f8 01       	movw	r30, r16
     e4e:	e1 5e       	subi	r30, 0xE1	; 225
     e50:	fd 4f       	sbci	r31, 0xFD	; 253
     e52:	a2 ab       	std	Z+50, r26	; 0x32
     e54:	ea 0f       	add	r30, r26
     e56:	f1 1d       	adc	r31, r1
     e58:	10 82       	st	Z, r1
     e5a:	8b e7       	ldi	r24, 0x7B	; 123
     e5c:	91 e0       	ldi	r25, 0x01	; 1
     e5e:	9f 93       	push	r25
     e60:	8f 93       	push	r24
     e62:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     e66:	0f 90       	pop	r0
     e68:	0f 90       	pop	r0
     e6a:	ba c0       	rjmp	.+372    	; 0xfe0 <cliUpdate+0x250>
     e6c:	f8 01       	movw	r30, r16
     e6e:	e1 5e       	subi	r30, 0xE1	; 225
     e70:	fd 4f       	sbci	r31, 0xFD	; 253
     e72:	82 a9       	ldd	r24, Z+50	; 0x32
     e74:	88 23       	and	r24, r24
     e76:	a9 f1       	breq	.+106    	; 0xee2 <cliUpdate+0x152>
     e78:	61 a9       	ldd	r22, Z+49	; 0x31
     e7a:	66 23       	and	r22, r22
     e7c:	91 f1       	breq	.+100    	; 0xee2 <cliUpdate+0x152>
     e7e:	86 13       	cpse	r24, r22
     e80:	05 c0       	rjmp	.+10     	; 0xe8c <cliUpdate+0xfc>
     e82:	81 50       	subi	r24, 0x01	; 1
     e84:	82 ab       	std	Z+50, r24	; 0x32
     e86:	e8 0f       	add	r30, r24
     e88:	f1 1d       	adc	r31, r1
     e8a:	10 82       	st	Z, r1
     e8c:	f8 01       	movw	r30, r16
     e8e:	e1 5e       	subi	r30, 0xE1	; 225
     e90:	fd 4f       	sbci	r31, 0xFD	; 253
     e92:	f2 a8       	ldd	r15, Z+50	; 0x32
     e94:	6f 15       	cp	r22, r15
     e96:	28 f5       	brcc	.+74     	; 0xee2 <cliUpdate+0x152>
     e98:	7f 2d       	mov	r23, r15
     e9a:	76 1b       	sub	r23, r22
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	12 c0       	rjmp	.+36     	; 0xec6 <cliUpdate+0x136>
     ea2:	c9 01       	movw	r24, r18
     ea4:	86 0f       	add	r24, r22
     ea6:	91 1d       	adc	r25, r1
     ea8:	ac 01       	movw	r20, r24
     eaa:	41 50       	subi	r20, 0x01	; 1
     eac:	51 09       	sbc	r21, r1
     eae:	f8 01       	movw	r30, r16
     eb0:	e1 5e       	subi	r30, 0xE1	; 225
     eb2:	fd 4f       	sbci	r31, 0xFD	; 253
     eb4:	df 01       	movw	r26, r30
     eb6:	a8 0f       	add	r26, r24
     eb8:	b9 1f       	adc	r27, r25
     eba:	8c 91       	ld	r24, X
     ebc:	e4 0f       	add	r30, r20
     ebe:	f5 1f       	adc	r31, r21
     ec0:	80 83       	st	Z, r24
     ec2:	2f 5f       	subi	r18, 0xFF	; 255
     ec4:	3f 4f       	sbci	r19, 0xFF	; 255
     ec6:	87 2f       	mov	r24, r23
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	28 17       	cp	r18, r24
     ecc:	39 07       	cpc	r19, r25
     ece:	4c f3       	brlt	.-46     	; 0xea2 <cliUpdate+0x112>
     ed0:	af ef       	ldi	r26, 0xFF	; 255
     ed2:	af 0d       	add	r26, r15
     ed4:	f8 01       	movw	r30, r16
     ed6:	e1 5e       	subi	r30, 0xE1	; 225
     ed8:	fd 4f       	sbci	r31, 0xFD	; 253
     eda:	a2 ab       	std	Z+50, r26	; 0x32
     edc:	ea 0f       	add	r30, r26
     ede:	f1 1d       	adc	r31, r1
     ee0:	10 82       	st	Z, r1
     ee2:	f8 01       	movw	r30, r16
     ee4:	e1 5e       	subi	r30, 0xE1	; 225
     ee6:	fd 4f       	sbci	r31, 0xFD	; 253
     ee8:	81 a9       	ldd	r24, Z+49	; 0x31
     eea:	88 23       	and	r24, r24
     eec:	09 f4       	brne	.+2      	; 0xef0 <cliUpdate+0x160>
     eee:	78 c0       	rjmp	.+240    	; 0xfe0 <cliUpdate+0x250>
     ef0:	81 50       	subi	r24, 0x01	; 1
     ef2:	81 ab       	std	Z+49, r24	; 0x31
     ef4:	83 e7       	ldi	r24, 0x73	; 115
     ef6:	91 e0       	ldi	r25, 0x01	; 1
     ef8:	9f 93       	push	r25
     efa:	8f 93       	push	r24
     efc:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	6d c0       	rjmp	.+218    	; 0xfe0 <cliUpdate+0x250>
     f06:	f8 01       	movw	r30, r16
     f08:	e1 5e       	subi	r30, 0xE1	; 225
     f0a:	fd 4f       	sbci	r31, 0xFD	; 253
     f0c:	42 a9       	ldd	r20, Z+50	; 0x32
     f0e:	24 2f       	mov	r18, r20
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	2f 5f       	subi	r18, 0xFF	; 255
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	80 a9       	ldd	r24, Z+48	; 0x30
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	28 17       	cp	r18, r24
     f1c:	39 07       	cpc	r19, r25
     f1e:	0c f0       	brlt	.+2      	; 0xf22 <cliUpdate+0x192>
     f20:	5f c0       	rjmp	.+190    	; 0xfe0 <cliUpdate+0x250>
     f22:	81 a9       	ldd	r24, Z+49	; 0x31
     f24:	48 13       	cpse	r20, r24
     f26:	1c c0       	rjmp	.+56     	; 0xf60 <cliUpdate+0x1d0>
     f28:	21 e0       	ldi	r18, 0x01	; 1
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	40 e0       	ldi	r20, 0x00	; 0
     f2e:	50 e0       	ldi	r21, 0x00	; 0
     f30:	be 01       	movw	r22, r28
     f32:	67 5f       	subi	r22, 0xF7	; 247
     f34:	7f 4f       	sbci	r23, 0xFF	; 255
     f36:	d8 01       	movw	r26, r16
     f38:	8c 91       	ld	r24, X
     f3a:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
     f3e:	f8 01       	movw	r30, r16
     f40:	e1 5e       	subi	r30, 0xE1	; 225
     f42:	fd 4f       	sbci	r31, 0xFD	; 253
     f44:	91 a9       	ldd	r25, Z+49	; 0x31
     f46:	df 01       	movw	r26, r30
     f48:	a9 0f       	add	r26, r25
     f4a:	b1 1d       	adc	r27, r1
     f4c:	89 85       	ldd	r24, Y+9	; 0x09
     f4e:	8c 93       	st	X, r24
     f50:	82 a9       	ldd	r24, Z+50	; 0x32
     f52:	8f 5f       	subi	r24, 0xFF	; 255
     f54:	82 ab       	std	Z+50, r24	; 0x32
     f56:	9f 5f       	subi	r25, 0xFF	; 255
     f58:	91 ab       	std	Z+49, r25	; 0x31
     f5a:	e8 0f       	add	r30, r24
     f5c:	f1 1d       	adc	r31, r1
     f5e:	10 82       	st	Z, r1
     f60:	f8 01       	movw	r30, r16
     f62:	e1 5e       	subi	r30, 0xE1	; 225
     f64:	fd 4f       	sbci	r31, 0xFD	; 253
     f66:	f1 a8       	ldd	r15, Z+49	; 0x31
     f68:	72 a9       	ldd	r23, Z+50	; 0x32
     f6a:	f7 16       	cp	r15, r23
     f6c:	c8 f5       	brcc	.+114    	; 0xfe0 <cliUpdate+0x250>
     f6e:	a7 2f       	mov	r26, r23
     f70:	af 19       	sub	r26, r15
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	12 c0       	rjmp	.+36     	; 0xf9c <cliUpdate+0x20c>
     f78:	87 2f       	mov	r24, r23
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	82 1b       	sub	r24, r18
     f7e:	93 0b       	sbc	r25, r19
     f80:	fc 01       	movw	r30, r24
     f82:	31 97       	sbiw	r30, 0x01	; 1
     f84:	a8 01       	movw	r20, r16
     f86:	41 5e       	subi	r20, 0xE1	; 225
     f88:	5d 4f       	sbci	r21, 0xFD	; 253
     f8a:	e4 0f       	add	r30, r20
     f8c:	f5 1f       	adc	r31, r21
     f8e:	60 81       	ld	r22, Z
     f90:	fa 01       	movw	r30, r20
     f92:	e8 0f       	add	r30, r24
     f94:	f9 1f       	adc	r31, r25
     f96:	60 83       	st	Z, r22
     f98:	2f 5f       	subi	r18, 0xFF	; 255
     f9a:	3f 4f       	sbci	r19, 0xFF	; 255
     f9c:	8a 2f       	mov	r24, r26
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	28 17       	cp	r18, r24
     fa2:	39 07       	cpc	r19, r25
     fa4:	4c f3       	brlt	.-46     	; 0xf78 <cliUpdate+0x1e8>
     fa6:	89 85       	ldd	r24, Y+9	; 0x09
     fa8:	f8 01       	movw	r30, r16
     faa:	e1 5e       	subi	r30, 0xE1	; 225
     fac:	fd 4f       	sbci	r31, 0xFD	; 253
     fae:	9f 01       	movw	r18, r30
     fb0:	2f 0d       	add	r18, r15
     fb2:	31 1d       	adc	r19, r1
     fb4:	d9 01       	movw	r26, r18
     fb6:	8c 93       	st	X, r24
     fb8:	7f 5f       	subi	r23, 0xFF	; 255
     fba:	72 ab       	std	Z+50, r23	; 0x32
     fbc:	b1 e0       	ldi	r27, 0x01	; 1
     fbe:	bf 0d       	add	r27, r15
     fc0:	b1 ab       	std	Z+49, r27	; 0x31
     fc2:	e7 0f       	add	r30, r23
     fc4:	f1 1d       	adc	r31, r1
     fc6:	10 82       	st	Z, r1
     fc8:	1f 92       	push	r1
     fca:	8f 93       	push	r24
     fcc:	88 e6       	ldi	r24, 0x68	; 104
     fce:	91 e0       	ldi	r25, 0x01	; 1
     fd0:	9f 93       	push	r25
     fd2:	8f 93       	push	r24
     fd4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
     fd8:	0f 90       	pop	r0
     fda:	0f 90       	pop	r0
     fdc:	0f 90       	pop	r0
     fde:	0f 90       	pop	r0
     fe0:	f8 01       	movw	r30, r16
     fe2:	84 85       	ldd	r24, Z+12	; 0x0c
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	69 f0       	breq	.+26     	; 0x1002 <cliUpdate+0x272>
     fe8:	18 f4       	brcc	.+6      	; 0xff0 <cliUpdate+0x260>
     fea:	81 30       	cpi	r24, 0x01	; 1
     fec:	39 f0       	breq	.+14     	; 0xffc <cliUpdate+0x26c>
     fee:	ce c0       	rjmp	.+412    	; 0x118c <cliUpdate+0x3fc>
     ff0:	83 30       	cpi	r24, 0x03	; 3
     ff2:	59 f0       	breq	.+22     	; 0x100a <cliUpdate+0x27a>
     ff4:	84 30       	cpi	r24, 0x04	; 4
     ff6:	09 f4       	brne	.+2      	; 0xffa <cliUpdate+0x26a>
     ff8:	c8 c0       	rjmp	.+400    	; 0x118a <cliUpdate+0x3fa>
     ffa:	c8 c0       	rjmp	.+400    	; 0x118c <cliUpdate+0x3fc>
     ffc:	82 e0       	ldi	r24, 0x02	; 2
     ffe:	84 87       	std	Z+12, r24	; 0x0c
    1000:	c5 c0       	rjmp	.+394    	; 0x118c <cliUpdate+0x3fc>
    1002:	83 e0       	ldi	r24, 0x03	; 3
    1004:	f8 01       	movw	r30, r16
    1006:	84 87       	std	Z+12, r24	; 0x0c
    1008:	c1 c0       	rjmp	.+386    	; 0x118c <cliUpdate+0x3fc>
    100a:	14 86       	std	Z+12, r1	; 0x0c
    100c:	89 85       	ldd	r24, Y+9	; 0x09
    100e:	84 34       	cpi	r24, 0x44	; 68
    1010:	c1 f4       	brne	.+48     	; 0x1042 <cliUpdate+0x2b2>
    1012:	f8 01       	movw	r30, r16
    1014:	e1 5e       	subi	r30, 0xE1	; 225
    1016:	fd 4f       	sbci	r31, 0xFD	; 253
    1018:	91 a9       	ldd	r25, Z+49	; 0x31
    101a:	99 23       	and	r25, r25
    101c:	91 f0       	breq	.+36     	; 0x1042 <cliUpdate+0x2b2>
    101e:	91 50       	subi	r25, 0x01	; 1
    1020:	91 ab       	std	Z+49, r25	; 0x31
    1022:	9b e1       	ldi	r25, 0x1B	; 27
    1024:	99 83       	std	Y+1, r25	; 0x01
    1026:	9b e5       	ldi	r25, 0x5B	; 91
    1028:	9a 83       	std	Y+2, r25	; 0x02
    102a:	8b 83       	std	Y+3, r24	; 0x03
    102c:	23 e0       	ldi	r18, 0x03	; 3
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	40 e0       	ldi	r20, 0x00	; 0
    1032:	50 e0       	ldi	r21, 0x00	; 0
    1034:	be 01       	movw	r22, r28
    1036:	6f 5f       	subi	r22, 0xFF	; 255
    1038:	7f 4f       	sbci	r23, 0xFF	; 255
    103a:	f8 01       	movw	r30, r16
    103c:	80 81       	ld	r24, Z
    103e:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
    1042:	89 85       	ldd	r24, Y+9	; 0x09
    1044:	83 34       	cpi	r24, 0x43	; 67
    1046:	c9 f4       	brne	.+50     	; 0x107a <cliUpdate+0x2ea>
    1048:	f8 01       	movw	r30, r16
    104a:	e1 5e       	subi	r30, 0xE1	; 225
    104c:	fd 4f       	sbci	r31, 0xFD	; 253
    104e:	91 a9       	ldd	r25, Z+49	; 0x31
    1050:	22 a9       	ldd	r18, Z+50	; 0x32
    1052:	92 17       	cp	r25, r18
    1054:	90 f4       	brcc	.+36     	; 0x107a <cliUpdate+0x2ea>
    1056:	9f 5f       	subi	r25, 0xFF	; 255
    1058:	91 ab       	std	Z+49, r25	; 0x31
    105a:	9b e1       	ldi	r25, 0x1B	; 27
    105c:	99 83       	std	Y+1, r25	; 0x01
    105e:	9b e5       	ldi	r25, 0x5B	; 91
    1060:	9a 83       	std	Y+2, r25	; 0x02
    1062:	8b 83       	std	Y+3, r24	; 0x03
    1064:	23 e0       	ldi	r18, 0x03	; 3
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	40 e0       	ldi	r20, 0x00	; 0
    106a:	50 e0       	ldi	r21, 0x00	; 0
    106c:	be 01       	movw	r22, r28
    106e:	6f 5f       	subi	r22, 0xFF	; 255
    1070:	7f 4f       	sbci	r23, 0xFF	; 255
    1072:	d8 01       	movw	r26, r16
    1074:	8c 91       	ld	r24, X
    1076:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
    107a:	89 85       	ldd	r24, Y+9	; 0x09
    107c:	81 34       	cpi	r24, 0x41	; 65
    107e:	89 f4       	brne	.+34     	; 0x10a2 <cliUpdate+0x312>
    1080:	61 e0       	ldi	r22, 0x01	; 1
    1082:	c8 01       	movw	r24, r16
    1084:	0e 94 21 05 	call	0xa42	; 0xa42 <cliLineChange>
    1088:	c8 01       	movw	r24, r16
    108a:	81 5e       	subi	r24, 0xE1	; 225
    108c:	9d 4f       	sbci	r25, 0xFD	; 253
    108e:	9f 93       	push	r25
    1090:	8f 93       	push	r24
    1092:	f8 01       	movw	r30, r16
    1094:	80 81       	ld	r24, Z
    1096:	8f 93       	push	r24
    1098:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	0f 90       	pop	r0
    10a2:	89 85       	ldd	r24, Y+9	; 0x09
    10a4:	82 34       	cpi	r24, 0x42	; 66
    10a6:	89 f4       	brne	.+34     	; 0x10ca <cliUpdate+0x33a>
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	c8 01       	movw	r24, r16
    10ac:	0e 94 21 05 	call	0xa42	; 0xa42 <cliLineChange>
    10b0:	c8 01       	movw	r24, r16
    10b2:	81 5e       	subi	r24, 0xE1	; 225
    10b4:	9d 4f       	sbci	r25, 0xFD	; 253
    10b6:	9f 93       	push	r25
    10b8:	8f 93       	push	r24
    10ba:	d8 01       	movw	r26, r16
    10bc:	8c 91       	ld	r24, X
    10be:	8f 93       	push	r24
    10c0:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
    10c4:	0f 90       	pop	r0
    10c6:	0f 90       	pop	r0
    10c8:	0f 90       	pop	r0
    10ca:	89 85       	ldd	r24, Y+9	; 0x09
    10cc:	81 33       	cpi	r24, 0x31	; 49
    10ce:	e9 f4       	brne	.+58     	; 0x110a <cliUpdate+0x37a>
    10d0:	78 01       	movw	r14, r16
    10d2:	b1 ee       	ldi	r27, 0xE1	; 225
    10d4:	eb 1a       	sub	r14, r27
    10d6:	bd ef       	ldi	r27, 0xFD	; 253
    10d8:	fb 0a       	sbc	r15, r27
    10da:	f7 01       	movw	r30, r14
    10dc:	81 a9       	ldd	r24, Z+49	; 0x31
    10de:	1f 92       	push	r1
    10e0:	8f 93       	push	r24
    10e2:	86 e6       	ldi	r24, 0x66	; 102
    10e4:	94 eb       	ldi	r25, 0xB4	; 180
    10e6:	9f 93       	push	r25
    10e8:	8f 93       	push	r24
    10ea:	d8 01       	movw	r26, r16
    10ec:	8c 91       	ld	r24, X
    10ee:	8f 93       	push	r24
    10f0:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
    10f4:	f7 01       	movw	r30, r14
    10f6:	11 aa       	std	Z+49, r1	; 0x31
    10f8:	84 e0       	ldi	r24, 0x04	; 4
    10fa:	d8 01       	movw	r26, r16
    10fc:	1c 96       	adiw	r26, 0x0c	; 12
    10fe:	8c 93       	st	X, r24
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	89 85       	ldd	r24, Y+9	; 0x09
    110c:	84 33       	cpi	r24, 0x34	; 52
    110e:	f1 f5       	brne	.+124    	; 0x118c <cliUpdate+0x3fc>
    1110:	f8 01       	movw	r30, r16
    1112:	e1 5e       	subi	r30, 0xE1	; 225
    1114:	fd 4f       	sbci	r31, 0xFD	; 253
    1116:	21 a9       	ldd	r18, Z+49	; 0x31
    1118:	82 a9       	ldd	r24, Z+50	; 0x32
    111a:	28 17       	cp	r18, r24
    111c:	98 f4       	brcc	.+38     	; 0x1144 <cliUpdate+0x3b4>
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	82 1b       	sub	r24, r18
    1122:	91 09       	sbc	r25, r1
    1124:	9f 93       	push	r25
    1126:	8f 93       	push	r24
    1128:	89 e7       	ldi	r24, 0x79	; 121
    112a:	94 eb       	ldi	r25, 0xB4	; 180
    112c:	9f 93       	push	r25
    112e:	8f 93       	push	r24
    1130:	f8 01       	movw	r30, r16
    1132:	80 81       	ld	r24, Z
    1134:	8f 93       	push	r24
    1136:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	0f 90       	pop	r0
    1144:	f8 01       	movw	r30, r16
    1146:	e1 5e       	subi	r30, 0xE1	; 225
    1148:	fd 4f       	sbci	r31, 0xFD	; 253
    114a:	81 a9       	ldd	r24, Z+49	; 0x31
    114c:	22 a9       	ldd	r18, Z+50	; 0x32
    114e:	28 17       	cp	r18, r24
    1150:	98 f4       	brcc	.+38     	; 0x1178 <cliUpdate+0x3e8>
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	82 1b       	sub	r24, r18
    1156:	91 09       	sbc	r25, r1
    1158:	9f 93       	push	r25
    115a:	8f 93       	push	r24
    115c:	86 e6       	ldi	r24, 0x66	; 102
    115e:	94 eb       	ldi	r25, 0xB4	; 180
    1160:	9f 93       	push	r25
    1162:	8f 93       	push	r24
    1164:	d8 01       	movw	r26, r16
    1166:	8c 91       	ld	r24, X
    1168:	8f 93       	push	r24
    116a:	0e 94 40 11 	call	0x2280	; 0x2280 <uartPrintf>
    116e:	0f 90       	pop	r0
    1170:	0f 90       	pop	r0
    1172:	0f 90       	pop	r0
    1174:	0f 90       	pop	r0
    1176:	0f 90       	pop	r0
    1178:	f8 01       	movw	r30, r16
    117a:	e1 5e       	subi	r30, 0xE1	; 225
    117c:	fd 4f       	sbci	r31, 0xFD	; 253
    117e:	82 a9       	ldd	r24, Z+50	; 0x32
    1180:	81 ab       	std	Z+49, r24	; 0x31
    1182:	84 e0       	ldi	r24, 0x04	; 4
    1184:	f8 01       	movw	r30, r16
    1186:	84 87       	std	Z+12, r24	; 0x0c
    1188:	01 c0       	rjmp	.+2      	; 0x118c <cliUpdate+0x3fc>
    118a:	14 86       	std	Z+12, r1	; 0x0c
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	29 96       	adiw	r28, 0x09	; 9
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	df 91       	pop	r29
    1196:	cf 91       	pop	r28
    1198:	1f 91       	pop	r17
    119a:	0f 91       	pop	r16
    119c:	ff 90       	pop	r15
    119e:	ef 90       	pop	r14
    11a0:	08 95       	ret

000011a2 <cliMain>:
    11a2:	cf 93       	push	r28
    11a4:	c0 91 0b 38 	lds	r28, 0x380B	; 0x80380b <cli_node+0x5>
    11a8:	cc 23       	and	r28, r28
    11aa:	89 f0       	breq	.+34     	; 0x11ce <cliMain+0x2c>
    11ac:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
    11b0:	0e 94 ab 10 	call	0x2156	; 0x2156 <uartAvailable>
    11b4:	67 2b       	or	r22, r23
    11b6:	68 2b       	or	r22, r24
    11b8:	69 2b       	or	r22, r25
    11ba:	49 f0       	breq	.+18     	; 0x11ce <cliMain+0x2c>
    11bc:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
    11c0:	0e 94 17 11 	call	0x222e	; 0x222e <uartRead>
    11c4:	68 2f       	mov	r22, r24
    11c6:	86 e0       	ldi	r24, 0x06	; 6
    11c8:	98 e3       	ldi	r25, 0x38	; 56
    11ca:	0e 94 c8 06 	call	0xd90	; 0xd90 <cliUpdate>
    11ce:	8c 2f       	mov	r24, r28
    11d0:	cf 91       	pop	r28
    11d2:	08 95       	ret

000011d4 <cliShowList>:
    11d4:	cf 93       	push	r28
    11d6:	df 93       	push	r29
    11d8:	89 e5       	ldi	r24, 0x59	; 89
    11da:	91 e0       	ldi	r25, 0x01	; 1
    11dc:	9f 93       	push	r25
    11de:	8f 93       	push	r24
    11e0:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    11e4:	89 e3       	ldi	r24, 0x39	; 57
    11e6:	91 e0       	ldi	r25, 0x01	; 1
    11e8:	9f 93       	push	r25
    11ea:	8f 93       	push	r24
    11ec:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    11f0:	0f 90       	pop	r0
    11f2:	0f 90       	pop	r0
    11f4:	0f 90       	pop	r0
    11f6:	0f 90       	pop	r0
    11f8:	c0 e0       	ldi	r28, 0x00	; 0
    11fa:	d0 e0       	ldi	r29, 0x00	; 0
    11fc:	18 c0       	rjmp	.+48     	; 0x122e <cliShowList+0x5a>
    11fe:	ce 01       	movw	r24, r28
    1200:	82 95       	swap	r24
    1202:	92 95       	swap	r25
    1204:	90 7f       	andi	r25, 0xF0	; 240
    1206:	98 27       	eor	r25, r24
    1208:	80 7f       	andi	r24, 0xF0	; 240
    120a:	98 27       	eor	r25, r24
    120c:	86 5a       	subi	r24, 0xA6	; 166
    120e:	95 4c       	sbci	r25, 0xC5	; 197
    1210:	9f 93       	push	r25
    1212:	8f 93       	push	r24
    1214:	0e 94 1b 06 	call	0xc36	; 0xc36 <cliPrintf>
    1218:	86 e3       	ldi	r24, 0x36	; 54
    121a:	91 e0       	ldi	r25, 0x01	; 1
    121c:	9f 93       	push	r25
    121e:	8f 93       	push	r24
    1220:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1224:	21 96       	adiw	r28, 0x01	; 1
    1226:	0f 90       	pop	r0
    1228:	0f 90       	pop	r0
    122a:	0f 90       	pop	r0
    122c:	0f 90       	pop	r0
    122e:	80 91 58 3a 	lds	r24, 0x3A58	; 0x803a58 <cli_node+0x252>
    1232:	90 91 59 3a 	lds	r25, 0x3A59	; 0x803a59 <cli_node+0x253>
    1236:	c8 17       	cp	r28, r24
    1238:	d9 07       	cpc	r29, r25
    123a:	08 f3       	brcs	.-62     	; 0x11fe <cliShowList+0x2a>
    123c:	86 e1       	ldi	r24, 0x16	; 22
    123e:	91 e0       	ldi	r25, 0x01	; 1
    1240:	9f 93       	push	r25
    1242:	8f 93       	push	r24
    1244:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1248:	0f 90       	pop	r0
    124a:	0f 90       	pop	r0
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	08 95       	ret

00001252 <cliMemoryDump>:
    1252:	6f 92       	push	r6
    1254:	7f 92       	push	r7
    1256:	8f 92       	push	r8
    1258:	9f 92       	push	r9
    125a:	af 92       	push	r10
    125c:	bf 92       	push	r11
    125e:	cf 92       	push	r12
    1260:	df 92       	push	r13
    1262:	ef 92       	push	r14
    1264:	ff 92       	push	r15
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	00 d0       	rcall	.+0      	; 0x1270 <cliMemoryDump+0x1e>
    1270:	00 d0       	rcall	.+0      	; 0x1272 <cliMemoryDump+0x20>
    1272:	cd b7       	in	r28, 0x3d	; 61
    1274:	de b7       	in	r29, 0x3e	; 62
    1276:	fc 01       	movw	r30, r24
    1278:	20 81       	ld	r18, Z
    127a:	31 81       	ldd	r19, Z+1	; 0x01
    127c:	02 81       	ldd	r16, Z+2	; 0x02
    127e:	13 81       	ldd	r17, Z+3	; 0x03
    1280:	21 15       	cp	r18, r1
    1282:	31 05       	cpc	r19, r1
    1284:	49 f4       	brne	.+18     	; 0x1298 <cliMemoryDump+0x46>
    1286:	82 e0       	ldi	r24, 0x02	; 2
    1288:	91 e0       	ldi	r25, 0x01	; 1
    128a:	9f 93       	push	r25
    128c:	8f 93       	push	r24
    128e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1292:	0f 90       	pop	r0
    1294:	0f 90       	pop	r0
    1296:	a8 c0       	rjmp	.+336    	; 0x13e8 <cliMemoryDump+0x196>
    1298:	22 30       	cpi	r18, 0x02	; 2
    129a:	31 05       	cpc	r19, r1
    129c:	5c f0       	brlt	.+22     	; 0x12b4 <cliMemoryDump+0x62>
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	50 e0       	ldi	r21, 0x00	; 0
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	f8 01       	movw	r30, r16
    12a8:	82 81       	ldd	r24, Z+2	; 0x02
    12aa:	93 81       	ldd	r25, Z+3	; 0x03
    12ac:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <strtoul>
    12b0:	3b 01       	movw	r6, r22
    12b2:	04 c0       	rjmp	.+8      	; 0x12bc <cliMemoryDump+0x6a>
    12b4:	68 94       	set
    12b6:	66 24       	eor	r6, r6
    12b8:	64 f8       	bld	r6, 4
    12ba:	71 2c       	mov	r7, r1
    12bc:	f8 01       	movw	r30, r16
    12be:	80 81       	ld	r24, Z
    12c0:	91 81       	ldd	r25, Z+1	; 0x01
    12c2:	0e 94 43 16 	call	0x2c86	; 0x2c86 <atoi>
    12c6:	6c 01       	movw	r12, r24
    12c8:	8f e7       	ldi	r24, 0x7F	; 127
    12ca:	94 eb       	ldi	r25, 0xB4	; 180
    12cc:	9f 93       	push	r25
    12ce:	8f 93       	push	r24
    12d0:	0e 94 1b 06 	call	0xc36	; 0xc36 <cliPrintf>
    12d4:	0f 90       	pop	r0
    12d6:	0f 90       	pop	r0
    12d8:	46 01       	movw	r8, r12
    12da:	e1 2c       	mov	r14, r1
    12dc:	f1 2c       	mov	r15, r1
    12de:	80 c0       	rjmp	.+256    	; 0x13e0 <cliMemoryDump+0x18e>
    12e0:	c7 01       	movw	r24, r14
    12e2:	83 70       	andi	r24, 0x03	; 3
    12e4:	99 27       	eor	r25, r25
    12e6:	89 2b       	or	r24, r25
    12e8:	61 f4       	brne	.+24     	; 0x1302 <cliMemoryDump+0xb0>
    12ea:	df 92       	push	r13
    12ec:	cf 92       	push	r12
    12ee:	88 ef       	ldi	r24, 0xF8	; 248
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	9f 93       	push	r25
    12f4:	8f 93       	push	r24
    12f6:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    12fa:	0f 90       	pop	r0
    12fc:	0f 90       	pop	r0
    12fe:	0f 90       	pop	r0
    1300:	0f 90       	pop	r0
    1302:	f6 01       	movw	r30, r12
    1304:	81 81       	ldd	r24, Z+1	; 0x01
    1306:	8f 93       	push	r24
    1308:	80 81       	ld	r24, Z
    130a:	8f 93       	push	r24
    130c:	80 ef       	ldi	r24, 0xF0	; 240
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	9f 93       	push	r25
    1312:	8f 93       	push	r24
    1314:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1318:	c7 01       	movw	r24, r14
    131a:	83 70       	andi	r24, 0x03	; 3
    131c:	90 78       	andi	r25, 0x80	; 128
    131e:	0f 90       	pop	r0
    1320:	0f 90       	pop	r0
    1322:	0f 90       	pop	r0
    1324:	0f 90       	pop	r0
    1326:	99 23       	and	r25, r25
    1328:	24 f4       	brge	.+8      	; 0x1332 <cliMemoryDump+0xe0>
    132a:	01 97       	sbiw	r24, 0x01	; 1
    132c:	8c 6f       	ori	r24, 0xFC	; 252
    132e:	9f 6f       	ori	r25, 0xFF	; 255
    1330:	01 96       	adiw	r24, 0x01	; 1
    1332:	03 97       	sbiw	r24, 0x03	; 3
    1334:	09 f0       	breq	.+2      	; 0x1338 <cliMemoryDump+0xe6>
    1336:	4e c0       	rjmp	.+156    	; 0x13d4 <cliMemoryDump+0x182>
    1338:	8c ee       	ldi	r24, 0xEC	; 236
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	9f 93       	push	r25
    133e:	8f 93       	push	r24
    1340:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1344:	0f 90       	pop	r0
    1346:	0f 90       	pop	r0
    1348:	a1 2c       	mov	r10, r1
    134a:	b1 2c       	mov	r11, r1
    134c:	37 c0       	rjmp	.+110    	; 0x13bc <cliMemoryDump+0x16a>
    134e:	f4 01       	movw	r30, r8
    1350:	80 81       	ld	r24, Z
    1352:	91 81       	ldd	r25, Z+1	; 0x01
    1354:	a2 81       	ldd	r26, Z+2	; 0x02
    1356:	b3 81       	ldd	r27, Z+3	; 0x03
    1358:	89 83       	std	Y+1, r24	; 0x01
    135a:	9a 83       	std	Y+2, r25	; 0x02
    135c:	ab 83       	std	Y+3, r26	; 0x03
    135e:	bc 83       	std	Y+4, r27	; 0x04
    1360:	00 e0       	ldi	r16, 0x00	; 0
    1362:	10 e0       	ldi	r17, 0x00	; 0
    1364:	22 c0       	rjmp	.+68     	; 0x13aa <cliMemoryDump+0x158>
    1366:	e1 e0       	ldi	r30, 0x01	; 1
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	ec 0f       	add	r30, r28
    136c:	fd 1f       	adc	r31, r29
    136e:	e0 0f       	add	r30, r16
    1370:	f1 1f       	adc	r31, r17
    1372:	80 81       	ld	r24, Z
    1374:	90 ee       	ldi	r25, 0xE0	; 224
    1376:	98 0f       	add	r25, r24
    1378:	9f 35       	cpi	r25, 0x5F	; 95
    137a:	68 f4       	brcc	.+26     	; 0x1396 <cliMemoryDump+0x144>
    137c:	1f 92       	push	r1
    137e:	8f 93       	push	r24
    1380:	89 ee       	ldi	r24, 0xE9	; 233
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	9f 93       	push	r25
    1386:	8f 93       	push	r24
    1388:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    138c:	0f 90       	pop	r0
    138e:	0f 90       	pop	r0
    1390:	0f 90       	pop	r0
    1392:	0f 90       	pop	r0
    1394:	08 c0       	rjmp	.+16     	; 0x13a6 <cliMemoryDump+0x154>
    1396:	87 ee       	ldi	r24, 0xE7	; 231
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	9f 93       	push	r25
    139c:	8f 93       	push	r24
    139e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    13a2:	0f 90       	pop	r0
    13a4:	0f 90       	pop	r0
    13a6:	0f 5f       	subi	r16, 0xFF	; 255
    13a8:	1f 4f       	sbci	r17, 0xFF	; 255
    13aa:	04 30       	cpi	r16, 0x04	; 4
    13ac:	11 05       	cpc	r17, r1
    13ae:	dc f2       	brlt	.-74     	; 0x1366 <cliMemoryDump+0x114>
    13b0:	f2 e0       	ldi	r31, 0x02	; 2
    13b2:	8f 0e       	add	r8, r31
    13b4:	91 1c       	adc	r9, r1
    13b6:	8f ef       	ldi	r24, 0xFF	; 255
    13b8:	a8 1a       	sub	r10, r24
    13ba:	b8 0a       	sbc	r11, r24
    13bc:	e4 e0       	ldi	r30, 0x04	; 4
    13be:	ae 16       	cp	r10, r30
    13c0:	b1 04       	cpc	r11, r1
    13c2:	2c f2       	brlt	.-118    	; 0x134e <cliMemoryDump+0xfc>
    13c4:	81 ee       	ldi	r24, 0xE1	; 225
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	9f 93       	push	r25
    13ca:	8f 93       	push	r24
    13cc:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    13d0:	0f 90       	pop	r0
    13d2:	0f 90       	pop	r0
    13d4:	f2 e0       	ldi	r31, 0x02	; 2
    13d6:	cf 0e       	add	r12, r31
    13d8:	d1 1c       	adc	r13, r1
    13da:	8f ef       	ldi	r24, 0xFF	; 255
    13dc:	e8 1a       	sub	r14, r24
    13de:	f8 0a       	sbc	r15, r24
    13e0:	e6 14       	cp	r14, r6
    13e2:	f7 04       	cpc	r15, r7
    13e4:	0c f4       	brge	.+2      	; 0x13e8 <cliMemoryDump+0x196>
    13e6:	7c cf       	rjmp	.-264    	; 0x12e0 <cliMemoryDump+0x8e>
    13e8:	24 96       	adiw	r28, 0x04	; 4
    13ea:	cd bf       	out	0x3d, r28	; 61
    13ec:	de bf       	out	0x3e, r29	; 62
    13ee:	df 91       	pop	r29
    13f0:	cf 91       	pop	r28
    13f2:	1f 91       	pop	r17
    13f4:	0f 91       	pop	r16
    13f6:	ff 90       	pop	r15
    13f8:	ef 90       	pop	r14
    13fa:	df 90       	pop	r13
    13fc:	cf 90       	pop	r12
    13fe:	bf 90       	pop	r11
    1400:	af 90       	pop	r10
    1402:	9f 90       	pop	r9
    1404:	8f 90       	pop	r8
    1406:	7f 90       	pop	r7
    1408:	6f 90       	pop	r6
    140a:	08 95       	ret

0000140c <cliMemoryDump_P>:
    140c:	2f 92       	push	r2
    140e:	3f 92       	push	r3
    1410:	4f 92       	push	r4
    1412:	5f 92       	push	r5
    1414:	6f 92       	push	r6
    1416:	7f 92       	push	r7
    1418:	8f 92       	push	r8
    141a:	9f 92       	push	r9
    141c:	af 92       	push	r10
    141e:	bf 92       	push	r11
    1420:	cf 92       	push	r12
    1422:	df 92       	push	r13
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	00 d0       	rcall	.+0      	; 0x1432 <cliMemoryDump_P+0x26>
    1432:	00 d0       	rcall	.+0      	; 0x1434 <cliMemoryDump_P+0x28>
    1434:	cd b7       	in	r28, 0x3d	; 61
    1436:	de b7       	in	r29, 0x3e	; 62
    1438:	fc 01       	movw	r30, r24
    143a:	20 81       	ld	r18, Z
    143c:	31 81       	ldd	r19, Z+1	; 0x01
    143e:	02 81       	ldd	r16, Z+2	; 0x02
    1440:	13 81       	ldd	r17, Z+3	; 0x03
    1442:	21 15       	cp	r18, r1
    1444:	31 05       	cpc	r19, r1
    1446:	49 f4       	brne	.+18     	; 0x145a <cliMemoryDump_P+0x4e>
    1448:	8c ec       	ldi	r24, 0xCC	; 204
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	9f 93       	push	r25
    144e:	8f 93       	push	r24
    1450:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	a2 c0       	rjmp	.+324    	; 0x159e <cliMemoryDump_P+0x192>
    145a:	22 30       	cpi	r18, 0x02	; 2
    145c:	31 05       	cpc	r19, r1
    145e:	5c f0       	brlt	.+22     	; 0x1476 <cliMemoryDump_P+0x6a>
    1460:	40 e0       	ldi	r20, 0x00	; 0
    1462:	50 e0       	ldi	r21, 0x00	; 0
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	f8 01       	movw	r30, r16
    146a:	82 81       	ldd	r24, Z+2	; 0x02
    146c:	93 81       	ldd	r25, Z+3	; 0x03
    146e:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <strtoul>
    1472:	1b 01       	movw	r2, r22
    1474:	04 c0       	rjmp	.+8      	; 0x147e <cliMemoryDump_P+0x72>
    1476:	68 94       	set
    1478:	22 24       	eor	r2, r2
    147a:	24 f8       	bld	r2, 4
    147c:	31 2c       	mov	r3, r1
    147e:	40 e0       	ldi	r20, 0x00	; 0
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	60 e0       	ldi	r22, 0x00	; 0
    1484:	70 e0       	ldi	r23, 0x00	; 0
    1486:	f8 01       	movw	r30, r16
    1488:	80 81       	ld	r24, Z
    148a:	91 81       	ldd	r25, Z+1	; 0x01
    148c:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <strtoul>
    1490:	4b 01       	movw	r8, r22
    1492:	5c 01       	movw	r10, r24
    1494:	8f e7       	ldi	r24, 0x7F	; 127
    1496:	94 eb       	ldi	r25, 0xB4	; 180
    1498:	9f 93       	push	r25
    149a:	8f 93       	push	r24
    149c:	0e 94 1b 06 	call	0xc36	; 0xc36 <cliPrintf>
    14a0:	0f 90       	pop	r0
    14a2:	0f 90       	pop	r0
    14a4:	24 01       	movw	r4, r8
    14a6:	35 01       	movw	r6, r10
    14a8:	e1 2c       	mov	r14, r1
    14aa:	f1 2c       	mov	r15, r1
    14ac:	74 c0       	rjmp	.+232    	; 0x1596 <cliMemoryDump_P+0x18a>
    14ae:	c7 01       	movw	r24, r14
    14b0:	83 70       	andi	r24, 0x03	; 3
    14b2:	99 27       	eor	r25, r25
    14b4:	89 2b       	or	r24, r25
    14b6:	61 f4       	brne	.+24     	; 0x14d0 <cliMemoryDump_P+0xc4>
    14b8:	9f 92       	push	r9
    14ba:	8f 92       	push	r8
    14bc:	82 ec       	ldi	r24, 0xC2	; 194
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	9f 93       	push	r25
    14c2:	8f 93       	push	r24
    14c4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    14c8:	0f 90       	pop	r0
    14ca:	0f 90       	pop	r0
    14cc:	0f 90       	pop	r0
    14ce:	0f 90       	pop	r0
    14d0:	c7 01       	movw	r24, r14
    14d2:	83 70       	andi	r24, 0x03	; 3
    14d4:	90 78       	andi	r25, 0x80	; 128
    14d6:	99 23       	and	r25, r25
    14d8:	24 f4       	brge	.+8      	; 0x14e2 <cliMemoryDump_P+0xd6>
    14da:	01 97       	sbiw	r24, 0x01	; 1
    14dc:	8c 6f       	ori	r24, 0xFC	; 252
    14de:	9f 6f       	ori	r25, 0xFF	; 255
    14e0:	01 96       	adiw	r24, 0x01	; 1
    14e2:	03 97       	sbiw	r24, 0x03	; 3
    14e4:	09 f0       	breq	.+2      	; 0x14e8 <cliMemoryDump_P+0xdc>
    14e6:	4f c0       	rjmp	.+158    	; 0x1586 <cliMemoryDump_P+0x17a>
    14e8:	8e eb       	ldi	r24, 0xBE	; 190
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	9f 93       	push	r25
    14ee:	8f 93       	push	r24
    14f0:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    14f4:	0f 90       	pop	r0
    14f6:	0f 90       	pop	r0
    14f8:	c1 2c       	mov	r12, r1
    14fa:	d1 2c       	mov	r13, r1
    14fc:	38 c0       	rjmp	.+112    	; 0x156e <cliMemoryDump_P+0x162>
    14fe:	24 e0       	ldi	r18, 0x04	; 4
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	b3 01       	movw	r22, r6
    1504:	a2 01       	movw	r20, r4
    1506:	ce 01       	movw	r24, r28
    1508:	01 96       	adiw	r24, 0x01	; 1
    150a:	0e 94 c9 02 	call	0x592	; 0x592 <memcpy_PF>
    150e:	00 e0       	ldi	r16, 0x00	; 0
    1510:	10 e0       	ldi	r17, 0x00	; 0
    1512:	22 c0       	rjmp	.+68     	; 0x1558 <cliMemoryDump_P+0x14c>
    1514:	e1 e0       	ldi	r30, 0x01	; 1
    1516:	f0 e0       	ldi	r31, 0x00	; 0
    1518:	ec 0f       	add	r30, r28
    151a:	fd 1f       	adc	r31, r29
    151c:	e0 0f       	add	r30, r16
    151e:	f1 1f       	adc	r31, r17
    1520:	80 81       	ld	r24, Z
    1522:	90 ee       	ldi	r25, 0xE0	; 224
    1524:	98 0f       	add	r25, r24
    1526:	9f 35       	cpi	r25, 0x5F	; 95
    1528:	68 f4       	brcc	.+26     	; 0x1544 <cliMemoryDump_P+0x138>
    152a:	1f 92       	push	r1
    152c:	8f 93       	push	r24
    152e:	8b eb       	ldi	r24, 0xBB	; 187
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	9f 93       	push	r25
    1534:	8f 93       	push	r24
    1536:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    153a:	0f 90       	pop	r0
    153c:	0f 90       	pop	r0
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	08 c0       	rjmp	.+16     	; 0x1554 <cliMemoryDump_P+0x148>
    1544:	89 eb       	ldi	r24, 0xB9	; 185
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	9f 93       	push	r25
    154a:	8f 93       	push	r24
    154c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1550:	0f 90       	pop	r0
    1552:	0f 90       	pop	r0
    1554:	0f 5f       	subi	r16, 0xFF	; 255
    1556:	1f 4f       	sbci	r17, 0xFF	; 255
    1558:	04 30       	cpi	r16, 0x04	; 4
    155a:	11 05       	cpc	r17, r1
    155c:	dc f2       	brlt	.-74     	; 0x1514 <cliMemoryDump_P+0x108>
    155e:	f4 e0       	ldi	r31, 0x04	; 4
    1560:	4f 0e       	add	r4, r31
    1562:	51 1c       	adc	r5, r1
    1564:	61 1c       	adc	r6, r1
    1566:	71 1c       	adc	r7, r1
    1568:	8f ef       	ldi	r24, 0xFF	; 255
    156a:	c8 1a       	sub	r12, r24
    156c:	d8 0a       	sbc	r13, r24
    156e:	e4 e0       	ldi	r30, 0x04	; 4
    1570:	ce 16       	cp	r12, r30
    1572:	d1 04       	cpc	r13, r1
    1574:	24 f2       	brlt	.-120    	; 0x14fe <cliMemoryDump_P+0xf2>
    1576:	83 eb       	ldi	r24, 0xB3	; 179
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	9f 93       	push	r25
    157c:	8f 93       	push	r24
    157e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1582:	0f 90       	pop	r0
    1584:	0f 90       	pop	r0
    1586:	f4 e0       	ldi	r31, 0x04	; 4
    1588:	8f 0e       	add	r8, r31
    158a:	91 1c       	adc	r9, r1
    158c:	a1 1c       	adc	r10, r1
    158e:	b1 1c       	adc	r11, r1
    1590:	8f ef       	ldi	r24, 0xFF	; 255
    1592:	e8 1a       	sub	r14, r24
    1594:	f8 0a       	sbc	r15, r24
    1596:	e2 14       	cp	r14, r2
    1598:	f3 04       	cpc	r15, r3
    159a:	0c f4       	brge	.+2      	; 0x159e <cliMemoryDump_P+0x192>
    159c:	88 cf       	rjmp	.-240    	; 0x14ae <cliMemoryDump_P+0xa2>
    159e:	24 96       	adiw	r28, 0x04	; 4
    15a0:	cd bf       	out	0x3d, r28	; 61
    15a2:	de bf       	out	0x3e, r29	; 62
    15a4:	df 91       	pop	r29
    15a6:	cf 91       	pop	r28
    15a8:	1f 91       	pop	r17
    15aa:	0f 91       	pop	r16
    15ac:	ff 90       	pop	r15
    15ae:	ef 90       	pop	r14
    15b0:	df 90       	pop	r13
    15b2:	cf 90       	pop	r12
    15b4:	bf 90       	pop	r11
    15b6:	af 90       	pop	r10
    15b8:	9f 90       	pop	r9
    15ba:	8f 90       	pop	r8
    15bc:	7f 90       	pop	r7
    15be:	6f 90       	pop	r6
    15c0:	5f 90       	pop	r5
    15c2:	4f 90       	pop	r4
    15c4:	3f 90       	pop	r3
    15c6:	2f 90       	pop	r2
    15c8:	08 95       	ret

000015ca <cliAdd>:

bool cliAdd(const char *cmd_str, void (*p_func)(cli_args_t *))
{
    15ca:	ef 92       	push	r14
    15cc:	ff 92       	push	r15
    15ce:	0f 93       	push	r16
    15d0:	1f 93       	push	r17
    15d2:	cf 93       	push	r28
    15d4:	df 93       	push	r29
	bool ret = true;
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
    15d6:	20 91 58 3a 	lds	r18, 0x3A58	; 0x803a58 <cli_node+0x252>
    15da:	30 91 59 3a 	lds	r19, 0x3A59	; 0x803a59 <cli_node+0x253>
    15de:	20 31       	cpi	r18, 0x10	; 16
    15e0:	31 05       	cpc	r19, r1
    15e2:	f8 f4       	brcc	.+62     	; 0x1622 <cliAdd+0x58>
    15e4:	8b 01       	movw	r16, r22
    15e6:	bc 01       	movw	r22, r24
		return false;
	}

	index = p_cli->cmd_count;

	strcpy(p_cli->cmd_list[index].cmd_str, cmd_str);
    15e8:	e9 01       	movw	r28, r18
    15ea:	c2 95       	swap	r28
    15ec:	d2 95       	swap	r29
    15ee:	d0 7f       	andi	r29, 0xF0	; 240
    15f0:	dc 27       	eor	r29, r28
    15f2:	c0 7f       	andi	r28, 0xF0	; 240
    15f4:	dc 27       	eor	r29, r28
    15f6:	ce 01       	movw	r24, r28
    15f8:	86 5a       	subi	r24, 0xA6	; 166
    15fa:	95 4c       	sbci	r25, 0xC5	; 197
    15fc:	7c 01       	movw	r14, r24
    15fe:	0e 94 8b 16 	call	0x2d16	; 0x2d16 <strcpy>
	p_cli->cmd_list[index].cmd_func = p_func;
    1602:	c8 59       	subi	r28, 0x98	; 152
    1604:	d5 4c       	sbci	r29, 0xC5	; 197
    1606:	08 83       	st	Y, r16
    1608:	19 83       	std	Y+1, r17	; 0x01

	cliToUpper(p_cli->cmd_list[index].cmd_str);
    160a:	c7 01       	movw	r24, r14
    160c:	0e 94 96 04 	call	0x92c	; 0x92c <cliToUpper>

	p_cli->cmd_count++;
    1610:	e8 e5       	ldi	r30, 0x58	; 88
    1612:	fa e3       	ldi	r31, 0x3A	; 58
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	01 96       	adiw	r24, 0x01	; 1
    161a:	80 83       	st	Z, r24
    161c:	91 83       	std	Z+1, r25	; 0x01

	return ret;
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <cliAdd+0x5a>
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
	{
		return false;
    1622:	80 e0       	ldi	r24, 0x00	; 0
	cliToUpper(p_cli->cmd_list[index].cmd_str);

	p_cli->cmd_count++;

	return ret;
}
    1624:	df 91       	pop	r29
    1626:	cf 91       	pop	r28
    1628:	1f 91       	pop	r17
    162a:	0f 91       	pop	r16
    162c:	ff 90       	pop	r15
    162e:	ef 90       	pop	r14
    1630:	08 95       	ret

00001632 <cliInit>:
void cliMemoryDump_P(cli_args_t *args);


bool cliInit(void)
{
	cli_node.is_open = false;
    1632:	e6 e0       	ldi	r30, 0x06	; 6
    1634:	f8 e3       	ldi	r31, 0x38	; 56
    1636:	15 82       	std	Z+5, r1	; 0x05
	cli_node.is_log  = false;
    1638:	16 82       	std	Z+6, r1	; 0x06
	cli_node.state   = CLI_RX_IDLE;
    163a:	14 86       	std	Z+12, r1	; 0x0c

	cli_node.hist_line_i     = 0;
    163c:	10 92 56 39 	sts	0x3956, r1	; 0x803956 <cli_node+0x150>
	cli_node.hist_line_last  = 0;
    1640:	10 92 57 39 	sts	0x3957, r1	; 0x803957 <cli_node+0x151>
	cli_node.hist_line_count = 0;
    1644:	10 92 58 39 	sts	0x3958, r1	; 0x803958 <cli_node+0x152>
	cli_node.hist_line_new   = false;
    1648:	10 92 55 39 	sts	0x3955, r1	; 0x803955 <cli_node+0x14f>

	cli_node.cmd_args.getData  = cliArgsGetData;
    164c:	83 e0       	ldi	r24, 0x03	; 3
    164e:	95 e0       	ldi	r25, 0x05	; 5
    1650:	80 93 5e 3b 	sts	0x3B5E, r24	; 0x803b5e <cli_node+0x358>
    1654:	90 93 5f 3b 	sts	0x3B5F, r25	; 0x803b5f <cli_node+0x359>
	cli_node.cmd_args.getFloat = cliArgsGetFloat;
    1658:	88 ee       	ldi	r24, 0xE8	; 232
    165a:	94 e0       	ldi	r25, 0x04	; 4
    165c:	80 93 60 3b 	sts	0x3B60, r24	; 0x803b60 <cli_node+0x35a>
    1660:	90 93 61 3b 	sts	0x3B61, r25	; 0x803b61 <cli_node+0x35b>
	cli_node.cmd_args.getStr   = cliArgsGetStr;
    1664:	84 eb       	ldi	r24, 0xB4	; 180
    1666:	94 e0       	ldi	r25, 0x04	; 4
    1668:	80 93 62 3b 	sts	0x3B62, r24	; 0x803b62 <cli_node+0x35c>
    166c:	90 93 63 3b 	sts	0x3B63, r25	; 0x803b63 <cli_node+0x35d>
	cli_node.cmd_args.isStr    = cliArgsIsStr;
    1670:	8a ec       	ldi	r24, 0xCA	; 202
    1672:	94 e0       	ldi	r25, 0x04	; 4
    1674:	80 93 64 3b 	sts	0x3B64, r24	; 0x803b64 <cli_node+0x35e>
    1678:	90 93 65 3b 	sts	0x3B65, r25	; 0x803b65 <cli_node+0x35f>

	cliLineClean(&cli_node);
    167c:	cf 01       	movw	r24, r30
    167e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <cliLineClean>


	cliAdd("help", cliShowList);
    1682:	6a ee       	ldi	r22, 0xEA	; 234
    1684:	78 e0       	ldi	r23, 0x08	; 8
    1686:	84 e8       	ldi	r24, 0x84	; 132
    1688:	94 eb       	ldi	r25, 0xB4	; 180
    168a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>
	cliAdd("md"  , cliMemoryDump);
    168e:	69 e2       	ldi	r22, 0x29	; 41
    1690:	79 e0       	ldi	r23, 0x09	; 9
    1692:	89 e8       	ldi	r24, 0x89	; 137
    1694:	94 eb       	ldi	r25, 0xB4	; 180
    1696:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>
	cliAdd("mdp" , cliMemoryDump_P);
    169a:	66 e0       	ldi	r22, 0x06	; 6
    169c:	7a e0       	ldi	r23, 0x0A	; 10
    169e:	8c e8       	ldi	r24, 0x8C	; 140
    16a0:	94 eb       	ldi	r25, 0xB4	; 180
    16a2:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>

	return true;
}
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	08 95       	ret

000016aa <i2cWaitWrite>:
		}
		break;
	}

	return ret;
}
    16aa:	8f 92       	push	r8
    16ac:	9f 92       	push	r9
    16ae:	af 92       	push	r10
    16b0:	bf 92       	push	r11
    16b2:	cf 92       	push	r12
    16b4:	df 92       	push	r13
    16b6:	ef 92       	push	r14
    16b8:	ff 92       	push	r15
    16ba:	4b 01       	movw	r8, r22
    16bc:	5c 01       	movw	r10, r24
    16be:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
    16c2:	6b 01       	movw	r12, r22
    16c4:	7c 01       	movw	r14, r24
    16c6:	0f c0       	rjmp	.+30     	; 0x16e6 <i2cWaitWrite+0x3c>
    16c8:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
    16cc:	80 7c       	andi	r24, 0xC0	; 192
    16ce:	39 f0       	breq	.+14     	; 0x16de <i2cWaitWrite+0x34>
    16d0:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
    16d4:	89 2f       	mov	r24, r25
    16d6:	80 71       	andi	r24, 0x10	; 16
    16d8:	94 fd       	sbrc	r25, 4
    16da:	14 c0       	rjmp	.+40     	; 0x1704 <i2cWaitWrite+0x5a>
    16dc:	16 c0       	rjmp	.+44     	; 0x170a <i2cWaitWrite+0x60>
    16de:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
    16e2:	8c 70       	andi	r24, 0x0C	; 12
    16e4:	89 f4       	brne	.+34     	; 0x1708 <i2cWaitWrite+0x5e>
    16e6:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	8c 19       	sub	r24, r12
    16f0:	9d 09       	sbc	r25, r13
    16f2:	ae 09       	sbc	r26, r14
    16f4:	bf 09       	sbc	r27, r15
    16f6:	88 15       	cp	r24, r8
    16f8:	99 05       	cpc	r25, r9
    16fa:	aa 05       	cpc	r26, r10
    16fc:	bb 05       	cpc	r27, r11
    16fe:	20 f3       	brcs	.-56     	; 0x16c8 <i2cWaitWrite+0x1e>
    1700:	83 e0       	ldi	r24, 0x03	; 3
    1702:	03 c0       	rjmp	.+6      	; 0x170a <i2cWaitWrite+0x60>
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	01 c0       	rjmp	.+2      	; 0x170a <i2cWaitWrite+0x60>
    1708:	83 e0       	ldi	r24, 0x03	; 3
    170a:	ff 90       	pop	r15
    170c:	ef 90       	pop	r14
    170e:	df 90       	pop	r13
    1710:	cf 90       	pop	r12
    1712:	bf 90       	pop	r11
    1714:	af 90       	pop	r10
    1716:	9f 90       	pop	r9
    1718:	8f 90       	pop	r8
    171a:	08 95       	ret

0000171c <i2cInit>:
    171c:	69 e4       	ldi	r22, 0x49	; 73
    171e:	7c e0       	ldi	r23, 0x0C	; 12
    1720:	80 e9       	ldi	r24, 0x90	; 144
    1722:	94 eb       	ldi	r25, 0xB4	; 180
    1724:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	08 95       	ret

0000172c <i2cBegin>:
    172c:	81 11       	cpse	r24, r1
    172e:	30 c0       	rjmp	.+96     	; 0x1790 <i2cBegin+0x64>
    1730:	cb 01       	movw	r24, r22
    1732:	ba 01       	movw	r22, r20
    1734:	e0 e2       	ldi	r30, 0x20	; 32
    1736:	f4 e0       	ldi	r31, 0x04	; 4
    1738:	28 e0       	ldi	r18, 0x08	; 8
    173a:	20 8b       	std	Z+16, r18	; 0x10
    173c:	21 8b       	std	Z+17, r18	; 0x11
    173e:	23 e0       	ldi	r18, 0x03	; 3
    1740:	21 83       	std	Z+1, r18	; 0x01
    1742:	0e 94 bb 12 	call	0x2576	; 0x2576 <__floatunsisf>
    1746:	9b 01       	movw	r18, r22
    1748:	ac 01       	movw	r20, r24
    174a:	60 e8       	ldi	r22, 0x80	; 128
    174c:	76 e9       	ldi	r23, 0x96	; 150
    174e:	88 e9       	ldi	r24, 0x98	; 152
    1750:	9b e4       	ldi	r25, 0x4B	; 75
    1752:	0e 94 1a 12 	call	0x2434	; 0x2434 <__divsf3>
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	40 e2       	ldi	r20, 0x20	; 32
    175c:	51 e4       	ldi	r21, 0x41	; 65
    175e:	0e 94 ad 11 	call	0x235a	; 0x235a <__subsf3>
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	40 ec       	ldi	r20, 0xC0	; 192
    1768:	50 e4       	ldi	r21, 0x40	; 64
    176a:	0e 94 ad 11 	call	0x235a	; 0x235a <__subsf3>
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	40 e0       	ldi	r20, 0x00	; 0
    1774:	5f e3       	ldi	r21, 0x3F	; 63
    1776:	0e 94 49 13 	call	0x2692	; 0x2692 <__mulsf3>
    177a:	0e 94 8c 12 	call	0x2518	; 0x2518 <__fixunssfsi>
    177e:	e0 ea       	ldi	r30, 0xA0	; 160
    1780:	f8 e0       	ldi	r31, 0x08	; 8
    1782:	66 83       	std	Z+6, r22	; 0x06
    1784:	17 82       	std	Z+7, r1	; 0x07
    1786:	10 86       	std	Z+8, r1	; 0x08
    1788:	8d ef       	ldi	r24, 0xFD	; 253
    178a:	85 83       	std	Z+5, r24	; 0x05
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	83 83       	std	Z+3, r24	; 0x03
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	08 95       	ret

00001794 <i2cWriteData>:

bool i2cWriteData(uint8_t ch, uint16_t dev_addr, uint8_t *p_data, uint32_t length, uint32_t timeout)
{
    1794:	4f 92       	push	r4
    1796:	5f 92       	push	r5
    1798:	6f 92       	push	r6
    179a:	7f 92       	push	r7
    179c:	8f 92       	push	r8
    179e:	9f 92       	push	r9
    17a0:	af 92       	push	r10
    17a2:	bf 92       	push	r11
    17a4:	cf 92       	push	r12
    17a6:	df 92       	push	r13
    17a8:	ef 92       	push	r14
    17aa:	ff 92       	push	r15
    17ac:	0f 93       	push	r16
    17ae:	1f 93       	push	r17
    17b0:	cf 93       	push	r28
    17b2:	df 93       	push	r29
    17b4:	ea 01       	movw	r28, r20
    17b6:	48 01       	movw	r8, r16
    17b8:	59 01       	movw	r10, r18
	bool ret = false;
	
	switch(ch)
    17ba:	81 11       	cpse	r24, r1
    17bc:	28 c0       	rjmp	.+80     	; 0x180e <i2cWriteData+0x7a>
	{
		case _DEF_I2C1:
		TWI0.MADDR = dev_addr & ~0x01;
    17be:	6e 7f       	andi	r22, 0xFE	; 254
    17c0:	60 93 a7 08 	sts	0x08A7, r22	; 0x8008a7 <__RODATA_PM_OFFSET__+0x7f88a7>
		
		if(i2cWaitWrite(timeout) != I2C_ACKED)
    17c4:	c7 01       	movw	r24, r14
    17c6:	b6 01       	movw	r22, r12
    17c8:	0e 94 55 0b 	call	0x16aa	; 0x16aa <i2cWaitWrite>
    17cc:	81 11       	cpse	r24, r1
    17ce:	1f c0       	rjmp	.+62     	; 0x180e <i2cWriteData+0x7a>
			return false;

		if((length != 0) && (p_data != NULL))
    17d0:	81 14       	cp	r8, r1
    17d2:	91 04       	cpc	r9, r1
    17d4:	a1 04       	cpc	r10, r1
    17d6:	b1 04       	cpc	r11, r1
    17d8:	d1 f0       	breq	.+52     	; 0x180e <i2cWriteData+0x7a>
    17da:	20 97       	sbiw	r28, 0x00	; 0
    17dc:	69 f4       	brne	.+26     	; 0x17f8 <i2cWriteData+0x64>
    17de:	17 c0       	rjmp	.+46     	; 0x180e <i2cWriteData+0x7a>
		{
			while(length--)
			{
				TWI0.MDATA = *p_data;
    17e0:	88 81       	ld	r24, Y
    17e2:	80 93 a8 08 	sts	0x08A8, r24	; 0x8008a8 <__RODATA_PM_OFFSET__+0x7f88a8>
				if(i2cWaitWrite(timeout) == I2C_ACKED)
    17e6:	c7 01       	movw	r24, r14
    17e8:	b6 01       	movw	r22, r12
    17ea:	0e 94 55 0b 	call	0x16aa	; 0x16aa <i2cWaitWrite>
    17ee:	81 11       	cpse	r24, r1
    17f0:	0e c0       	rjmp	.+28     	; 0x180e <i2cWriteData+0x7a>
				{
					p_data++;
    17f2:	21 96       	adiw	r28, 0x01	; 1
		if(i2cWaitWrite(timeout) != I2C_ACKED)
			return false;

		if((length != 0) && (p_data != NULL))
		{
			while(length--)
    17f4:	53 01       	movw	r10, r6
    17f6:	42 01       	movw	r8, r4
    17f8:	24 01       	movw	r4, r8
    17fa:	35 01       	movw	r6, r10
    17fc:	81 e0       	ldi	r24, 0x01	; 1
    17fe:	48 1a       	sub	r4, r24
    1800:	51 08       	sbc	r5, r1
    1802:	61 08       	sbc	r6, r1
    1804:	71 08       	sbc	r7, r1
    1806:	89 28       	or	r8, r9
    1808:	8a 28       	or	r8, r10
    180a:	8b 28       	or	r8, r11
    180c:	49 f7       	brne	.-46     	; 0x17e0 <i2cWriteData+0x4c>
		}
		break;
	}

	return ret;
}
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	df 91       	pop	r29
    1812:	cf 91       	pop	r28
    1814:	1f 91       	pop	r17
    1816:	0f 91       	pop	r16
    1818:	ff 90       	pop	r15
    181a:	ef 90       	pop	r14
    181c:	df 90       	pop	r13
    181e:	cf 90       	pop	r12
    1820:	bf 90       	pop	r11
    1822:	af 90       	pop	r10
    1824:	9f 90       	pop	r9
    1826:	8f 90       	pop	r8
    1828:	7f 90       	pop	r7
    182a:	6f 90       	pop	r6
    182c:	5f 90       	pop	r5
    182e:	4f 90       	pop	r4
    1830:	08 95       	ret

00001832 <i2cEnd>:

void i2cEnd(uint8_t ch)
{
	switch(ch)
    1832:	81 11       	cpse	r24, r1
    1834:	03 c0       	rjmp	.+6      	; 0x183c <i2cEnd+0xa>
	{
		case _DEF_I2C1:
		TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    1836:	83 e0       	ldi	r24, 0x03	; 3
    1838:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__RODATA_PM_OFFSET__+0x7f88a4>
    183c:	08 95       	ret

0000183e <i2cIsDeviceReady>:
}

void i2cReset(uint8_t ch);

bool i2cIsDeviceReady(uint8_t ch, uint8_t dev_addr)
{
    183e:	cf 92       	push	r12
    1840:	df 92       	push	r13
    1842:	ef 92       	push	r14
    1844:	ff 92       	push	r15
    1846:	0f 93       	push	r16
    1848:	1f 93       	push	r17
    184a:	cf 93       	push	r28
    184c:	df 93       	push	r29
	bool ret = false;
	
	switch(ch)
    184e:	81 11       	cpse	r24, r1
    1850:	15 c0       	rjmp	.+42     	; 0x187c <i2cIsDeviceReady+0x3e>
    1852:	c8 2f       	mov	r28, r24
	{
		case _DEF_I2C1:
		ret = i2cWriteData(ch, dev_addr, NULL, 0, 100);
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	0f 2e       	mov	r0, r31
    1858:	f4 e6       	ldi	r31, 0x64	; 100
    185a:	cf 2e       	mov	r12, r31
    185c:	d1 2c       	mov	r13, r1
    185e:	e1 2c       	mov	r14, r1
    1860:	f1 2c       	mov	r15, r1
    1862:	f0 2d       	mov	r31, r0
    1864:	00 e0       	ldi	r16, 0x00	; 0
    1866:	10 e0       	ldi	r17, 0x00	; 0
    1868:	98 01       	movw	r18, r16
    186a:	40 e0       	ldi	r20, 0x00	; 0
    186c:	50 e0       	ldi	r21, 0x00	; 0
    186e:	0e 94 ca 0b 	call	0x1794	; 0x1794 <i2cWriteData>
    1872:	d8 2f       	mov	r29, r24
		i2cEnd(ch);
    1874:	8c 2f       	mov	r24, r28
    1876:	0e 94 19 0c 	call	0x1832	; 0x1832 <i2cEnd>
		break;
    187a:	01 c0       	rjmp	.+2      	; 0x187e <i2cIsDeviceReady+0x40>

void i2cReset(uint8_t ch);

bool i2cIsDeviceReady(uint8_t ch, uint8_t dev_addr)
{
	bool ret = false;
    187c:	d0 e0       	ldi	r29, 0x00	; 0
		i2cEnd(ch);
		break;
	}

	return ret;
}
    187e:	8d 2f       	mov	r24, r29
    1880:	df 91       	pop	r29
    1882:	cf 91       	pop	r28
    1884:	1f 91       	pop	r17
    1886:	0f 91       	pop	r16
    1888:	ff 90       	pop	r15
    188a:	ef 90       	pop	r14
    188c:	df 90       	pop	r13
    188e:	cf 90       	pop	r12
    1890:	08 95       	ret

00001892 <cliI2c>:
}


#ifdef _USE_HW_CLI
static void cliI2c(cli_args_t *args)
{
    1892:	cf 93       	push	r28
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "scan") == true)
    1894:	dc 01       	movw	r26, r24
    1896:	2d 91       	ld	r18, X+
    1898:	3c 91       	ld	r19, X
    189a:	11 97       	sbiw	r26, 0x01	; 1
    189c:	21 30       	cpi	r18, 0x01	; 1
    189e:	31 05       	cpc	r19, r1
    18a0:	39 f5       	brne	.+78     	; 0x18f0 <cliI2c+0x5e>
    18a2:	1a 96       	adiw	r26, 0x0a	; 10
    18a4:	ed 91       	ld	r30, X+
    18a6:	fc 91       	ld	r31, X
    18a8:	1b 97       	sbiw	r26, 0x0b	; 11
    18aa:	64 e9       	ldi	r22, 0x94	; 148
    18ac:	74 eb       	ldi	r23, 0xB4	; 180
    18ae:	80 e0       	ldi	r24, 0x00	; 0
    18b0:	09 95       	icall
    18b2:	81 11       	cpse	r24, r1
    18b4:	18 c0       	rjmp	.+48     	; 0x18e6 <cliI2c+0x54>
    18b6:	1d c0       	rjmp	.+58     	; 0x18f2 <cliI2c+0x60>
	{
		for(uint8_t i=0x00; i<0x7F; i++)
		{
			if(i2cIsDeviceReady(_DEF_I2C1, i) == true)
    18b8:	6c 2f       	mov	r22, r28
    18ba:	80 e0       	ldi	r24, 0x00	; 0
    18bc:	0e 94 1f 0c 	call	0x183e	; 0x183e <i2cIsDeviceReady>
    18c0:	88 23       	and	r24, r24
    18c2:	79 f0       	breq	.+30     	; 0x18e2 <cliI2c+0x50>
			{
				cliPrintf("I2C CH%d Addr 0x%02X : OK\n", i+1);
    18c4:	8c 2f       	mov	r24, r28
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	01 96       	adiw	r24, 0x01	; 1
    18ca:	9f 93       	push	r25
    18cc:	8f 93       	push	r24
    18ce:	89 e9       	ldi	r24, 0x99	; 153
    18d0:	94 eb       	ldi	r25, 0xB4	; 180
    18d2:	9f 93       	push	r25
    18d4:	8f 93       	push	r24
    18d6:	0e 94 1b 06 	call	0xc36	; 0xc36 <cliPrintf>
    18da:	0f 90       	pop	r0
    18dc:	0f 90       	pop	r0
    18de:	0f 90       	pop	r0
    18e0:	0f 90       	pop	r0
{
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "scan") == true)
	{
		for(uint8_t i=0x00; i<0x7F; i++)
    18e2:	cf 5f       	subi	r28, 0xFF	; 255
    18e4:	01 c0       	rjmp	.+2      	; 0x18e8 <cliI2c+0x56>
    18e6:	c0 e0       	ldi	r28, 0x00	; 0
    18e8:	cf 37       	cpi	r28, 0x7F	; 127
    18ea:	30 f3       	brcs	.-52     	; 0x18b8 <cliI2c+0x26>
			if(i2cIsDeviceReady(_DEF_I2C1, i) == true)
			{
				cliPrintf("I2C CH%d Addr 0x%02X : OK\n", i+1);
			}
		}
		ret = true;
    18ec:	81 e0       	ldi	r24, 0x01	; 1
    18ee:	01 c0       	rjmp	.+2      	; 0x18f2 <cliI2c+0x60>


#ifdef _USE_HW_CLI
static void cliI2c(cli_args_t *args)
{
	bool ret = false;
    18f0:	80 e0       	ldi	r24, 0x00	; 0
			}
		}
		ret = true;
	}

	if (ret != true)
    18f2:	81 11       	cpse	r24, r1
    18f4:	08 c0       	rjmp	.+16     	; 0x1906 <cliI2c+0x74>
	{
		cliPrintf_P(PSTR("i2c scan\n"));
    18f6:	80 e8       	ldi	r24, 0x80	; 128
    18f8:	91 e0       	ldi	r25, 0x01	; 1
    18fa:	9f 93       	push	r25
    18fc:	8f 93       	push	r24
    18fe:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1902:	0f 90       	pop	r0
    1904:	0f 90       	pop	r0
//		cliPrintf_P(PSTR("i2c write 0x00~0xFF\n"));
//		cliPrintf_P(PSTR("i2c write 0x00~0xFF\n"));
	}


}
    1906:	cf 91       	pop	r28
    1908:	08 95       	ret

0000190a <cliInfo>:

	 return true;
 }

 void cliInfo(cli_args_t *args)
 {
    190a:	cf 92       	push	r12
    190c:	df 92       	push	r13
    190e:	ef 92       	push	r14
    1910:	ff 92       	push	r15
    1912:	0f 93       	push	r16
    1914:	1f 93       	push	r17
    1916:	cf 93       	push	r28
    1918:	df 93       	push	r29
    191a:	cd b7       	in	r28, 0x3d	; 61
    191c:	de b7       	in	r29, 0x3e	; 62
    191e:	ec 97       	sbiw	r28, 0x3c	; 60
    1920:	cd bf       	out	0x3d, r28	; 61
    1922:	de bf       	out	0x3e, r29	; 62
	 bool ret = false;

	 if (args->argc == 1 && args->isStr(0, "fuse") == true)
    1924:	dc 01       	movw	r26, r24
    1926:	2d 91       	ld	r18, X+
    1928:	3c 91       	ld	r19, X
    192a:	11 97       	sbiw	r26, 0x01	; 1
    192c:	21 30       	cpi	r18, 0x01	; 1
    192e:	31 05       	cpc	r19, r1
    1930:	09 f0       	breq	.+2      	; 0x1934 <cliInfo+0x2a>
    1932:	37 c2       	rjmp	.+1134   	; 0x1da2 <cliInfo+0x498>
    1934:	1a 96       	adiw	r26, 0x0a	; 10
    1936:	ed 91       	ld	r30, X+
    1938:	fc 91       	ld	r31, X
    193a:	1b 97       	sbiw	r26, 0x0b	; 11
    193c:	64 eb       	ldi	r22, 0xB4	; 180
    193e:	74 eb       	ldi	r23, 0xB4	; 180
    1940:	80 e0       	ldi	r24, 0x00	; 0
    1942:	09 95       	icall
    1944:	88 23       	and	r24, r24
    1946:	09 f4       	brne	.+2      	; 0x194a <cliInfo+0x40>
    1948:	2e c2       	rjmp	.+1116   	; 0x1da6 <cliInfo+0x49c>
	 {
		 cliPrintf_P(PSTR("\nFUSE.WDTCFG      \t : 0x%08X\n"), FUSE.WDTCFG);
    194a:	00 e8       	ldi	r16, 0x80	; 128
    194c:	12 e1       	ldi	r17, 0x12	; 18
    194e:	f8 01       	movw	r30, r16
    1950:	80 81       	ld	r24, Z
    1952:	1f 92       	push	r1
    1954:	8f 93       	push	r24
    1956:	8d e9       	ldi	r24, 0x9D	; 157
    1958:	94 e0       	ldi	r25, 0x04	; 4
    195a:	9f 93       	push	r25
    195c:	8f 93       	push	r24
    195e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 cliPrintf_P(PSTR("     WINDOW[3:0] \t : 0x%X\n"), (FUSE.WDTCFG >> FUSE_WINDOW_gp) & FUSE_WINDOW_gm);
    1962:	d8 01       	movw	r26, r16
    1964:	8c 91       	ld	r24, X
    1966:	1f 92       	push	r1
    1968:	1f 92       	push	r1
    196a:	82 e8       	ldi	r24, 0x82	; 130
    196c:	94 e0       	ldi	r25, 0x04	; 4
    196e:	9f 93       	push	r25
    1970:	8f 93       	push	r24
    1972:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 cliPrintf_P(PSTR("     PERIOD[3:0] \t : 0x%X\n"), (FUSE.WDTCFG >> FUSE_PERIOD_gp) & FUSE_PERIOD_gm);
    1976:	f8 01       	movw	r30, r16
    1978:	80 81       	ld	r24, Z
    197a:	8f 70       	andi	r24, 0x0F	; 15
    197c:	1f 92       	push	r1
    197e:	8f 93       	push	r24
    1980:	87 e6       	ldi	r24, 0x67	; 103
    1982:	94 e0       	ldi	r25, 0x04	; 4
    1984:	9f 93       	push	r25
    1986:	8f 93       	push	r24
    1988:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

		 uint16_t reg;

		 // FUSE.BODCFG
		 //
		 cliPrintf_P(PSTR("\nFUSE.BODCFG      \t : 0x%08X\n"), FUSE.BODCFG);
    198c:	d8 01       	movw	r26, r16
    198e:	11 96       	adiw	r26, 0x01	; 1
    1990:	8c 91       	ld	r24, X
    1992:	1f 92       	push	r1
    1994:	8f 93       	push	r24
    1996:	89 e4       	ldi	r24, 0x49	; 73
    1998:	94 e0       	ldi	r25, 0x04	; 4
    199a:	9f 93       	push	r25
    199c:	8f 93       	push	r24
    199e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

		 const char * PROGMEM lvl_tbl[] = {PSTR("1.9V"), PSTR("2.45V"), PSTR("2.70V"), PSTR("2.85V")};
    19a2:	84 e4       	ldi	r24, 0x44	; 68
    19a4:	94 e0       	ldi	r25, 0x04	; 4
    19a6:	89 a7       	std	Y+41, r24	; 0x29
    19a8:	9a a7       	std	Y+42, r25	; 0x2a
    19aa:	8e e3       	ldi	r24, 0x3E	; 62
    19ac:	94 e0       	ldi	r25, 0x04	; 4
    19ae:	8b a7       	std	Y+43, r24	; 0x2b
    19b0:	9c a7       	std	Y+44, r25	; 0x2c
    19b2:	88 e3       	ldi	r24, 0x38	; 56
    19b4:	94 e0       	ldi	r25, 0x04	; 4
    19b6:	8d a7       	std	Y+45, r24	; 0x2d
    19b8:	9e a7       	std	Y+46, r25	; 0x2e
    19ba:	82 e3       	ldi	r24, 0x32	; 50
    19bc:	94 e0       	ldi	r25, 0x04	; 4
    19be:	8f a7       	std	Y+47, r24	; 0x2f
    19c0:	98 ab       	std	Y+48, r25	; 0x30
		 const char * PROGMEM sampfreq_tbl[] = {PSTR("128Hz"), PSTR("32Hz")};
    19c2:	8c e2       	ldi	r24, 0x2C	; 44
    19c4:	94 e0       	ldi	r25, 0x04	; 4
    19c6:	89 af       	std	Y+57, r24	; 0x39
    19c8:	9a af       	std	Y+58, r25	; 0x3a
    19ca:	87 e2       	ldi	r24, 0x27	; 39
    19cc:	94 e0       	ldi	r25, 0x04	; 4
    19ce:	8b af       	std	Y+59, r24	; 0x3b
    19d0:	9c af       	std	Y+60, r25	; 0x3c
		 const char * PROGMEM active_tbl[] = {PSTR("DISABLE"), PSTR("ENABLE"), PSTR("SAMPLE"), PSTR("ENABLEWAIT")};
    19d2:	8f e1       	ldi	r24, 0x1F	; 31
    19d4:	94 e0       	ldi	r25, 0x04	; 4
    19d6:	89 a3       	std	Y+33, r24	; 0x21
    19d8:	9a a3       	std	Y+34, r25	; 0x22
    19da:	88 e1       	ldi	r24, 0x18	; 24
    19dc:	94 e0       	ldi	r25, 0x04	; 4
    19de:	8b a3       	std	Y+35, r24	; 0x23
    19e0:	9c a3       	std	Y+36, r25	; 0x24
    19e2:	81 e1       	ldi	r24, 0x11	; 17
    19e4:	94 e0       	ldi	r25, 0x04	; 4
    19e6:	8d a3       	std	Y+37, r24	; 0x25
    19e8:	9e a3       	std	Y+38, r25	; 0x26
    19ea:	86 e0       	ldi	r24, 0x06	; 6
    19ec:	94 e0       	ldi	r25, 0x04	; 4
    19ee:	8f a3       	std	Y+39, r24	; 0x27
    19f0:	98 a7       	std	Y+40, r25	; 0x28
		 const char * PROGMEM sleep_tbl[] = {PSTR("DISABLE"), PSTR("ENABLE"), PSTR("SAMPLE"), PSTR("Reserved")};
    19f2:	8e ef       	ldi	r24, 0xFE	; 254
    19f4:	93 e0       	ldi	r25, 0x03	; 3
    19f6:	89 8f       	std	Y+25, r24	; 0x19
    19f8:	9a 8f       	std	Y+26, r25	; 0x1a
    19fa:	87 ef       	ldi	r24, 0xF7	; 247
    19fc:	93 e0       	ldi	r25, 0x03	; 3
    19fe:	8b 8f       	std	Y+27, r24	; 0x1b
    1a00:	9c 8f       	std	Y+28, r25	; 0x1c
    1a02:	80 ef       	ldi	r24, 0xF0	; 240
    1a04:	93 e0       	ldi	r25, 0x03	; 3
    1a06:	8d 8f       	std	Y+29, r24	; 0x1d
    1a08:	9e 8f       	std	Y+30, r25	; 0x1e
    1a0a:	87 ee       	ldi	r24, 0xE7	; 231
    1a0c:	93 e0       	ldi	r25, 0x03	; 3
    1a0e:	8f 8f       	std	Y+31, r24	; 0x1f
    1a10:	98 a3       	std	Y+32, r25	; 0x20

		 reg = (FUSE.BODCFG & FUSE_LVL_gm) >> FUSE_LVL_gp;
    1a12:	f8 01       	movw	r30, r16
    1a14:	c1 80       	ldd	r12, Z+1	; 0x01
    1a16:	c6 94       	lsr	r12
    1a18:	c6 94       	lsr	r12
    1a1a:	c6 94       	lsr	r12
    1a1c:	c6 94       	lsr	r12
    1a1e:	c6 94       	lsr	r12
    1a20:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     LVL         \t : ")); cliPrintf_P(lvl_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1a22:	81 ed       	ldi	r24, 0xD1	; 209
    1a24:	93 e0       	ldi	r25, 0x03	; 3
    1a26:	9f 93       	push	r25
    1a28:	8f 93       	push	r24
    1a2a:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1a2e:	f6 01       	movw	r30, r12
    1a30:	ee 0f       	add	r30, r30
    1a32:	ff 1f       	adc	r31, r31
    1a34:	81 e0       	ldi	r24, 0x01	; 1
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	8c 0f       	add	r24, r28
    1a3a:	9d 1f       	adc	r25, r29
    1a3c:	e8 0f       	add	r30, r24
    1a3e:	f9 1f       	adc	r31, r25
    1a40:	80 a5       	ldd	r24, Z+40	; 0x28
    1a42:	91 a5       	ldd	r25, Z+41	; 0x29
    1a44:	9f 93       	push	r25
    1a46:	8f 93       	push	r24
    1a48:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1a4c:	8f ec       	ldi	r24, 0xCF	; 207
    1a4e:	93 e0       	ldi	r25, 0x03	; 3
    1a50:	9f 93       	push	r25
    1a52:	8f 93       	push	r24
    1a54:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_SAMPFREQ_bm) >> FUSE_SAMPFREQ_bp;
    1a58:	d8 01       	movw	r26, r16
    1a5a:	11 96       	adiw	r26, 0x01	; 1
    1a5c:	8c 91       	ld	r24, X
    1a5e:	80 71       	andi	r24, 0x10	; 16
    1a60:	c8 2e       	mov	r12, r24
    1a62:	d1 2c       	mov	r13, r1
    1a64:	d5 94       	asr	r13
    1a66:	c7 94       	ror	r12
    1a68:	d5 94       	asr	r13
    1a6a:	c7 94       	ror	r12
    1a6c:	d5 94       	asr	r13
    1a6e:	c7 94       	ror	r12
    1a70:	d5 94       	asr	r13
    1a72:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     SAMPFREQ    \t : ")); cliPrintf_P(sampfreq_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1a74:	89 eb       	ldi	r24, 0xB9	; 185
    1a76:	93 e0       	ldi	r25, 0x03	; 3
    1a78:	9f 93       	push	r25
    1a7a:	8f 93       	push	r24
    1a7c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1a80:	f6 01       	movw	r30, r12
    1a82:	ee 0f       	add	r30, r30
    1a84:	ff 1f       	adc	r31, r31
    1a86:	81 e0       	ldi	r24, 0x01	; 1
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	8c 0f       	add	r24, r28
    1a8c:	9d 1f       	adc	r25, r29
    1a8e:	e8 0f       	add	r30, r24
    1a90:	f9 1f       	adc	r31, r25
    1a92:	80 ad       	ldd	r24, Z+56	; 0x38
    1a94:	91 ad       	ldd	r25, Z+57	; 0x39
    1a96:	9f 93       	push	r25
    1a98:	8f 93       	push	r24
    1a9a:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1a9e:	87 eb       	ldi	r24, 0xB7	; 183
    1aa0:	93 e0       	ldi	r25, 0x03	; 3
    1aa2:	9f 93       	push	r25
    1aa4:	8f 93       	push	r24
    1aa6:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_ACTIVE_gm) >> FUSE_ACTIVE_gp;
    1aaa:	d8 01       	movw	r26, r16
    1aac:	11 96       	adiw	r26, 0x01	; 1
    1aae:	8c 91       	ld	r24, X
    1ab0:	8c 70       	andi	r24, 0x0C	; 12
    1ab2:	c8 2e       	mov	r12, r24
    1ab4:	d1 2c       	mov	r13, r1
    1ab6:	d5 94       	asr	r13
    1ab8:	c7 94       	ror	r12
    1aba:	d5 94       	asr	r13
    1abc:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     ACTIVE      \t : ")); cliPrintf_P(active_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1abe:	81 ea       	ldi	r24, 0xA1	; 161
    1ac0:	93 e0       	ldi	r25, 0x03	; 3
    1ac2:	9f 93       	push	r25
    1ac4:	8f 93       	push	r24
    1ac6:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1aca:	f6 01       	movw	r30, r12
    1acc:	ee 0f       	add	r30, r30
    1ace:	ff 1f       	adc	r31, r31
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	8c 0f       	add	r24, r28
    1ad6:	9d 1f       	adc	r25, r29
    1ad8:	e8 0f       	add	r30, r24
    1ada:	f9 1f       	adc	r31, r25
    1adc:	80 a1       	ldd	r24, Z+32	; 0x20
    1ade:	91 a1       	ldd	r25, Z+33	; 0x21
    1ae0:	9f 93       	push	r25
    1ae2:	8f 93       	push	r24
    1ae4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	de bf       	out	0x3e, r29	; 62
    1aec:	8f e9       	ldi	r24, 0x9F	; 159
    1aee:	93 e0       	ldi	r25, 0x03	; 3
    1af0:	9f 93       	push	r25
    1af2:	8f 93       	push	r24
    1af4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_SLEEP_gm) >> FUSE_SLEEP_gp;
    1af8:	d8 01       	movw	r26, r16
    1afa:	11 96       	adiw	r26, 0x01	; 1
    1afc:	ec 91       	ld	r30, X
    1afe:	e3 70       	andi	r30, 0x03	; 3
    1b00:	ce 2e       	mov	r12, r30
    1b02:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     SLEEP       \t : ")); cliPrintf_P(sleep_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1b04:	89 e8       	ldi	r24, 0x89	; 137
    1b06:	93 e0       	ldi	r25, 0x03	; 3
    1b08:	9f 93       	push	r25
    1b0a:	8f 93       	push	r24
    1b0c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1b10:	f6 01       	movw	r30, r12
    1b12:	ee 0f       	add	r30, r30
    1b14:	ff 1f       	adc	r31, r31
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	8c 0f       	add	r24, r28
    1b1c:	9d 1f       	adc	r25, r29
    1b1e:	e8 0f       	add	r30, r24
    1b20:	f9 1f       	adc	r31, r25
    1b22:	80 8d       	ldd	r24, Z+24	; 0x18
    1b24:	91 8d       	ldd	r25, Z+25	; 0x19
    1b26:	9f 93       	push	r25
    1b28:	8f 93       	push	r24
    1b2a:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1b2e:	87 e8       	ldi	r24, 0x87	; 135
    1b30:	93 e0       	ldi	r25, 0x03	; 3
    1b32:	9f 93       	push	r25
    1b34:	8f 93       	push	r24
    1b36:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>


		 // FUSE.OSCCFG
		 //
		 cliPrintf_P(PSTR("\nFUSE.OSCCFG     \t : 0x%08X\n"), FUSE.OSCCFG);
    1b3a:	d8 01       	movw	r26, r16
    1b3c:	12 96       	adiw	r26, 0x02	; 2
    1b3e:	8c 91       	ld	r24, X
    1b40:	1f 92       	push	r1
    1b42:	8f 93       	push	r24
    1b44:	8a e6       	ldi	r24, 0x6A	; 106
    1b46:	93 e0       	ldi	r25, 0x03	; 3
    1b48:	9f 93       	push	r25
    1b4a:	8f 93       	push	r24
    1b4c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

		 const char * PROGMEM clksel_tbl[] = {PSTR("OSCHF"), PSTR("OSC32K")};
    1b50:	84 e6       	ldi	r24, 0x64	; 100
    1b52:	93 e0       	ldi	r25, 0x03	; 3
    1b54:	8d ab       	std	Y+53, r24	; 0x35
    1b56:	9e ab       	std	Y+54, r25	; 0x36
    1b58:	8d e5       	ldi	r24, 0x5D	; 93
    1b5a:	93 e0       	ldi	r25, 0x03	; 3
    1b5c:	8f ab       	std	Y+55, r24	; 0x37
    1b5e:	98 af       	std	Y+56, r25	; 0x38

		 reg = (FUSE.OSCCFG & FUSE_FREQSEL_gm) >> FUSE_FREQSEL_gp;
    1b60:	d8 01       	movw	r26, r16
    1b62:	12 96       	adiw	r26, 0x02	; 2
    1b64:	ec 91       	ld	r30, X
    1b66:	e3 70       	andi	r30, 0x03	; 3
    1b68:	ce 2e       	mov	r12, r30
    1b6a:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     CLKSEL     \t : ")); cliPrintf_P(clksel_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1b6c:	88 e4       	ldi	r24, 0x48	; 72
    1b6e:	93 e0       	ldi	r25, 0x03	; 3
    1b70:	9f 93       	push	r25
    1b72:	8f 93       	push	r24
    1b74:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1b78:	f6 01       	movw	r30, r12
    1b7a:	ee 0f       	add	r30, r30
    1b7c:	ff 1f       	adc	r31, r31
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	8c 0f       	add	r24, r28
    1b84:	9d 1f       	adc	r25, r29
    1b86:	e8 0f       	add	r30, r24
    1b88:	f9 1f       	adc	r31, r25
    1b8a:	84 a9       	ldd	r24, Z+52	; 0x34
    1b8c:	95 a9       	ldd	r25, Z+53	; 0x35
    1b8e:	9f 93       	push	r25
    1b90:	8f 93       	push	r24
    1b92:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1b96:	86 e4       	ldi	r24, 0x46	; 70
    1b98:	93 e0       	ldi	r25, 0x03	; 3
    1b9a:	9f 93       	push	r25
    1b9c:	8f 93       	push	r24
    1b9e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>


		 // FUSE.SYSCFG0
		 //
		 cliPrintf_P(PSTR("\nFUSE.SYSCFG0    \t : 0x%08X\n"), FUSE.SYSCFG0);
    1ba2:	d8 01       	movw	r26, r16
    1ba4:	15 96       	adiw	r26, 0x05	; 5
    1ba6:	8c 91       	ld	r24, X
    1ba8:	1f 92       	push	r1
    1baa:	8f 93       	push	r24
    1bac:	89 e2       	ldi	r24, 0x29	; 41
    1bae:	93 e0       	ldi	r25, 0x03	; 3
    1bb0:	9f 93       	push	r25
    1bb2:	8f 93       	push	r24
    1bb4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 const char * PROGMEM rstpincfg_tbl[] = {PSTR("INPUT PF6 configured as general input pin"),
    1bb8:	8f ef       	ldi	r24, 0xFF	; 255
    1bba:	92 e0       	ldi	r25, 0x02	; 2
    1bbc:	89 8b       	std	Y+17, r24	; 0x11
    1bbe:	9a 8b       	std	Y+18, r25	; 0x12
    1bc0:	8c ef       	ldi	r24, 0xFC	; 252
    1bc2:	92 e0       	ldi	r25, 0x02	; 2
    1bc4:	8b 8b       	std	Y+19, r24	; 0x13
    1bc6:	9c 8b       	std	Y+20, r25	; 0x14
    1bc8:	88 ed       	ldi	r24, 0xD8	; 216
    1bca:	92 e0       	ldi	r25, 0x02	; 2
    1bcc:	8d 8b       	std	Y+21, r24	; 0x15
    1bce:	9e 8b       	std	Y+22, r25	; 0x16
    1bd0:	85 ed       	ldi	r24, 0xD5	; 213
    1bd2:	92 e0       	ldi	r25, 0x02	; 2
    1bd4:	8f 8b       	std	Y+23, r24	; 0x17
    1bd6:	98 8f       	std	Y+24, r25	; 0x18
			 PSTR("- "),
			 PSTR("RESET External Reset enabled on PF6"),
		 PSTR("- ")};
		 const char * PROGMEM eesave_tbl[] = {PSTR("EEPROM erased during Chip Erase"), PSTR("EEPROM not erased under Chip Erase")};
    1bd8:	85 eb       	ldi	r24, 0xB5	; 181
    1bda:	92 e0       	ldi	r25, 0x02	; 2
    1bdc:	89 ab       	std	Y+49, r24	; 0x31
    1bde:	9a ab       	std	Y+50, r25	; 0x32
    1be0:	82 e9       	ldi	r24, 0x92	; 146
    1be2:	92 e0       	ldi	r25, 0x02	; 2
    1be4:	8b ab       	std	Y+51, r24	; 0x33
    1be6:	9c ab       	std	Y+52, r25	; 0x34

		 reg = (FUSE.SYSCFG0 & FUSE_RSTPINCFG_gm) >> FUSE_RSTPINCFG_gp;
    1be8:	f8 01       	movw	r30, r16
    1bea:	85 81       	ldd	r24, Z+5	; 0x05
    1bec:	8c 70       	andi	r24, 0x0C	; 12
    1bee:	c8 2e       	mov	r12, r24
    1bf0:	d1 2c       	mov	r13, r1
    1bf2:	d5 94       	asr	r13
    1bf4:	c7 94       	ror	r12
    1bf6:	d5 94       	asr	r13
    1bf8:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     RSTPINCFG  \t : ")); cliPrintf_P(rstpincfg_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1bfa:	8d e7       	ldi	r24, 0x7D	; 125
    1bfc:	92 e0       	ldi	r25, 0x02	; 2
    1bfe:	9f 93       	push	r25
    1c00:	8f 93       	push	r24
    1c02:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1c06:	f6 01       	movw	r30, r12
    1c08:	ee 0f       	add	r30, r30
    1c0a:	ff 1f       	adc	r31, r31
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	8c 0f       	add	r24, r28
    1c12:	9d 1f       	adc	r25, r29
    1c14:	e8 0f       	add	r30, r24
    1c16:	f9 1f       	adc	r31, r25
    1c18:	80 89       	ldd	r24, Z+16	; 0x10
    1c1a:	91 89       	ldd	r25, Z+17	; 0x11
    1c1c:	9f 93       	push	r25
    1c1e:	8f 93       	push	r24
    1c20:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1c24:	8b e7       	ldi	r24, 0x7B	; 123
    1c26:	92 e0       	ldi	r25, 0x02	; 2
    1c28:	9f 93       	push	r25
    1c2a:	8f 93       	push	r24
    1c2c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 reg = (FUSE.SYSCFG0 & FUSE_EESAVE_bm) >> FUSE_EESAVE_bp;
    1c30:	d8 01       	movw	r26, r16
    1c32:	15 96       	adiw	r26, 0x05	; 5
    1c34:	8c 91       	ld	r24, X
    1c36:	80 fb       	bst	r24, 0
    1c38:	ee 24       	eor	r14, r14
    1c3a:	e0 f8       	bld	r14, 0
    1c3c:	f1 2c       	mov	r15, r1
		 cliPrintf_P(PSTR("     EESAVE     \t : ")); cliPrintf_P(eesave_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1c3e:	86 e6       	ldi	r24, 0x66	; 102
    1c40:	92 e0       	ldi	r25, 0x02	; 2
    1c42:	9f 93       	push	r25
    1c44:	8f 93       	push	r24
    1c46:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1c4a:	ee 0c       	add	r14, r14
    1c4c:	ff 1c       	adc	r15, r15
    1c4e:	e1 e0       	ldi	r30, 0x01	; 1
    1c50:	f0 e0       	ldi	r31, 0x00	; 0
    1c52:	ec 0f       	add	r30, r28
    1c54:	fd 1f       	adc	r31, r29
    1c56:	ee 0d       	add	r30, r14
    1c58:	ff 1d       	adc	r31, r15
    1c5a:	80 a9       	ldd	r24, Z+48	; 0x30
    1c5c:	91 a9       	ldd	r25, Z+49	; 0x31
    1c5e:	9f 93       	push	r25
    1c60:	8f 93       	push	r24
    1c62:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1c66:	cd bf       	out	0x3d, r28	; 61
    1c68:	de bf       	out	0x3e, r29	; 62
    1c6a:	84 e6       	ldi	r24, 0x64	; 100
    1c6c:	92 e0       	ldi	r25, 0x02	; 2
    1c6e:	9f 93       	push	r25
    1c70:	8f 93       	push	r24
    1c72:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>


		 // FUSE.SYSCFG0
		 //
		 cliPrintf_P(PSTR("\nFUSE.SYSCFG1    \t : 0x%08X\n"), FUSE.SYSCFG1);
    1c76:	d8 01       	movw	r26, r16
    1c78:	16 96       	adiw	r26, 0x06	; 6
    1c7a:	8c 91       	ld	r24, X
    1c7c:	1f 92       	push	r1
    1c7e:	8f 93       	push	r24
    1c80:	87 e4       	ldi	r24, 0x47	; 71
    1c82:	92 e0       	ldi	r25, 0x02	; 2
    1c84:	9f 93       	push	r25
    1c86:	8f 93       	push	r24
    1c88:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

		 const char * PROGMEM sut_tbl[] = {PSTR("0 ms"), PSTR("1 ms"), PSTR("2 ms"), PSTR("4 ms"),
    1c8c:	82 e4       	ldi	r24, 0x42	; 66
    1c8e:	92 e0       	ldi	r25, 0x02	; 2
    1c90:	89 83       	std	Y+1, r24	; 0x01
    1c92:	9a 83       	std	Y+2, r25	; 0x02
    1c94:	8d e3       	ldi	r24, 0x3D	; 61
    1c96:	92 e0       	ldi	r25, 0x02	; 2
    1c98:	8b 83       	std	Y+3, r24	; 0x03
    1c9a:	9c 83       	std	Y+4, r25	; 0x04
    1c9c:	88 e3       	ldi	r24, 0x38	; 56
    1c9e:	92 e0       	ldi	r25, 0x02	; 2
    1ca0:	8d 83       	std	Y+5, r24	; 0x05
    1ca2:	9e 83       	std	Y+6, r25	; 0x06
    1ca4:	83 e3       	ldi	r24, 0x33	; 51
    1ca6:	92 e0       	ldi	r25, 0x02	; 2
    1ca8:	8f 83       	std	Y+7, r24	; 0x07
    1caa:	98 87       	std	Y+8, r25	; 0x08
    1cac:	8e e2       	ldi	r24, 0x2E	; 46
    1cae:	92 e0       	ldi	r25, 0x02	; 2
    1cb0:	89 87       	std	Y+9, r24	; 0x09
    1cb2:	9a 87       	std	Y+10, r25	; 0x0a
    1cb4:	88 e2       	ldi	r24, 0x28	; 40
    1cb6:	92 e0       	ldi	r25, 0x02	; 2
    1cb8:	8b 87       	std	Y+11, r24	; 0x0b
    1cba:	9c 87       	std	Y+12, r25	; 0x0c
    1cbc:	82 e2       	ldi	r24, 0x22	; 34
    1cbe:	92 e0       	ldi	r25, 0x02	; 2
    1cc0:	8d 87       	std	Y+13, r24	; 0x0d
    1cc2:	9e 87       	std	Y+14, r25	; 0x0e
    1cc4:	8c e1       	ldi	r24, 0x1C	; 28
    1cc6:	92 e0       	ldi	r25, 0x02	; 2
    1cc8:	8f 87       	std	Y+15, r24	; 0x0f
    1cca:	98 8b       	std	Y+16, r25	; 0x10
		 PSTR("8 ms"), PSTR("16 ms"), PSTR("32 ms"), PSTR("64 ms")};

		 reg = (FUSE.SYSCFG1 & FUSE_SUT_gm) >> FUSE_SUT_gp;
    1ccc:	d8 01       	movw	r26, r16
    1cce:	16 96       	adiw	r26, 0x06	; 6
    1cd0:	ec 91       	ld	r30, X
    1cd2:	e7 70       	andi	r30, 0x07	; 7
    1cd4:	ee 2e       	mov	r14, r30
    1cd6:	f1 2c       	mov	r15, r1
		 cliPrintf_P(PSTR("     SUT          \t : ")); cliPrintf_P(sut_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1cd8:	85 e0       	ldi	r24, 0x05	; 5
    1cda:	92 e0       	ldi	r25, 0x02	; 2
    1cdc:	9f 93       	push	r25
    1cde:	8f 93       	push	r24
    1ce0:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1ce4:	f7 01       	movw	r30, r14
    1ce6:	ee 0f       	add	r30, r30
    1ce8:	ff 1f       	adc	r31, r31
    1cea:	81 e0       	ldi	r24, 0x01	; 1
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	8c 0f       	add	r24, r28
    1cf0:	9d 1f       	adc	r25, r29
    1cf2:	e8 0f       	add	r30, r24
    1cf4:	f9 1f       	adc	r31, r25
    1cf6:	80 81       	ld	r24, Z
    1cf8:	91 81       	ldd	r25, Z+1	; 0x01
    1cfa:	9f 93       	push	r25
    1cfc:	8f 93       	push	r24
    1cfe:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1d02:	83 e0       	ldi	r24, 0x03	; 3
    1d04:	92 e0       	ldi	r25, 0x02	; 2
    1d06:	9f 93       	push	r25
    1d08:	8f 93       	push	r24
    1d0a:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>


		 // FUSE.BOOTSIZE
		 //
		 cliPrintf_P(PSTR("\nFUSE.BOOTEND   \t : 0x%08X\n"), FUSE.BOOTEND);
    1d0e:	d8 01       	movw	r26, r16
    1d10:	18 96       	adiw	r26, 0x08	; 8
    1d12:	8c 91       	ld	r24, X
    1d14:	1f 92       	push	r1
    1d16:	8f 93       	push	r24
    1d18:	87 ee       	ldi	r24, 0xE7	; 231
    1d1a:	91 e0       	ldi	r25, 0x01	; 1
    1d1c:	9f 93       	push	r25
    1d1e:	8f 93       	push	r24
    1d20:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 cliPrintf_P(PSTR("     BOOTEND     \t : %d KB\n"), FUSE.BOOTEND*512/1024);
    1d24:	f8 01       	movw	r30, r16
    1d26:	20 85       	ldd	r18, Z+8	; 0x08
    1d28:	80 e0       	ldi	r24, 0x00	; 0
    1d2a:	92 2f       	mov	r25, r18
    1d2c:	99 0f       	add	r25, r25
    1d2e:	99 23       	and	r25, r25
    1d30:	14 f4       	brge	.+4      	; 0x1d36 <cliInfo+0x42c>
    1d32:	81 50       	subi	r24, 0x01	; 1
    1d34:	9c 4f       	sbci	r25, 0xFC	; 252
    1d36:	29 2f       	mov	r18, r25
    1d38:	22 0f       	add	r18, r18
    1d3a:	22 0b       	sbc	r18, r18
    1d3c:	89 2f       	mov	r24, r25
    1d3e:	85 95       	asr	r24
    1d40:	85 95       	asr	r24
    1d42:	2f 93       	push	r18
    1d44:	8f 93       	push	r24
    1d46:	8b ec       	ldi	r24, 0xCB	; 203
    1d48:	91 e0       	ldi	r25, 0x01	; 1
    1d4a:	9f 93       	push	r25
    1d4c:	8f 93       	push	r24
    1d4e:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

		 // FUSE.CODESIZE
		 //
		 cliPrintf_P(PSTR("\nFUSE.APPEND   \t : 0x%08X\n"), FUSE.APPEND);
    1d52:	00 e8       	ldi	r16, 0x80	; 128
    1d54:	12 e1       	ldi	r17, 0x12	; 18
    1d56:	d8 01       	movw	r26, r16
    1d58:	17 96       	adiw	r26, 0x07	; 7
    1d5a:	8c 91       	ld	r24, X
    1d5c:	1f 92       	push	r1
    1d5e:	8f 93       	push	r24
    1d60:	80 eb       	ldi	r24, 0xB0	; 176
    1d62:	91 e0       	ldi	r25, 0x01	; 1
    1d64:	9f 93       	push	r25
    1d66:	8f 93       	push	r24
    1d68:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		 cliPrintf_P(PSTR("     APPEND     \t : %d KB\n"), FUSE.APPEND*512/1024);
    1d6c:	f8 01       	movw	r30, r16
    1d6e:	27 81       	ldd	r18, Z+7	; 0x07
    1d70:	80 e0       	ldi	r24, 0x00	; 0
    1d72:	92 2f       	mov	r25, r18
    1d74:	99 0f       	add	r25, r25
    1d76:	99 23       	and	r25, r25
    1d78:	14 f4       	brge	.+4      	; 0x1d7e <cliInfo+0x474>
    1d7a:	81 50       	subi	r24, 0x01	; 1
    1d7c:	9c 4f       	sbci	r25, 0xFC	; 252
    1d7e:	29 2f       	mov	r18, r25
    1d80:	22 0f       	add	r18, r18
    1d82:	22 0b       	sbc	r18, r18
    1d84:	89 2f       	mov	r24, r25
    1d86:	85 95       	asr	r24
    1d88:	85 95       	asr	r24
    1d8a:	2f 93       	push	r18
    1d8c:	8f 93       	push	r24
    1d8e:	85 e9       	ldi	r24, 0x95	; 149
    1d90:	91 e0       	ldi	r25, 0x01	; 1
    1d92:	9f 93       	push	r25
    1d94:	8f 93       	push	r24
    1d96:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1d9a:	cd bf       	out	0x3d, r28	; 61
    1d9c:	de bf       	out	0x3e, r29	; 62

		 ret = true;
    1d9e:	81 e0       	ldi	r24, 0x01	; 1
    1da0:	03 c0       	rjmp	.+6      	; 0x1da8 <cliInfo+0x49e>
	 return true;
 }

 void cliInfo(cli_args_t *args)
 {
	 bool ret = false;
    1da2:	80 e0       	ldi	r24, 0x00	; 0
    1da4:	01 c0       	rjmp	.+2      	; 0x1da8 <cliInfo+0x49e>
    1da6:	80 e0       	ldi	r24, 0x00	; 0
		 cliPrintf_P(PSTR("     APPEND     \t : %d KB\n"), FUSE.APPEND*512/1024);

		 ret = true;
	 }

	 if (ret != true)
    1da8:	81 11       	cpse	r24, r1
    1daa:	08 c0       	rjmp	.+16     	; 0x1dbc <cliInfo+0x4b2>
	 {
		 cliPrintf_P(PSTR("info fuse\n"));
    1dac:	8a e8       	ldi	r24, 0x8A	; 138
    1dae:	91 e0       	ldi	r25, 0x01	; 1
    1db0:	9f 93       	push	r25
    1db2:	8f 93       	push	r24
    1db4:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1db8:	0f 90       	pop	r0
    1dba:	0f 90       	pop	r0
	 }
 }
    1dbc:	ec 96       	adiw	r28, 0x3c	; 60
    1dbe:	cd bf       	out	0x3d, r28	; 61
    1dc0:	de bf       	out	0x3e, r29	; 62
    1dc2:	df 91       	pop	r29
    1dc4:	cf 91       	pop	r28
    1dc6:	1f 91       	pop	r17
    1dc8:	0f 91       	pop	r16
    1dca:	ff 90       	pop	r15
    1dcc:	ef 90       	pop	r14
    1dce:	df 90       	pop	r13
    1dd0:	cf 90       	pop	r12
    1dd2:	08 95       	ret

00001dd4 <infoInit>:
 void cliInfo(cli_args_t *args);

 
 bool infoInit(void)
 {
	 cliAdd("info", cliInfo);
    1dd4:	65 e8       	ldi	r22, 0x85	; 133
    1dd6:	7c e0       	ldi	r23, 0x0C	; 12
    1dd8:	89 eb       	ldi	r24, 0xB9	; 185
    1dda:	94 eb       	ldi	r25, 0xB4	; 180
    1ddc:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>

	 return true;
 }
    1de0:	81 e0       	ldi	r24, 0x01	; 1
    1de2:	08 95       	ret

00001de4 <ledInit>:
	{
		*reg &= ~(1<<pgm_read_byte(&pin_tbl[ch].pin_num));
	}
	else
	{
		*reg |= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	20 c0       	rjmp	.+64     	; 0x1e2a <ledInit+0x46>
    1dea:	c9 01       	movw	r24, r18
    1dec:	88 0f       	add	r24, r24
    1dee:	99 1f       	adc	r25, r25
    1df0:	fc 01       	movw	r30, r24
    1df2:	e2 0f       	add	r30, r18
    1df4:	f3 1f       	adc	r31, r19
    1df6:	ee 0f       	add	r30, r30
    1df8:	ff 1f       	adc	r31, r31
    1dfa:	e5 54       	subi	r30, 0x45	; 69
    1dfc:	fb 4f       	sbci	r31, 0xFB	; 251
    1dfe:	a5 91       	lpm	r26, Z+
    1e00:	b4 91       	lpm	r27, Z
    1e02:	fc 01       	movw	r30, r24
    1e04:	e2 0f       	add	r30, r18
    1e06:	f3 1f       	adc	r31, r19
    1e08:	ee 0f       	add	r30, r30
    1e0a:	ff 1f       	adc	r31, r31
    1e0c:	e1 54       	subi	r30, 0x41	; 65
    1e0e:	fb 4f       	sbci	r31, 0xFB	; 251
    1e10:	e4 91       	lpm	r30, Z
    1e12:	81 e0       	ldi	r24, 0x01	; 1
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	02 c0       	rjmp	.+4      	; 0x1e1c <ledInit+0x38>
    1e18:	88 0f       	add	r24, r24
    1e1a:	99 1f       	adc	r25, r25
    1e1c:	ea 95       	dec	r30
    1e1e:	e2 f7       	brpl	.-8      	; 0x1e18 <ledInit+0x34>
    1e20:	9c 91       	ld	r25, X
    1e22:	89 2b       	or	r24, r25
    1e24:	8c 93       	st	X, r24
    1e26:	2f 5f       	subi	r18, 0xFF	; 255
    1e28:	3f 4f       	sbci	r19, 0xFF	; 255
    1e2a:	12 16       	cp	r1, r18
    1e2c:	13 06       	cpc	r1, r19
    1e2e:	ec f6       	brge	.-70     	; 0x1dea <ledInit+0x6>
    1e30:	81 e0       	ldi	r24, 0x01	; 1
    1e32:	08 95       	ret

00001e34 <ledToggle>:
void ledToggle(uint8_t ch)
{
	volatile uint8_t *reg;


	reg = (volatile uint8_t *)( pgm_read_word(&pin_tbl[ch].out_port));
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	9c 01       	movw	r18, r24
    1e38:	22 0f       	add	r18, r18
    1e3a:	33 1f       	adc	r19, r19
    1e3c:	f9 01       	movw	r30, r18
    1e3e:	e8 0f       	add	r30, r24
    1e40:	f9 1f       	adc	r31, r25
    1e42:	ee 0f       	add	r30, r30
    1e44:	ff 1f       	adc	r31, r31
    1e46:	e3 54       	subi	r30, 0x43	; 67
    1e48:	fb 4f       	sbci	r31, 0xFB	; 251
    1e4a:	a5 91       	lpm	r26, Z+
    1e4c:	b4 91       	lpm	r27, Z

	*reg ^= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    1e4e:	f9 01       	movw	r30, r18
    1e50:	e8 0f       	add	r30, r24
    1e52:	f9 1f       	adc	r31, r25
    1e54:	ee 0f       	add	r30, r30
    1e56:	ff 1f       	adc	r31, r31
    1e58:	e1 54       	subi	r30, 0x41	; 65
    1e5a:	fb 4f       	sbci	r31, 0xFB	; 251
    1e5c:	e4 91       	lpm	r30, Z
    1e5e:	81 e0       	ldi	r24, 0x01	; 1
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	02 c0       	rjmp	.+4      	; 0x1e68 <ledToggle+0x34>
    1e64:	88 0f       	add	r24, r24
    1e66:	99 1f       	adc	r25, r25
    1e68:	ea 95       	dec	r30
    1e6a:	e2 f7       	brpl	.-8      	; 0x1e64 <ledToggle+0x30>
    1e6c:	9c 91       	ld	r25, X
    1e6e:	89 27       	eor	r24, r25
    1e70:	8c 93       	st	X, r24
    1e72:	08 95       	ret

00001e74 <resetInit>:
static void cliReset(cli_args_t *args);


bool resetInit(void)
{
	reset_reg = RSTCTRL.RSTFR;
    1e74:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <__RODATA_PM_OFFSET__+0x7f8040>

	if(reset_reg & RSTCTRL_PORF_bm)
    1e78:	80 ff       	sbrs	r24, 0
    1e7a:	05 c0       	rjmp	.+10     	; 0x1e86 <resetInit+0x12>
		reset_bits |= RESET_FROM_POWER;
    1e7c:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1e80:	91 60       	ori	r25, 0x01	; 1
    1e82:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_BORF_bm)
    1e86:	81 ff       	sbrs	r24, 1
    1e88:	05 c0       	rjmp	.+10     	; 0x1e94 <resetInit+0x20>
		reset_bits |= RESET_FROM_BOD;
    1e8a:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1e8e:	92 60       	ori	r25, 0x02	; 2
    1e90:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_EXTRF_bm)
    1e94:	82 ff       	sbrs	r24, 2
    1e96:	05 c0       	rjmp	.+10     	; 0x1ea2 <resetInit+0x2e>
		reset_bits |= RESET_FROM_PIN;
    1e98:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1e9c:	94 60       	ori	r25, 0x04	; 4
    1e9e:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_WDRF_bm)
    1ea2:	83 ff       	sbrs	r24, 3
    1ea4:	05 c0       	rjmp	.+10     	; 0x1eb0 <resetInit+0x3c>
		reset_bits |= RESET_FROM_WDG;
    1ea6:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1eaa:	98 60       	ori	r25, 0x08	; 8
    1eac:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_SWRF_bm)
    1eb0:	84 ff       	sbrs	r24, 4
    1eb2:	05 c0       	rjmp	.+10     	; 0x1ebe <resetInit+0x4a>
		reset_bits |= RESET_FROM_SOFT;
    1eb4:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1eb8:	90 61       	ori	r25, 0x10	; 16
    1eba:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_UPDIRF_bm)
    1ebe:	85 ff       	sbrs	r24, 5
    1ec0:	05 c0       	rjmp	.+10     	; 0x1ecc <resetInit+0x58>
		reset_bits |= RESET_FROM_ETC;
    1ec2:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1ec6:	80 62       	ori	r24, 0x20	; 32
    1ec8:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <reset_bits>

	RSTCTRL.RSTFR = RSTCTRL.RSTFR;
    1ecc:	e0 e4       	ldi	r30, 0x40	; 64
    1ece:	f0 e0       	ldi	r31, 0x00	; 0
    1ed0:	80 81       	ld	r24, Z
    1ed2:	80 83       	st	Z, r24

	#ifdef _USE_HW_CLI
	cliAdd("reset", cliReset);
    1ed4:	69 ed       	ldi	r22, 0xD9	; 217
    1ed6:	7f e0       	ldi	r23, 0x0F	; 15
    1ed8:	8e eb       	ldi	r24, 0xBE	; 190
    1eda:	94 eb       	ldi	r25, 0xB4	; 180
    1edc:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <cliAdd>
	#endif
	
	return true;
}
    1ee0:	81 e0       	ldi	r24, 0x01	; 1
    1ee2:	08 95       	ret

00001ee4 <resetLog>:

void resetLog(void)
{
	cliPrintf_P(PSTR("\n"));
    1ee4:	85 e4       	ldi	r24, 0x45	; 69
    1ee6:	95 e0       	ldi	r25, 0x05	; 5
    1ee8:	9f 93       	push	r25
    1eea:	8f 93       	push	r24
    1eec:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
	cliPrintf_P(PSTR("ResetMode : 0x%02X\r\n"), reset_mode);
    1ef0:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <reset_mode>
    1ef4:	1f 92       	push	r1
    1ef6:	8f 93       	push	r24
    1ef8:	80 e3       	ldi	r24, 0x30	; 48
    1efa:	95 e0       	ldi	r25, 0x05	; 5
    1efc:	9f 93       	push	r25
    1efe:	8f 93       	push	r24
    1f00:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>

	if (reset_bits & RESET_FROM_POWER)
    1f04:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f08:	0f 90       	pop	r0
    1f0a:	0f 90       	pop	r0
    1f0c:	0f 90       	pop	r0
    1f0e:	0f 90       	pop	r0
    1f10:	0f 90       	pop	r0
    1f12:	0f 90       	pop	r0
    1f14:	80 ff       	sbrs	r24, 0
    1f16:	08 c0       	rjmp	.+16     	; 0x1f28 <resetLog+0x44>
	{
		cliPrintf_P(PSTR("ResetFrom : Power\r\n"));
    1f18:	8c e1       	ldi	r24, 0x1C	; 28
    1f1a:	95 e0       	ldi	r25, 0x05	; 5
    1f1c:	9f 93       	push	r25
    1f1e:	8f 93       	push	r24
    1f20:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f24:	0f 90       	pop	r0
    1f26:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_PIN)
    1f28:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f2c:	82 ff       	sbrs	r24, 2
    1f2e:	08 c0       	rjmp	.+16     	; 0x1f40 <resetLog+0x5c>
	{
		cliPrintf_P(PSTR("ResetFrom : Pin\r\n"));
    1f30:	8a e0       	ldi	r24, 0x0A	; 10
    1f32:	95 e0       	ldi	r25, 0x05	; 5
    1f34:	9f 93       	push	r25
    1f36:	8f 93       	push	r24
    1f38:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f3c:	0f 90       	pop	r0
    1f3e:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_WDG)
    1f40:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f44:	83 ff       	sbrs	r24, 3
    1f46:	08 c0       	rjmp	.+16     	; 0x1f58 <resetLog+0x74>
	{
		cliPrintf_P(PSTR("ResetFrom : Wdg\r\n"));
    1f48:	88 ef       	ldi	r24, 0xF8	; 248
    1f4a:	94 e0       	ldi	r25, 0x04	; 4
    1f4c:	9f 93       	push	r25
    1f4e:	8f 93       	push	r24
    1f50:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f54:	0f 90       	pop	r0
    1f56:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_SOFT)
    1f58:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f5c:	84 ff       	sbrs	r24, 4
    1f5e:	08 c0       	rjmp	.+16     	; 0x1f70 <resetLog+0x8c>
	{
		cliPrintf_P(PSTR("ResetFrom : Soft\r\n"));
    1f60:	85 ee       	ldi	r24, 0xE5	; 229
    1f62:	94 e0       	ldi	r25, 0x04	; 4
    1f64:	9f 93       	push	r25
    1f66:	8f 93       	push	r24
    1f68:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f6c:	0f 90       	pop	r0
    1f6e:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_BOD)
    1f70:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f74:	81 ff       	sbrs	r24, 1
    1f76:	08 c0       	rjmp	.+16     	; 0x1f88 <resetLog+0xa4>
	{
		cliPrintf_P(PSTR("ResetFrom : BoD\r\n"));
    1f78:	83 ed       	ldi	r24, 0xD3	; 211
    1f7a:	94 e0       	ldi	r25, 0x04	; 4
    1f7c:	9f 93       	push	r25
    1f7e:	8f 93       	push	r24
    1f80:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f84:	0f 90       	pop	r0
    1f86:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_ETC)
    1f88:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1f8c:	85 ff       	sbrs	r24, 5
    1f8e:	08 c0       	rjmp	.+16     	; 0x1fa0 <resetLog+0xbc>
	{
		cliPrintf_P(PSTR("ResetFrom : Etc\r\n"));
    1f90:	81 ec       	ldi	r24, 0xC1	; 193
    1f92:	94 e0       	ldi	r25, 0x04	; 4
    1f94:	9f 93       	push	r25
    1f96:	8f 93       	push	r24
    1f98:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    1f9c:	0f 90       	pop	r0
    1f9e:	0f 90       	pop	r0
    1fa0:	08 95       	ret

00001fa2 <resetToBoot>:
	}
}

void resetToBoot(uint8_t mode)
{
	reset_mode = mode;
    1fa2:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <reset_mode>

	_PROTECTED_WRITE(RSTCTRL.SWRR, RSTCTRL_SWRE_bm);
    1fa6:	91 e0       	ldi	r25, 0x01	; 1
    1fa8:	88 ed       	ldi	r24, 0xD8	; 216
    1faa:	84 bf       	out	0x34, r24	; 52
    1fac:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <__RODATA_PM_OFFSET__+0x7f8041>
    1fb0:	08 95       	ret

00001fb2 <cliReset>:



#ifdef _USE_HW_CLI
void cliReset(cli_args_t *args)
{
    1fb2:	1f 93       	push	r17
    1fb4:	cf 93       	push	r28
    1fb6:	df 93       	push	r29
    1fb8:	ec 01       	movw	r28, r24
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "info") == true)
    1fba:	88 81       	ld	r24, Y
    1fbc:	99 81       	ldd	r25, Y+1	; 0x01
    1fbe:	01 97       	sbiw	r24, 0x01	; 1
    1fc0:	61 f4       	brne	.+24     	; 0x1fda <cliReset+0x28>
    1fc2:	ea 85       	ldd	r30, Y+10	; 0x0a
    1fc4:	fb 85       	ldd	r31, Y+11	; 0x0b
    1fc6:	69 eb       	ldi	r22, 0xB9	; 185
    1fc8:	74 eb       	ldi	r23, 0xB4	; 180
    1fca:	80 e0       	ldi	r24, 0x00	; 0
    1fcc:	09 95       	icall
    1fce:	88 23       	and	r24, r24
    1fd0:	31 f0       	breq	.+12     	; 0x1fde <cliReset+0x2c>
	{
		resetLog();
    1fd2:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <resetLog>
		ret = true;
    1fd6:	11 e0       	ldi	r17, 0x01	; 1
    1fd8:	03 c0       	rjmp	.+6      	; 0x1fe0 <cliReset+0x2e>


#ifdef _USE_HW_CLI
void cliReset(cli_args_t *args)
{
	bool ret = false;
    1fda:	10 e0       	ldi	r17, 0x00	; 0
    1fdc:	01 c0       	rjmp	.+2      	; 0x1fe0 <cliReset+0x2e>
    1fde:	10 e0       	ldi	r17, 0x00	; 0
	if (args->argc == 1 && args->isStr(0, "info") == true)
	{
		resetLog();
		ret = true;
	}
	if (args->argc == 2 && args->isStr(0, "boot") == true)
    1fe0:	88 81       	ld	r24, Y
    1fe2:	99 81       	ldd	r25, Y+1	; 0x01
    1fe4:	02 97       	sbiw	r24, 0x02	; 2
    1fe6:	b1 f4       	brne	.+44     	; 0x2014 <cliReset+0x62>
    1fe8:	ea 85       	ldd	r30, Y+10	; 0x0a
    1fea:	fb 85       	ldd	r31, Y+11	; 0x0b
    1fec:	64 ec       	ldi	r22, 0xC4	; 196
    1fee:	74 eb       	ldi	r23, 0xB4	; 180
    1ff0:	80 e0       	ldi	r24, 0x00	; 0
    1ff2:	09 95       	icall
    1ff4:	88 23       	and	r24, r24
    1ff6:	71 f0       	breq	.+28     	; 0x2014 <cliReset+0x62>
	{
		uint8_t boot_mode;

		delay(10);
    1ff8:	6a e0       	ldi	r22, 0x0A	; 10
    1ffa:	70 e0       	ldi	r23, 0x00	; 0
    1ffc:	80 e0       	ldi	r24, 0x00	; 0
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	0e 94 47 03 	call	0x68e	; 0x68e <delay>
		boot_mode = (uint8_t)args->getData(1);
    2004:	ec 81       	ldd	r30, Y+4	; 0x04
    2006:	fd 81       	ldd	r31, Y+5	; 0x05
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	09 95       	icall
    200c:	86 2f       	mov	r24, r22
		resetToBoot(boot_mode);
    200e:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <resetToBoot>
		ret = true;
    2012:	11 e0       	ldi	r17, 0x01	; 1
	}

	if (ret != true)
    2014:	11 11       	cpse	r17, r1
    2016:	10 c0       	rjmp	.+32     	; 0x2038 <cliReset+0x86>
	{
		cliPrintf_P(PSTR("reset info\n"));
    2018:	8d e5       	ldi	r24, 0x5D	; 93
    201a:	95 e0       	ldi	r25, 0x05	; 5
    201c:	9f 93       	push	r25
    201e:	8f 93       	push	r24
    2020:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
		cliPrintf_P(PSTR("reset boot 0x00~0xFF\n"));
    2024:	87 e4       	ldi	r24, 0x47	; 71
    2026:	95 e0       	ldi	r25, 0x05	; 5
    2028:	9f 93       	push	r25
    202a:	8f 93       	push	r24
    202c:	0e 94 39 06 	call	0xc72	; 0xc72 <cliPrintf_P>
    2030:	0f 90       	pop	r0
    2032:	0f 90       	pop	r0
    2034:	0f 90       	pop	r0
    2036:	0f 90       	pop	r0
	}
}
    2038:	df 91       	pop	r29
    203a:	cf 91       	pop	r28
    203c:	1f 91       	pop	r17
    203e:	08 95       	ret

00002040 <uartRxHandler>:
 }

 uint32_t uartGetBaud(uint8_t ch)
 {
	 return uart_tbl[ch].baud;
 }
    2040:	cf 93       	push	r28
    2042:	df 93       	push	r29
    2044:	1f 92       	push	r1
    2046:	cd b7       	in	r28, 0x3d	; 61
    2048:	de b7       	in	r29, 0x3e	; 62
    204a:	69 83       	std	Y+1, r22	; 0x01
    204c:	28 2f       	mov	r18, r24
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	87 e5       	ldi	r24, 0x57	; 87
    2052:	82 9f       	mul	r24, r18
    2054:	f0 01       	movw	r30, r0
    2056:	83 9f       	mul	r24, r19
    2058:	f0 0d       	add	r31, r0
    205a:	11 24       	eor	r1, r1
    205c:	ea 59       	subi	r30, 0x9A	; 154
    205e:	f4 4c       	sbci	r31, 0xC4	; 196
    2060:	86 81       	ldd	r24, Z+6	; 0x06
    2062:	81 30       	cpi	r24, 0x01	; 1
    2064:	89 f4       	brne	.+34     	; 0x2088 <uartRxHandler+0x48>
    2066:	47 e5       	ldi	r20, 0x57	; 87
    2068:	42 9f       	mul	r20, r18
    206a:	c0 01       	movw	r24, r0
    206c:	43 9f       	mul	r20, r19
    206e:	90 0d       	add	r25, r0
    2070:	11 24       	eor	r1, r1
    2072:	21 e0       	ldi	r18, 0x01	; 1
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	40 e0       	ldi	r20, 0x00	; 0
    2078:	50 e0       	ldi	r21, 0x00	; 0
    207a:	be 01       	movw	r22, r28
    207c:	6f 5f       	subi	r22, 0xFF	; 255
    207e:	7f 4f       	sbci	r23, 0xFF	; 255
    2080:	81 55       	subi	r24, 0x51	; 81
    2082:	94 4c       	sbci	r25, 0xC4	; 196
    2084:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <qbufferWrite>
    2088:	0f 90       	pop	r0
    208a:	df 91       	pop	r29
    208c:	cf 91       	pop	r28
    208e:	08 95       	ret

00002090 <uartInit>:
    2090:	80 e0       	ldi	r24, 0x00	; 0
    2092:	0a c0       	rjmp	.+20     	; 0x20a8 <uartInit+0x18>
    2094:	97 e5       	ldi	r25, 0x57	; 87
    2096:	89 9f       	mul	r24, r25
    2098:	f0 01       	movw	r30, r0
    209a:	11 24       	eor	r1, r1
    209c:	ea 59       	subi	r30, 0x9A	; 154
    209e:	f4 4c       	sbci	r31, 0xC4	; 196
    20a0:	10 82       	st	Z, r1
    20a2:	16 82       	std	Z+6, r1	; 0x06
    20a4:	15 82       	std	Z+5, r1	; 0x05
    20a6:	8f 5f       	subi	r24, 0xFF	; 255
    20a8:	88 23       	and	r24, r24
    20aa:	a1 f3       	breq	.-24     	; 0x2094 <uartInit+0x4>
    20ac:	81 e0       	ldi	r24, 0x01	; 1
    20ae:	08 95       	ret

000020b0 <uartOpen>:
    20b0:	cf 92       	push	r12
    20b2:	df 92       	push	r13
    20b4:	ef 92       	push	r14
    20b6:	ff 92       	push	r15
    20b8:	1f 93       	push	r17
    20ba:	cf 93       	push	r28
    20bc:	df 93       	push	r29
    20be:	81 11       	cpse	r24, r1
    20c0:	41 c0       	rjmp	.+130    	; 0x2144 <uartOpen+0x94>
    20c2:	6a 01       	movw	r12, r20
    20c4:	7b 01       	movw	r14, r22
    20c6:	f8 94       	cli
    20c8:	27 e5       	ldi	r18, 0x57	; 87
    20ca:	82 9f       	mul	r24, r18
    20cc:	c0 01       	movw	r24, r0
    20ce:	11 24       	eor	r1, r1
    20d0:	ec 01       	movw	r28, r24
    20d2:	ca 59       	subi	r28, 0x9A	; 154
    20d4:	d4 4c       	sbci	r29, 0xC4	; 196
    20d6:	11 e0       	ldi	r17, 0x01	; 1
    20d8:	1e 83       	std	Y+6, r17	; 0x06
    20da:	49 83       	std	Y+1, r20	; 0x01
    20dc:	5a 83       	std	Y+2, r21	; 0x02
    20de:	6b 83       	std	Y+3, r22	; 0x03
    20e0:	7c 83       	std	Y+4, r23	; 0x04
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	38 e0       	ldi	r19, 0x08	; 8
    20e6:	2f 83       	std	Y+7, r18	; 0x07
    20e8:	38 87       	std	Y+8, r19	; 0x08
    20ea:	bc 01       	movw	r22, r24
    20ec:	61 59       	subi	r22, 0x91	; 145
    20ee:	74 4c       	sbci	r23, 0xC4	; 196
    20f0:	20 e4       	ldi	r18, 0x40	; 64
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	40 e0       	ldi	r20, 0x00	; 0
    20f6:	50 e0       	ldi	r21, 0x00	; 0
    20f8:	81 55       	subi	r24, 0x51	; 81
    20fa:	94 4c       	sbci	r25, 0xC4	; 196
    20fc:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <qbufferCreate>
    2100:	60 e0       	ldi	r22, 0x00	; 0
    2102:	74 eb       	ldi	r23, 0xB4	; 180
    2104:	84 ec       	ldi	r24, 0xC4	; 196
    2106:	94 e0       	ldi	r25, 0x04	; 4
    2108:	a7 01       	movw	r20, r14
    210a:	96 01       	movw	r18, r12
    210c:	0e 94 ca 13 	call	0x2794	; 0x2794 <__udivmodsi4>
    2110:	ef 81       	ldd	r30, Y+7	; 0x07
    2112:	f8 85       	ldd	r31, Y+8	; 0x08
    2114:	20 87       	std	Z+8, r18	; 0x08
    2116:	31 87       	std	Z+9, r19	; 0x09
    2118:	ef 81       	ldd	r30, Y+7	; 0x07
    211a:	f8 85       	ldd	r31, Y+8	; 0x08
    211c:	8b e0       	ldi	r24, 0x0B	; 11
    211e:	87 83       	std	Z+7, r24	; 0x07
    2120:	e0 e2       	ldi	r30, 0x20	; 32
    2122:	f4 e0       	ldi	r31, 0x04	; 4
    2124:	84 e0       	ldi	r24, 0x04	; 4
    2126:	81 83       	std	Z+1, r24	; 0x01
    2128:	88 e0       	ldi	r24, 0x08	; 8
    212a:	82 83       	std	Z+2, r24	; 0x02
    212c:	ef 81       	ldd	r30, Y+7	; 0x07
    212e:	f8 85       	ldd	r31, Y+8	; 0x08
    2130:	80 ec       	ldi	r24, 0xC0	; 192
    2132:	86 83       	std	Z+6, r24	; 0x06
    2134:	ef 81       	ldd	r30, Y+7	; 0x07
    2136:	f8 85       	ldd	r31, Y+8	; 0x08
    2138:	80 e8       	ldi	r24, 0x80	; 128
    213a:	85 83       	std	Z+5, r24	; 0x05
    213c:	78 94       	sei
    213e:	18 83       	st	Y, r17
    2140:	81 e0       	ldi	r24, 0x01	; 1
    2142:	01 c0       	rjmp	.+2      	; 0x2146 <uartOpen+0x96>
    2144:	80 e0       	ldi	r24, 0x00	; 0
    2146:	df 91       	pop	r29
    2148:	cf 91       	pop	r28
    214a:	1f 91       	pop	r17
    214c:	ff 90       	pop	r15
    214e:	ef 90       	pop	r14
    2150:	df 90       	pop	r13
    2152:	cf 90       	pop	r12
    2154:	08 95       	ret

00002156 <uartAvailable>:
    2156:	81 11       	cpse	r24, r1
    2158:	09 c0       	rjmp	.+18     	; 0x216c <uartAvailable+0x16>
    215a:	27 e5       	ldi	r18, 0x57	; 87
    215c:	82 9f       	mul	r24, r18
    215e:	c0 01       	movw	r24, r0
    2160:	11 24       	eor	r1, r1
    2162:	81 55       	subi	r24, 0x51	; 81
    2164:	94 4c       	sbci	r25, 0xC4	; 196
    2166:	0e 94 3a 04 	call	0x874	; 0x874 <qbufferAvailable>
    216a:	08 95       	ret
    216c:	60 e0       	ldi	r22, 0x00	; 0
    216e:	70 e0       	ldi	r23, 0x00	; 0
    2170:	cb 01       	movw	r24, r22
    2172:	08 95       	ret

00002174 <uartWrite>:
    2174:	4f 92       	push	r4
    2176:	5f 92       	push	r5
    2178:	6f 92       	push	r6
    217a:	7f 92       	push	r7
    217c:	8f 92       	push	r8
    217e:	9f 92       	push	r9
    2180:	af 92       	push	r10
    2182:	bf 92       	push	r11
    2184:	cf 92       	push	r12
    2186:	df 92       	push	r13
    2188:	ef 92       	push	r14
    218a:	ff 92       	push	r15
    218c:	0f 93       	push	r16
    218e:	1f 93       	push	r17
    2190:	cf 93       	push	r28
    2192:	df 93       	push	r29
    2194:	e7 e5       	ldi	r30, 0x57	; 87
    2196:	8e 9f       	mul	r24, r30
    2198:	c0 01       	movw	r24, r0
    219a:	11 24       	eor	r1, r1
    219c:	fc 01       	movw	r30, r24
    219e:	ea 59       	subi	r30, 0x9A	; 154
    21a0:	f4 4c       	sbci	r31, 0xC4	; 196
    21a2:	c7 81       	ldd	r28, Z+7	; 0x07
    21a4:	d0 85       	ldd	r29, Z+8	; 0x08
    21a6:	86 81       	ldd	r24, Z+6	; 0x06
    21a8:	81 30       	cpi	r24, 0x01	; 1
    21aa:	59 f5       	brne	.+86     	; 0x2202 <uartWrite+0x8e>
    21ac:	49 01       	movw	r8, r18
    21ae:	5a 01       	movw	r10, r20
    21b0:	8b 01       	movw	r16, r22
    21b2:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
    21b6:	2b 01       	movw	r4, r22
    21b8:	3c 01       	movw	r6, r24
    21ba:	c1 2c       	mov	r12, r1
    21bc:	d1 2c       	mov	r13, r1
    21be:	76 01       	movw	r14, r12
    21c0:	1a c0       	rjmp	.+52     	; 0x21f6 <uartWrite+0x82>
    21c2:	8c 81       	ldd	r24, Y+4	; 0x04
    21c4:	85 ff       	sbrs	r24, 5
    21c6:	0a c0       	rjmp	.+20     	; 0x21dc <uartWrite+0x68>
    21c8:	f8 01       	movw	r30, r16
    21ca:	ec 0d       	add	r30, r12
    21cc:	fd 1d       	adc	r31, r13
    21ce:	80 81       	ld	r24, Z
    21d0:	8a 83       	std	Y+2, r24	; 0x02
    21d2:	2f ef       	ldi	r18, 0xFF	; 255
    21d4:	c2 1a       	sub	r12, r18
    21d6:	d2 0a       	sbc	r13, r18
    21d8:	e2 0a       	sbc	r14, r18
    21da:	f2 0a       	sbc	r15, r18
    21dc:	0e 94 3b 03 	call	0x676	; 0x676 <millis>
    21e0:	dc 01       	movw	r26, r24
    21e2:	cb 01       	movw	r24, r22
    21e4:	84 19       	sub	r24, r4
    21e6:	95 09       	sbc	r25, r5
    21e8:	a6 09       	sbc	r26, r6
    21ea:	b7 09       	sbc	r27, r7
    21ec:	84 3f       	cpi	r24, 0xF4	; 244
    21ee:	91 40       	sbci	r25, 0x01	; 1
    21f0:	a1 05       	cpc	r26, r1
    21f2:	b1 05       	cpc	r27, r1
    21f4:	48 f4       	brcc	.+18     	; 0x2208 <uartWrite+0x94>
    21f6:	c8 14       	cp	r12, r8
    21f8:	d9 04       	cpc	r13, r9
    21fa:	ea 04       	cpc	r14, r10
    21fc:	fb 04       	cpc	r15, r11
    21fe:	08 f3       	brcs	.-62     	; 0x21c2 <uartWrite+0x4e>
    2200:	03 c0       	rjmp	.+6      	; 0x2208 <uartWrite+0x94>
    2202:	c1 2c       	mov	r12, r1
    2204:	d1 2c       	mov	r13, r1
    2206:	76 01       	movw	r14, r12
    2208:	c7 01       	movw	r24, r14
    220a:	b6 01       	movw	r22, r12
    220c:	df 91       	pop	r29
    220e:	cf 91       	pop	r28
    2210:	1f 91       	pop	r17
    2212:	0f 91       	pop	r16
    2214:	ff 90       	pop	r15
    2216:	ef 90       	pop	r14
    2218:	df 90       	pop	r13
    221a:	cf 90       	pop	r12
    221c:	bf 90       	pop	r11
    221e:	af 90       	pop	r10
    2220:	9f 90       	pop	r9
    2222:	8f 90       	pop	r8
    2224:	7f 90       	pop	r7
    2226:	6f 90       	pop	r6
    2228:	5f 90       	pop	r5
    222a:	4f 90       	pop	r4
    222c:	08 95       	ret

0000222e <uartRead>:
    222e:	cf 93       	push	r28
    2230:	df 93       	push	r29
    2232:	1f 92       	push	r1
    2234:	cd b7       	in	r28, 0x3d	; 61
    2236:	de b7       	in	r29, 0x3e	; 62
    2238:	19 82       	std	Y+1, r1	; 0x01
    223a:	28 2f       	mov	r18, r24
    223c:	30 e0       	ldi	r19, 0x00	; 0
    223e:	87 e5       	ldi	r24, 0x57	; 87
    2240:	82 9f       	mul	r24, r18
    2242:	f0 01       	movw	r30, r0
    2244:	83 9f       	mul	r24, r19
    2246:	f0 0d       	add	r31, r0
    2248:	11 24       	eor	r1, r1
    224a:	ea 59       	subi	r30, 0x9A	; 154
    224c:	f4 4c       	sbci	r31, 0xC4	; 196
    224e:	86 81       	ldd	r24, Z+6	; 0x06
    2250:	81 30       	cpi	r24, 0x01	; 1
    2252:	89 f4       	brne	.+34     	; 0x2276 <uartRead+0x48>
    2254:	47 e5       	ldi	r20, 0x57	; 87
    2256:	42 9f       	mul	r20, r18
    2258:	c0 01       	movw	r24, r0
    225a:	43 9f       	mul	r20, r19
    225c:	90 0d       	add	r25, r0
    225e:	11 24       	eor	r1, r1
    2260:	21 e0       	ldi	r18, 0x01	; 1
    2262:	30 e0       	ldi	r19, 0x00	; 0
    2264:	40 e0       	ldi	r20, 0x00	; 0
    2266:	50 e0       	ldi	r21, 0x00	; 0
    2268:	be 01       	movw	r22, r28
    226a:	6f 5f       	subi	r22, 0xFF	; 255
    226c:	7f 4f       	sbci	r23, 0xFF	; 255
    226e:	81 55       	subi	r24, 0x51	; 81
    2270:	94 4c       	sbci	r25, 0xC4	; 196
    2272:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <qbufferRead>
    2276:	89 81       	ldd	r24, Y+1	; 0x01
    2278:	0f 90       	pop	r0
    227a:	df 91       	pop	r29
    227c:	cf 91       	pop	r28
    227e:	08 95       	ret

00002280 <uartPrintf>:
    2280:	cf 93       	push	r28
    2282:	df 93       	push	r29
    2284:	cd b7       	in	r28, 0x3d	; 61
    2286:	de b7       	in	r29, 0x3e	; 62
    2288:	c0 58       	subi	r28, 0x80	; 128
    228a:	d1 09       	sbc	r29, r1
    228c:	cd bf       	out	0x3d, r28	; 61
    228e:	de bf       	out	0x3e, r29	; 62
    2290:	9e 01       	movw	r18, r28
    2292:	28 57       	subi	r18, 0x78	; 120
    2294:	3f 4f       	sbci	r19, 0xFF	; 255
    2296:	ca 57       	subi	r28, 0x7A	; 122
    2298:	df 4f       	sbci	r29, 0xFF	; 255
    229a:	48 81       	ld	r20, Y
    229c:	59 81       	ldd	r21, Y+1	; 0x01
    229e:	c6 58       	subi	r28, 0x86	; 134
    22a0:	d0 40       	sbci	r29, 0x00	; 0
    22a2:	60 e8       	ldi	r22, 0x80	; 128
    22a4:	70 e0       	ldi	r23, 0x00	; 0
    22a6:	ce 01       	movw	r24, r28
    22a8:	01 96       	adiw	r24, 0x01	; 1
    22aa:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <vsnprintf>
    22ae:	9c 01       	movw	r18, r24
    22b0:	99 0f       	add	r25, r25
    22b2:	44 0b       	sbc	r20, r20
    22b4:	55 0b       	sbc	r21, r21
    22b6:	be 01       	movw	r22, r28
    22b8:	6f 5f       	subi	r22, 0xFF	; 255
    22ba:	7f 4f       	sbci	r23, 0xFF	; 255
    22bc:	cb 57       	subi	r28, 0x7B	; 123
    22be:	df 4f       	sbci	r29, 0xFF	; 255
    22c0:	88 81       	ld	r24, Y
    22c2:	c5 58       	subi	r28, 0x85	; 133
    22c4:	d0 40       	sbci	r29, 0x00	; 0
    22c6:	0e 94 ba 10 	call	0x2174	; 0x2174 <uartWrite>
    22ca:	c0 58       	subi	r28, 0x80	; 128
    22cc:	df 4f       	sbci	r29, 0xFF	; 255
    22ce:	cd bf       	out	0x3d, r28	; 61
    22d0:	de bf       	out	0x3e, r29	; 62
    22d2:	df 91       	pop	r29
    22d4:	cf 91       	pop	r28
    22d6:	08 95       	ret

000022d8 <__vector_17>:
		 qbufferWrite(&p_uart->qbuffer_rx, &rx_data, 1);
	 }
 }

 ISR(USART0_RXC_vect, ISR_NOBLOCK)
 {
    22d8:	78 94       	sei
    22da:	1f 92       	push	r1
    22dc:	0f 92       	push	r0
    22de:	0f b6       	in	r0, 0x3f	; 63
    22e0:	0f 92       	push	r0
    22e2:	11 24       	eor	r1, r1
    22e4:	2f 93       	push	r18
    22e6:	3f 93       	push	r19
    22e8:	4f 93       	push	r20
    22ea:	5f 93       	push	r21
    22ec:	6f 93       	push	r22
    22ee:	7f 93       	push	r23
    22f0:	8f 93       	push	r24
    22f2:	9f 93       	push	r25
    22f4:	af 93       	push	r26
    22f6:	bf 93       	push	r27
    22f8:	ef 93       	push	r30
    22fa:	ff 93       	push	r31
	 uartRxHandler(_DEF_UART1, USART0.RXDATAL);
    22fc:	60 91 00 08 	lds	r22, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
    2300:	80 e0       	ldi	r24, 0x00	; 0
    2302:	0e 94 20 10 	call	0x2040	; 0x2040 <uartRxHandler>
 }
    2306:	ff 91       	pop	r31
    2308:	ef 91       	pop	r30
    230a:	bf 91       	pop	r27
    230c:	af 91       	pop	r26
    230e:	9f 91       	pop	r25
    2310:	8f 91       	pop	r24
    2312:	7f 91       	pop	r23
    2314:	6f 91       	pop	r22
    2316:	5f 91       	pop	r21
    2318:	4f 91       	pop	r20
    231a:	3f 91       	pop	r19
    231c:	2f 91       	pop	r18
    231e:	0f 90       	pop	r0
    2320:	0f be       	out	0x3f, r0	; 63
    2322:	0f 90       	pop	r0
    2324:	1f 90       	pop	r1
    2326:	18 95       	reti

00002328 <hwInit>:
#include "hw.h"


bool hwInit(void)
{
	bspInit();
    2328:	0e 94 25 03 	call	0x64a	; 0x64a <bspInit>

	cliInit();
    232c:	0e 94 19 0b 	call	0x1632	; 0x1632 <cliInit>
	infoInit();
    2330:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <infoInit>
  ledInit();
    2334:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <ledInit>
	uartInit();
    2338:	0e 94 48 10 	call	0x2090	; 0x2090 <uartInit>
	resetInit();
    233c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <resetInit>
	i2cInit();
    2340:	0e 94 8e 0b 	call	0x171c	; 0x171c <i2cInit>


  return true;
    2344:	81 e0       	ldi	r24, 0x01	; 1
    2346:	08 95       	ret

00002348 <main>:
#include "main.h"


int main(void)
{
	hwInit();
    2348:	0e 94 94 11 	call	0x2328	; 0x2328 <hwInit>
	apInit();
    234c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <apInit>
	
	apMain();
    2350:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <apMain>
	
	return 0;
}
    2354:	80 e0       	ldi	r24, 0x00	; 0
    2356:	90 e0       	ldi	r25, 0x00	; 0
    2358:	08 95       	ret

0000235a <__subsf3>:
    235a:	50 58       	subi	r21, 0x80	; 128

0000235c <__addsf3>:
    235c:	bb 27       	eor	r27, r27
    235e:	aa 27       	eor	r26, r26
    2360:	0e 94 c5 11 	call	0x238a	; 0x238a <__addsf3x>
    2364:	0c 94 0f 13 	jmp	0x261e	; 0x261e <__fp_round>
    2368:	0e 94 01 13 	call	0x2602	; 0x2602 <__fp_pscA>
    236c:	38 f0       	brcs	.+14     	; 0x237c <__addsf3+0x20>
    236e:	0e 94 08 13 	call	0x2610	; 0x2610 <__fp_pscB>
    2372:	20 f0       	brcs	.+8      	; 0x237c <__addsf3+0x20>
    2374:	39 f4       	brne	.+14     	; 0x2384 <__addsf3+0x28>
    2376:	9f 3f       	cpi	r25, 0xFF	; 255
    2378:	19 f4       	brne	.+6      	; 0x2380 <__addsf3+0x24>
    237a:	26 f4       	brtc	.+8      	; 0x2384 <__addsf3+0x28>
    237c:	0c 94 fe 12 	jmp	0x25fc	; 0x25fc <__fp_nan>
    2380:	0e f4       	brtc	.+2      	; 0x2384 <__addsf3+0x28>
    2382:	e0 95       	com	r30
    2384:	e7 fb       	bst	r30, 7
    2386:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__fp_inf>

0000238a <__addsf3x>:
    238a:	e9 2f       	mov	r30, r25
    238c:	0e 94 20 13 	call	0x2640	; 0x2640 <__fp_split3>
    2390:	58 f3       	brcs	.-42     	; 0x2368 <__addsf3+0xc>
    2392:	ba 17       	cp	r27, r26
    2394:	62 07       	cpc	r22, r18
    2396:	73 07       	cpc	r23, r19
    2398:	84 07       	cpc	r24, r20
    239a:	95 07       	cpc	r25, r21
    239c:	20 f0       	brcs	.+8      	; 0x23a6 <__addsf3x+0x1c>
    239e:	79 f4       	brne	.+30     	; 0x23be <__addsf3x+0x34>
    23a0:	a6 f5       	brtc	.+104    	; 0x240a <__addsf3x+0x80>
    23a2:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_zero>
    23a6:	0e f4       	brtc	.+2      	; 0x23aa <__addsf3x+0x20>
    23a8:	e0 95       	com	r30
    23aa:	0b 2e       	mov	r0, r27
    23ac:	ba 2f       	mov	r27, r26
    23ae:	a0 2d       	mov	r26, r0
    23b0:	0b 01       	movw	r0, r22
    23b2:	b9 01       	movw	r22, r18
    23b4:	90 01       	movw	r18, r0
    23b6:	0c 01       	movw	r0, r24
    23b8:	ca 01       	movw	r24, r20
    23ba:	a0 01       	movw	r20, r0
    23bc:	11 24       	eor	r1, r1
    23be:	ff 27       	eor	r31, r31
    23c0:	59 1b       	sub	r21, r25
    23c2:	99 f0       	breq	.+38     	; 0x23ea <__addsf3x+0x60>
    23c4:	59 3f       	cpi	r21, 0xF9	; 249
    23c6:	50 f4       	brcc	.+20     	; 0x23dc <__addsf3x+0x52>
    23c8:	50 3e       	cpi	r21, 0xE0	; 224
    23ca:	68 f1       	brcs	.+90     	; 0x2426 <__addsf3x+0x9c>
    23cc:	1a 16       	cp	r1, r26
    23ce:	f0 40       	sbci	r31, 0x00	; 0
    23d0:	a2 2f       	mov	r26, r18
    23d2:	23 2f       	mov	r18, r19
    23d4:	34 2f       	mov	r19, r20
    23d6:	44 27       	eor	r20, r20
    23d8:	58 5f       	subi	r21, 0xF8	; 248
    23da:	f3 cf       	rjmp	.-26     	; 0x23c2 <__addsf3x+0x38>
    23dc:	46 95       	lsr	r20
    23de:	37 95       	ror	r19
    23e0:	27 95       	ror	r18
    23e2:	a7 95       	ror	r26
    23e4:	f0 40       	sbci	r31, 0x00	; 0
    23e6:	53 95       	inc	r21
    23e8:	c9 f7       	brne	.-14     	; 0x23dc <__addsf3x+0x52>
    23ea:	7e f4       	brtc	.+30     	; 0x240a <__addsf3x+0x80>
    23ec:	1f 16       	cp	r1, r31
    23ee:	ba 0b       	sbc	r27, r26
    23f0:	62 0b       	sbc	r22, r18
    23f2:	73 0b       	sbc	r23, r19
    23f4:	84 0b       	sbc	r24, r20
    23f6:	ba f0       	brmi	.+46     	; 0x2426 <__addsf3x+0x9c>
    23f8:	91 50       	subi	r25, 0x01	; 1
    23fa:	a1 f0       	breq	.+40     	; 0x2424 <__addsf3x+0x9a>
    23fc:	ff 0f       	add	r31, r31
    23fe:	bb 1f       	adc	r27, r27
    2400:	66 1f       	adc	r22, r22
    2402:	77 1f       	adc	r23, r23
    2404:	88 1f       	adc	r24, r24
    2406:	c2 f7       	brpl	.-16     	; 0x23f8 <__addsf3x+0x6e>
    2408:	0e c0       	rjmp	.+28     	; 0x2426 <__addsf3x+0x9c>
    240a:	ba 0f       	add	r27, r26
    240c:	62 1f       	adc	r22, r18
    240e:	73 1f       	adc	r23, r19
    2410:	84 1f       	adc	r24, r20
    2412:	48 f4       	brcc	.+18     	; 0x2426 <__addsf3x+0x9c>
    2414:	87 95       	ror	r24
    2416:	77 95       	ror	r23
    2418:	67 95       	ror	r22
    241a:	b7 95       	ror	r27
    241c:	f7 95       	ror	r31
    241e:	9e 3f       	cpi	r25, 0xFE	; 254
    2420:	08 f0       	brcs	.+2      	; 0x2424 <__addsf3x+0x9a>
    2422:	b0 cf       	rjmp	.-160    	; 0x2384 <__addsf3+0x28>
    2424:	93 95       	inc	r25
    2426:	88 0f       	add	r24, r24
    2428:	08 f0       	brcs	.+2      	; 0x242c <__addsf3x+0xa2>
    242a:	99 27       	eor	r25, r25
    242c:	ee 0f       	add	r30, r30
    242e:	97 95       	ror	r25
    2430:	87 95       	ror	r24
    2432:	08 95       	ret

00002434 <__divsf3>:
    2434:	0e 94 2e 12 	call	0x245c	; 0x245c <__divsf3x>
    2438:	0c 94 0f 13 	jmp	0x261e	; 0x261e <__fp_round>
    243c:	0e 94 08 13 	call	0x2610	; 0x2610 <__fp_pscB>
    2440:	58 f0       	brcs	.+22     	; 0x2458 <__divsf3+0x24>
    2442:	0e 94 01 13 	call	0x2602	; 0x2602 <__fp_pscA>
    2446:	40 f0       	brcs	.+16     	; 0x2458 <__divsf3+0x24>
    2448:	29 f4       	brne	.+10     	; 0x2454 <__divsf3+0x20>
    244a:	5f 3f       	cpi	r21, 0xFF	; 255
    244c:	29 f0       	breq	.+10     	; 0x2458 <__divsf3+0x24>
    244e:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__fp_inf>
    2452:	51 11       	cpse	r21, r1
    2454:	0c 94 43 13 	jmp	0x2686	; 0x2686 <__fp_szero>
    2458:	0c 94 fe 12 	jmp	0x25fc	; 0x25fc <__fp_nan>

0000245c <__divsf3x>:
    245c:	0e 94 20 13 	call	0x2640	; 0x2640 <__fp_split3>
    2460:	68 f3       	brcs	.-38     	; 0x243c <__divsf3+0x8>

00002462 <__divsf3_pse>:
    2462:	99 23       	and	r25, r25
    2464:	b1 f3       	breq	.-20     	; 0x2452 <__divsf3+0x1e>
    2466:	55 23       	and	r21, r21
    2468:	91 f3       	breq	.-28     	; 0x244e <__divsf3+0x1a>
    246a:	95 1b       	sub	r25, r21
    246c:	55 0b       	sbc	r21, r21
    246e:	bb 27       	eor	r27, r27
    2470:	aa 27       	eor	r26, r26
    2472:	62 17       	cp	r22, r18
    2474:	73 07       	cpc	r23, r19
    2476:	84 07       	cpc	r24, r20
    2478:	38 f0       	brcs	.+14     	; 0x2488 <__divsf3_pse+0x26>
    247a:	9f 5f       	subi	r25, 0xFF	; 255
    247c:	5f 4f       	sbci	r21, 0xFF	; 255
    247e:	22 0f       	add	r18, r18
    2480:	33 1f       	adc	r19, r19
    2482:	44 1f       	adc	r20, r20
    2484:	aa 1f       	adc	r26, r26
    2486:	a9 f3       	breq	.-22     	; 0x2472 <__divsf3_pse+0x10>
    2488:	35 d0       	rcall	.+106    	; 0x24f4 <__divsf3_pse+0x92>
    248a:	0e 2e       	mov	r0, r30
    248c:	3a f0       	brmi	.+14     	; 0x249c <__divsf3_pse+0x3a>
    248e:	e0 e8       	ldi	r30, 0x80	; 128
    2490:	32 d0       	rcall	.+100    	; 0x24f6 <__divsf3_pse+0x94>
    2492:	91 50       	subi	r25, 0x01	; 1
    2494:	50 40       	sbci	r21, 0x00	; 0
    2496:	e6 95       	lsr	r30
    2498:	00 1c       	adc	r0, r0
    249a:	ca f7       	brpl	.-14     	; 0x248e <__divsf3_pse+0x2c>
    249c:	2b d0       	rcall	.+86     	; 0x24f4 <__divsf3_pse+0x92>
    249e:	fe 2f       	mov	r31, r30
    24a0:	29 d0       	rcall	.+82     	; 0x24f4 <__divsf3_pse+0x92>
    24a2:	66 0f       	add	r22, r22
    24a4:	77 1f       	adc	r23, r23
    24a6:	88 1f       	adc	r24, r24
    24a8:	bb 1f       	adc	r27, r27
    24aa:	26 17       	cp	r18, r22
    24ac:	37 07       	cpc	r19, r23
    24ae:	48 07       	cpc	r20, r24
    24b0:	ab 07       	cpc	r26, r27
    24b2:	b0 e8       	ldi	r27, 0x80	; 128
    24b4:	09 f0       	breq	.+2      	; 0x24b8 <__divsf3_pse+0x56>
    24b6:	bb 0b       	sbc	r27, r27
    24b8:	80 2d       	mov	r24, r0
    24ba:	bf 01       	movw	r22, r30
    24bc:	ff 27       	eor	r31, r31
    24be:	93 58       	subi	r25, 0x83	; 131
    24c0:	5f 4f       	sbci	r21, 0xFF	; 255
    24c2:	3a f0       	brmi	.+14     	; 0x24d2 <__divsf3_pse+0x70>
    24c4:	9e 3f       	cpi	r25, 0xFE	; 254
    24c6:	51 05       	cpc	r21, r1
    24c8:	78 f0       	brcs	.+30     	; 0x24e8 <__divsf3_pse+0x86>
    24ca:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__fp_inf>
    24ce:	0c 94 43 13 	jmp	0x2686	; 0x2686 <__fp_szero>
    24d2:	5f 3f       	cpi	r21, 0xFF	; 255
    24d4:	e4 f3       	brlt	.-8      	; 0x24ce <__divsf3_pse+0x6c>
    24d6:	98 3e       	cpi	r25, 0xE8	; 232
    24d8:	d4 f3       	brlt	.-12     	; 0x24ce <__divsf3_pse+0x6c>
    24da:	86 95       	lsr	r24
    24dc:	77 95       	ror	r23
    24de:	67 95       	ror	r22
    24e0:	b7 95       	ror	r27
    24e2:	f7 95       	ror	r31
    24e4:	9f 5f       	subi	r25, 0xFF	; 255
    24e6:	c9 f7       	brne	.-14     	; 0x24da <__divsf3_pse+0x78>
    24e8:	88 0f       	add	r24, r24
    24ea:	91 1d       	adc	r25, r1
    24ec:	96 95       	lsr	r25
    24ee:	87 95       	ror	r24
    24f0:	97 f9       	bld	r25, 7
    24f2:	08 95       	ret
    24f4:	e1 e0       	ldi	r30, 0x01	; 1
    24f6:	66 0f       	add	r22, r22
    24f8:	77 1f       	adc	r23, r23
    24fa:	88 1f       	adc	r24, r24
    24fc:	bb 1f       	adc	r27, r27
    24fe:	62 17       	cp	r22, r18
    2500:	73 07       	cpc	r23, r19
    2502:	84 07       	cpc	r24, r20
    2504:	ba 07       	cpc	r27, r26
    2506:	20 f0       	brcs	.+8      	; 0x2510 <__divsf3_pse+0xae>
    2508:	62 1b       	sub	r22, r18
    250a:	73 0b       	sbc	r23, r19
    250c:	84 0b       	sbc	r24, r20
    250e:	ba 0b       	sbc	r27, r26
    2510:	ee 1f       	adc	r30, r30
    2512:	88 f7       	brcc	.-30     	; 0x24f6 <__divsf3_pse+0x94>
    2514:	e0 95       	com	r30
    2516:	08 95       	ret

00002518 <__fixunssfsi>:
    2518:	0e 94 28 13 	call	0x2650	; 0x2650 <__fp_splitA>
    251c:	88 f0       	brcs	.+34     	; 0x2540 <__fixunssfsi+0x28>
    251e:	9f 57       	subi	r25, 0x7F	; 127
    2520:	98 f0       	brcs	.+38     	; 0x2548 <__fixunssfsi+0x30>
    2522:	b9 2f       	mov	r27, r25
    2524:	99 27       	eor	r25, r25
    2526:	b7 51       	subi	r27, 0x17	; 23
    2528:	b0 f0       	brcs	.+44     	; 0x2556 <__fixunssfsi+0x3e>
    252a:	e1 f0       	breq	.+56     	; 0x2564 <__fixunssfsi+0x4c>
    252c:	66 0f       	add	r22, r22
    252e:	77 1f       	adc	r23, r23
    2530:	88 1f       	adc	r24, r24
    2532:	99 1f       	adc	r25, r25
    2534:	1a f0       	brmi	.+6      	; 0x253c <__fixunssfsi+0x24>
    2536:	ba 95       	dec	r27
    2538:	c9 f7       	brne	.-14     	; 0x252c <__fixunssfsi+0x14>
    253a:	14 c0       	rjmp	.+40     	; 0x2564 <__fixunssfsi+0x4c>
    253c:	b1 30       	cpi	r27, 0x01	; 1
    253e:	91 f0       	breq	.+36     	; 0x2564 <__fixunssfsi+0x4c>
    2540:	0e 94 42 13 	call	0x2684	; 0x2684 <__fp_zero>
    2544:	b1 e0       	ldi	r27, 0x01	; 1
    2546:	08 95       	ret
    2548:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_zero>
    254c:	67 2f       	mov	r22, r23
    254e:	78 2f       	mov	r23, r24
    2550:	88 27       	eor	r24, r24
    2552:	b8 5f       	subi	r27, 0xF8	; 248
    2554:	39 f0       	breq	.+14     	; 0x2564 <__fixunssfsi+0x4c>
    2556:	b9 3f       	cpi	r27, 0xF9	; 249
    2558:	cc f3       	brlt	.-14     	; 0x254c <__fixunssfsi+0x34>
    255a:	86 95       	lsr	r24
    255c:	77 95       	ror	r23
    255e:	67 95       	ror	r22
    2560:	b3 95       	inc	r27
    2562:	d9 f7       	brne	.-10     	; 0x255a <__fixunssfsi+0x42>
    2564:	3e f4       	brtc	.+14     	; 0x2574 <__fixunssfsi+0x5c>
    2566:	90 95       	com	r25
    2568:	80 95       	com	r24
    256a:	70 95       	com	r23
    256c:	61 95       	neg	r22
    256e:	7f 4f       	sbci	r23, 0xFF	; 255
    2570:	8f 4f       	sbci	r24, 0xFF	; 255
    2572:	9f 4f       	sbci	r25, 0xFF	; 255
    2574:	08 95       	ret

00002576 <__floatunsisf>:
    2576:	e8 94       	clt
    2578:	09 c0       	rjmp	.+18     	; 0x258c <__floatsisf+0x12>

0000257a <__floatsisf>:
    257a:	97 fb       	bst	r25, 7
    257c:	3e f4       	brtc	.+14     	; 0x258c <__floatsisf+0x12>
    257e:	90 95       	com	r25
    2580:	80 95       	com	r24
    2582:	70 95       	com	r23
    2584:	61 95       	neg	r22
    2586:	7f 4f       	sbci	r23, 0xFF	; 255
    2588:	8f 4f       	sbci	r24, 0xFF	; 255
    258a:	9f 4f       	sbci	r25, 0xFF	; 255
    258c:	99 23       	and	r25, r25
    258e:	a9 f0       	breq	.+42     	; 0x25ba <__floatsisf+0x40>
    2590:	f9 2f       	mov	r31, r25
    2592:	96 e9       	ldi	r25, 0x96	; 150
    2594:	bb 27       	eor	r27, r27
    2596:	93 95       	inc	r25
    2598:	f6 95       	lsr	r31
    259a:	87 95       	ror	r24
    259c:	77 95       	ror	r23
    259e:	67 95       	ror	r22
    25a0:	b7 95       	ror	r27
    25a2:	f1 11       	cpse	r31, r1
    25a4:	f8 cf       	rjmp	.-16     	; 0x2596 <__floatsisf+0x1c>
    25a6:	fa f4       	brpl	.+62     	; 0x25e6 <__floatsisf+0x6c>
    25a8:	bb 0f       	add	r27, r27
    25aa:	11 f4       	brne	.+4      	; 0x25b0 <__floatsisf+0x36>
    25ac:	60 ff       	sbrs	r22, 0
    25ae:	1b c0       	rjmp	.+54     	; 0x25e6 <__floatsisf+0x6c>
    25b0:	6f 5f       	subi	r22, 0xFF	; 255
    25b2:	7f 4f       	sbci	r23, 0xFF	; 255
    25b4:	8f 4f       	sbci	r24, 0xFF	; 255
    25b6:	9f 4f       	sbci	r25, 0xFF	; 255
    25b8:	16 c0       	rjmp	.+44     	; 0x25e6 <__floatsisf+0x6c>
    25ba:	88 23       	and	r24, r24
    25bc:	11 f0       	breq	.+4      	; 0x25c2 <__floatsisf+0x48>
    25be:	96 e9       	ldi	r25, 0x96	; 150
    25c0:	11 c0       	rjmp	.+34     	; 0x25e4 <__floatsisf+0x6a>
    25c2:	77 23       	and	r23, r23
    25c4:	21 f0       	breq	.+8      	; 0x25ce <__floatsisf+0x54>
    25c6:	9e e8       	ldi	r25, 0x8E	; 142
    25c8:	87 2f       	mov	r24, r23
    25ca:	76 2f       	mov	r23, r22
    25cc:	05 c0       	rjmp	.+10     	; 0x25d8 <__floatsisf+0x5e>
    25ce:	66 23       	and	r22, r22
    25d0:	71 f0       	breq	.+28     	; 0x25ee <__floatsisf+0x74>
    25d2:	96 e8       	ldi	r25, 0x86	; 134
    25d4:	86 2f       	mov	r24, r22
    25d6:	70 e0       	ldi	r23, 0x00	; 0
    25d8:	60 e0       	ldi	r22, 0x00	; 0
    25da:	2a f0       	brmi	.+10     	; 0x25e6 <__floatsisf+0x6c>
    25dc:	9a 95       	dec	r25
    25de:	66 0f       	add	r22, r22
    25e0:	77 1f       	adc	r23, r23
    25e2:	88 1f       	adc	r24, r24
    25e4:	da f7       	brpl	.-10     	; 0x25dc <__floatsisf+0x62>
    25e6:	88 0f       	add	r24, r24
    25e8:	96 95       	lsr	r25
    25ea:	87 95       	ror	r24
    25ec:	97 f9       	bld	r25, 7
    25ee:	08 95       	ret

000025f0 <__fp_inf>:
    25f0:	97 f9       	bld	r25, 7
    25f2:	9f 67       	ori	r25, 0x7F	; 127
    25f4:	80 e8       	ldi	r24, 0x80	; 128
    25f6:	70 e0       	ldi	r23, 0x00	; 0
    25f8:	60 e0       	ldi	r22, 0x00	; 0
    25fa:	08 95       	ret

000025fc <__fp_nan>:
    25fc:	9f ef       	ldi	r25, 0xFF	; 255
    25fe:	80 ec       	ldi	r24, 0xC0	; 192
    2600:	08 95       	ret

00002602 <__fp_pscA>:
    2602:	00 24       	eor	r0, r0
    2604:	0a 94       	dec	r0
    2606:	16 16       	cp	r1, r22
    2608:	17 06       	cpc	r1, r23
    260a:	18 06       	cpc	r1, r24
    260c:	09 06       	cpc	r0, r25
    260e:	08 95       	ret

00002610 <__fp_pscB>:
    2610:	00 24       	eor	r0, r0
    2612:	0a 94       	dec	r0
    2614:	12 16       	cp	r1, r18
    2616:	13 06       	cpc	r1, r19
    2618:	14 06       	cpc	r1, r20
    261a:	05 06       	cpc	r0, r21
    261c:	08 95       	ret

0000261e <__fp_round>:
    261e:	09 2e       	mov	r0, r25
    2620:	03 94       	inc	r0
    2622:	00 0c       	add	r0, r0
    2624:	11 f4       	brne	.+4      	; 0x262a <__fp_round+0xc>
    2626:	88 23       	and	r24, r24
    2628:	52 f0       	brmi	.+20     	; 0x263e <__fp_round+0x20>
    262a:	bb 0f       	add	r27, r27
    262c:	40 f4       	brcc	.+16     	; 0x263e <__fp_round+0x20>
    262e:	bf 2b       	or	r27, r31
    2630:	11 f4       	brne	.+4      	; 0x2636 <__fp_round+0x18>
    2632:	60 ff       	sbrs	r22, 0
    2634:	04 c0       	rjmp	.+8      	; 0x263e <__fp_round+0x20>
    2636:	6f 5f       	subi	r22, 0xFF	; 255
    2638:	7f 4f       	sbci	r23, 0xFF	; 255
    263a:	8f 4f       	sbci	r24, 0xFF	; 255
    263c:	9f 4f       	sbci	r25, 0xFF	; 255
    263e:	08 95       	ret

00002640 <__fp_split3>:
    2640:	57 fd       	sbrc	r21, 7
    2642:	90 58       	subi	r25, 0x80	; 128
    2644:	44 0f       	add	r20, r20
    2646:	55 1f       	adc	r21, r21
    2648:	59 f0       	breq	.+22     	; 0x2660 <__fp_splitA+0x10>
    264a:	5f 3f       	cpi	r21, 0xFF	; 255
    264c:	71 f0       	breq	.+28     	; 0x266a <__fp_splitA+0x1a>
    264e:	47 95       	ror	r20

00002650 <__fp_splitA>:
    2650:	88 0f       	add	r24, r24
    2652:	97 fb       	bst	r25, 7
    2654:	99 1f       	adc	r25, r25
    2656:	61 f0       	breq	.+24     	; 0x2670 <__fp_splitA+0x20>
    2658:	9f 3f       	cpi	r25, 0xFF	; 255
    265a:	79 f0       	breq	.+30     	; 0x267a <__fp_splitA+0x2a>
    265c:	87 95       	ror	r24
    265e:	08 95       	ret
    2660:	12 16       	cp	r1, r18
    2662:	13 06       	cpc	r1, r19
    2664:	14 06       	cpc	r1, r20
    2666:	55 1f       	adc	r21, r21
    2668:	f2 cf       	rjmp	.-28     	; 0x264e <__fp_split3+0xe>
    266a:	46 95       	lsr	r20
    266c:	f1 df       	rcall	.-30     	; 0x2650 <__fp_splitA>
    266e:	08 c0       	rjmp	.+16     	; 0x2680 <__fp_splitA+0x30>
    2670:	16 16       	cp	r1, r22
    2672:	17 06       	cpc	r1, r23
    2674:	18 06       	cpc	r1, r24
    2676:	99 1f       	adc	r25, r25
    2678:	f1 cf       	rjmp	.-30     	; 0x265c <__fp_splitA+0xc>
    267a:	86 95       	lsr	r24
    267c:	71 05       	cpc	r23, r1
    267e:	61 05       	cpc	r22, r1
    2680:	08 94       	sec
    2682:	08 95       	ret

00002684 <__fp_zero>:
    2684:	e8 94       	clt

00002686 <__fp_szero>:
    2686:	bb 27       	eor	r27, r27
    2688:	66 27       	eor	r22, r22
    268a:	77 27       	eor	r23, r23
    268c:	cb 01       	movw	r24, r22
    268e:	97 f9       	bld	r25, 7
    2690:	08 95       	ret

00002692 <__mulsf3>:
    2692:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__mulsf3x>
    2696:	0c 94 0f 13 	jmp	0x261e	; 0x261e <__fp_round>
    269a:	0e 94 01 13 	call	0x2602	; 0x2602 <__fp_pscA>
    269e:	38 f0       	brcs	.+14     	; 0x26ae <__mulsf3+0x1c>
    26a0:	0e 94 08 13 	call	0x2610	; 0x2610 <__fp_pscB>
    26a4:	20 f0       	brcs	.+8      	; 0x26ae <__mulsf3+0x1c>
    26a6:	95 23       	and	r25, r21
    26a8:	11 f0       	breq	.+4      	; 0x26ae <__mulsf3+0x1c>
    26aa:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__fp_inf>
    26ae:	0c 94 fe 12 	jmp	0x25fc	; 0x25fc <__fp_nan>
    26b2:	11 24       	eor	r1, r1
    26b4:	0c 94 43 13 	jmp	0x2686	; 0x2686 <__fp_szero>

000026b8 <__mulsf3x>:
    26b8:	0e 94 20 13 	call	0x2640	; 0x2640 <__fp_split3>
    26bc:	70 f3       	brcs	.-36     	; 0x269a <__mulsf3+0x8>

000026be <__mulsf3_pse>:
    26be:	95 9f       	mul	r25, r21
    26c0:	c1 f3       	breq	.-16     	; 0x26b2 <__mulsf3+0x20>
    26c2:	95 0f       	add	r25, r21
    26c4:	50 e0       	ldi	r21, 0x00	; 0
    26c6:	55 1f       	adc	r21, r21
    26c8:	62 9f       	mul	r22, r18
    26ca:	f0 01       	movw	r30, r0
    26cc:	72 9f       	mul	r23, r18
    26ce:	bb 27       	eor	r27, r27
    26d0:	f0 0d       	add	r31, r0
    26d2:	b1 1d       	adc	r27, r1
    26d4:	63 9f       	mul	r22, r19
    26d6:	aa 27       	eor	r26, r26
    26d8:	f0 0d       	add	r31, r0
    26da:	b1 1d       	adc	r27, r1
    26dc:	aa 1f       	adc	r26, r26
    26de:	64 9f       	mul	r22, r20
    26e0:	66 27       	eor	r22, r22
    26e2:	b0 0d       	add	r27, r0
    26e4:	a1 1d       	adc	r26, r1
    26e6:	66 1f       	adc	r22, r22
    26e8:	82 9f       	mul	r24, r18
    26ea:	22 27       	eor	r18, r18
    26ec:	b0 0d       	add	r27, r0
    26ee:	a1 1d       	adc	r26, r1
    26f0:	62 1f       	adc	r22, r18
    26f2:	73 9f       	mul	r23, r19
    26f4:	b0 0d       	add	r27, r0
    26f6:	a1 1d       	adc	r26, r1
    26f8:	62 1f       	adc	r22, r18
    26fa:	83 9f       	mul	r24, r19
    26fc:	a0 0d       	add	r26, r0
    26fe:	61 1d       	adc	r22, r1
    2700:	22 1f       	adc	r18, r18
    2702:	74 9f       	mul	r23, r20
    2704:	33 27       	eor	r19, r19
    2706:	a0 0d       	add	r26, r0
    2708:	61 1d       	adc	r22, r1
    270a:	23 1f       	adc	r18, r19
    270c:	84 9f       	mul	r24, r20
    270e:	60 0d       	add	r22, r0
    2710:	21 1d       	adc	r18, r1
    2712:	82 2f       	mov	r24, r18
    2714:	76 2f       	mov	r23, r22
    2716:	6a 2f       	mov	r22, r26
    2718:	11 24       	eor	r1, r1
    271a:	9f 57       	subi	r25, 0x7F	; 127
    271c:	50 40       	sbci	r21, 0x00	; 0
    271e:	9a f0       	brmi	.+38     	; 0x2746 <__mulsf3_pse+0x88>
    2720:	f1 f0       	breq	.+60     	; 0x275e <__mulsf3_pse+0xa0>
    2722:	88 23       	and	r24, r24
    2724:	4a f0       	brmi	.+18     	; 0x2738 <__mulsf3_pse+0x7a>
    2726:	ee 0f       	add	r30, r30
    2728:	ff 1f       	adc	r31, r31
    272a:	bb 1f       	adc	r27, r27
    272c:	66 1f       	adc	r22, r22
    272e:	77 1f       	adc	r23, r23
    2730:	88 1f       	adc	r24, r24
    2732:	91 50       	subi	r25, 0x01	; 1
    2734:	50 40       	sbci	r21, 0x00	; 0
    2736:	a9 f7       	brne	.-22     	; 0x2722 <__mulsf3_pse+0x64>
    2738:	9e 3f       	cpi	r25, 0xFE	; 254
    273a:	51 05       	cpc	r21, r1
    273c:	80 f0       	brcs	.+32     	; 0x275e <__mulsf3_pse+0xa0>
    273e:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__fp_inf>
    2742:	0c 94 43 13 	jmp	0x2686	; 0x2686 <__fp_szero>
    2746:	5f 3f       	cpi	r21, 0xFF	; 255
    2748:	e4 f3       	brlt	.-8      	; 0x2742 <__mulsf3_pse+0x84>
    274a:	98 3e       	cpi	r25, 0xE8	; 232
    274c:	d4 f3       	brlt	.-12     	; 0x2742 <__mulsf3_pse+0x84>
    274e:	86 95       	lsr	r24
    2750:	77 95       	ror	r23
    2752:	67 95       	ror	r22
    2754:	b7 95       	ror	r27
    2756:	f7 95       	ror	r31
    2758:	e7 95       	ror	r30
    275a:	9f 5f       	subi	r25, 0xFF	; 255
    275c:	c1 f7       	brne	.-16     	; 0x274e <__mulsf3_pse+0x90>
    275e:	fe 2b       	or	r31, r30
    2760:	88 0f       	add	r24, r24
    2762:	91 1d       	adc	r25, r1
    2764:	96 95       	lsr	r25
    2766:	87 95       	ror	r24
    2768:	97 f9       	bld	r25, 7
    276a:	08 95       	ret

0000276c <__divmodhi4>:
    276c:	97 fb       	bst	r25, 7
    276e:	07 2e       	mov	r0, r23
    2770:	16 f4       	brtc	.+4      	; 0x2776 <__divmodhi4+0xa>
    2772:	00 94       	com	r0
    2774:	07 d0       	rcall	.+14     	; 0x2784 <__divmodhi4_neg1>
    2776:	77 fd       	sbrc	r23, 7
    2778:	09 d0       	rcall	.+18     	; 0x278c <__divmodhi4_neg2>
    277a:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__udivmodhi4>
    277e:	07 fc       	sbrc	r0, 7
    2780:	05 d0       	rcall	.+10     	; 0x278c <__divmodhi4_neg2>
    2782:	3e f4       	brtc	.+14     	; 0x2792 <__divmodhi4_exit>

00002784 <__divmodhi4_neg1>:
    2784:	90 95       	com	r25
    2786:	81 95       	neg	r24
    2788:	9f 4f       	sbci	r25, 0xFF	; 255
    278a:	08 95       	ret

0000278c <__divmodhi4_neg2>:
    278c:	70 95       	com	r23
    278e:	61 95       	neg	r22
    2790:	7f 4f       	sbci	r23, 0xFF	; 255

00002792 <__divmodhi4_exit>:
    2792:	08 95       	ret

00002794 <__udivmodsi4>:
    2794:	a1 e2       	ldi	r26, 0x21	; 33
    2796:	1a 2e       	mov	r1, r26
    2798:	aa 1b       	sub	r26, r26
    279a:	bb 1b       	sub	r27, r27
    279c:	fd 01       	movw	r30, r26
    279e:	0d c0       	rjmp	.+26     	; 0x27ba <__udivmodsi4_ep>

000027a0 <__udivmodsi4_loop>:
    27a0:	aa 1f       	adc	r26, r26
    27a2:	bb 1f       	adc	r27, r27
    27a4:	ee 1f       	adc	r30, r30
    27a6:	ff 1f       	adc	r31, r31
    27a8:	a2 17       	cp	r26, r18
    27aa:	b3 07       	cpc	r27, r19
    27ac:	e4 07       	cpc	r30, r20
    27ae:	f5 07       	cpc	r31, r21
    27b0:	20 f0       	brcs	.+8      	; 0x27ba <__udivmodsi4_ep>
    27b2:	a2 1b       	sub	r26, r18
    27b4:	b3 0b       	sbc	r27, r19
    27b6:	e4 0b       	sbc	r30, r20
    27b8:	f5 0b       	sbc	r31, r21

000027ba <__udivmodsi4_ep>:
    27ba:	66 1f       	adc	r22, r22
    27bc:	77 1f       	adc	r23, r23
    27be:	88 1f       	adc	r24, r24
    27c0:	99 1f       	adc	r25, r25
    27c2:	1a 94       	dec	r1
    27c4:	69 f7       	brne	.-38     	; 0x27a0 <__udivmodsi4_loop>
    27c6:	60 95       	com	r22
    27c8:	70 95       	com	r23
    27ca:	80 95       	com	r24
    27cc:	90 95       	com	r25
    27ce:	9b 01       	movw	r18, r22
    27d0:	ac 01       	movw	r20, r24
    27d2:	bd 01       	movw	r22, r26
    27d4:	cf 01       	movw	r24, r30
    27d6:	08 95       	ret

000027d8 <__udivmodhi4>:
    27d8:	aa 1b       	sub	r26, r26
    27da:	bb 1b       	sub	r27, r27
    27dc:	51 e1       	ldi	r21, 0x11	; 17
    27de:	07 c0       	rjmp	.+14     	; 0x27ee <__udivmodhi4_ep>

000027e0 <__udivmodhi4_loop>:
    27e0:	aa 1f       	adc	r26, r26
    27e2:	bb 1f       	adc	r27, r27
    27e4:	a6 17       	cp	r26, r22
    27e6:	b7 07       	cpc	r27, r23
    27e8:	10 f0       	brcs	.+4      	; 0x27ee <__udivmodhi4_ep>
    27ea:	a6 1b       	sub	r26, r22
    27ec:	b7 0b       	sbc	r27, r23

000027ee <__udivmodhi4_ep>:
    27ee:	88 1f       	adc	r24, r24
    27f0:	99 1f       	adc	r25, r25
    27f2:	5a 95       	dec	r21
    27f4:	a9 f7       	brne	.-22     	; 0x27e0 <__udivmodhi4_loop>
    27f6:	80 95       	com	r24
    27f8:	90 95       	com	r25
    27fa:	bc 01       	movw	r22, r24
    27fc:	cd 01       	movw	r24, r26
    27fe:	08 95       	ret

00002800 <strtod>:
    2800:	a0 e0       	ldi	r26, 0x00	; 0
    2802:	b0 e0       	ldi	r27, 0x00	; 0
    2804:	e6 e0       	ldi	r30, 0x06	; 6
    2806:	f4 e1       	ldi	r31, 0x14	; 20
    2808:	0c 94 f7 19 	jmp	0x33ee	; 0x33ee <__prologue_saves__+0xc>
    280c:	ec 01       	movw	r28, r24
    280e:	6b 01       	movw	r12, r22
    2810:	61 15       	cp	r22, r1
    2812:	71 05       	cpc	r23, r1
    2814:	19 f0       	breq	.+6      	; 0x281c <strtod+0x1c>
    2816:	fb 01       	movw	r30, r22
    2818:	80 83       	st	Z, r24
    281a:	91 83       	std	Z+1, r25	; 0x01
    281c:	7e 01       	movw	r14, r28
    281e:	ff ef       	ldi	r31, 0xFF	; 255
    2820:	ef 1a       	sub	r14, r31
    2822:	ff 0a       	sbc	r15, r31
    2824:	08 81       	ld	r16, Y
    2826:	80 2f       	mov	r24, r16
    2828:	90 e0       	ldi	r25, 0x00	; 0
    282a:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <isspace>
    282e:	89 2b       	or	r24, r25
    2830:	11 f0       	breq	.+4      	; 0x2836 <strtod+0x36>
    2832:	e7 01       	movw	r28, r14
    2834:	f3 cf       	rjmp	.-26     	; 0x281c <strtod+0x1c>
    2836:	0d 32       	cpi	r16, 0x2D	; 45
    2838:	39 f4       	brne	.+14     	; 0x2848 <strtod+0x48>
    283a:	7e 01       	movw	r14, r28
    283c:	82 e0       	ldi	r24, 0x02	; 2
    283e:	e8 0e       	add	r14, r24
    2840:	f1 1c       	adc	r15, r1
    2842:	09 81       	ldd	r16, Y+1	; 0x01
    2844:	11 e0       	ldi	r17, 0x01	; 1
    2846:	08 c0       	rjmp	.+16     	; 0x2858 <strtod+0x58>
    2848:	0b 32       	cpi	r16, 0x2B	; 43
    284a:	29 f4       	brne	.+10     	; 0x2856 <strtod+0x56>
    284c:	7e 01       	movw	r14, r28
    284e:	92 e0       	ldi	r25, 0x02	; 2
    2850:	e9 0e       	add	r14, r25
    2852:	f1 1c       	adc	r15, r1
    2854:	09 81       	ldd	r16, Y+1	; 0x01
    2856:	10 e0       	ldi	r17, 0x00	; 0
    2858:	e7 01       	movw	r28, r14
    285a:	21 97       	sbiw	r28, 0x01	; 1
    285c:	43 e0       	ldi	r20, 0x03	; 3
    285e:	50 e0       	ldi	r21, 0x00	; 0
    2860:	60 e8       	ldi	r22, 0x80	; 128
    2862:	70 e0       	ldi	r23, 0x00	; 0
    2864:	ce 01       	movw	r24, r28
    2866:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <strncasecmp_P>
    286a:	89 2b       	or	r24, r25
    286c:	c1 f4       	brne	.+48     	; 0x289e <strtod+0x9e>
    286e:	23 96       	adiw	r28, 0x03	; 3
    2870:	45 e0       	ldi	r20, 0x05	; 5
    2872:	50 e0       	ldi	r21, 0x00	; 0
    2874:	6b e7       	ldi	r22, 0x7B	; 123
    2876:	70 e0       	ldi	r23, 0x00	; 0
    2878:	ce 01       	movw	r24, r28
    287a:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <strncasecmp_P>
    287e:	89 2b       	or	r24, r25
    2880:	09 f4       	brne	.+2      	; 0x2884 <strtod+0x84>
    2882:	25 96       	adiw	r28, 0x05	; 5
    2884:	c1 14       	cp	r12, r1
    2886:	d1 04       	cpc	r13, r1
    2888:	19 f0       	breq	.+6      	; 0x2890 <strtod+0x90>
    288a:	f6 01       	movw	r30, r12
    288c:	c0 83       	st	Z, r28
    288e:	d1 83       	std	Z+1, r29	; 0x01
    2890:	11 11       	cpse	r17, r1
    2892:	f6 c0       	rjmp	.+492    	; 0x2a80 <strtod+0x280>
    2894:	60 e0       	ldi	r22, 0x00	; 0
    2896:	70 e0       	ldi	r23, 0x00	; 0
    2898:	80 e8       	ldi	r24, 0x80	; 128
    289a:	9f e7       	ldi	r25, 0x7F	; 127
    289c:	fa c0       	rjmp	.+500    	; 0x2a92 <strtod+0x292>
    289e:	43 e0       	ldi	r20, 0x03	; 3
    28a0:	50 e0       	ldi	r21, 0x00	; 0
    28a2:	68 e7       	ldi	r22, 0x78	; 120
    28a4:	70 e0       	ldi	r23, 0x00	; 0
    28a6:	ce 01       	movw	r24, r28
    28a8:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <strncasecmp_P>
    28ac:	89 2b       	or	r24, r25
    28ae:	59 f4       	brne	.+22     	; 0x28c6 <strtod+0xc6>
    28b0:	c1 14       	cp	r12, r1
    28b2:	d1 04       	cpc	r13, r1
    28b4:	09 f4       	brne	.+2      	; 0x28b8 <strtod+0xb8>
    28b6:	e9 c0       	rjmp	.+466    	; 0x2a8a <strtod+0x28a>
    28b8:	f2 e0       	ldi	r31, 0x02	; 2
    28ba:	ef 0e       	add	r14, r31
    28bc:	f1 1c       	adc	r15, r1
    28be:	f6 01       	movw	r30, r12
    28c0:	e0 82       	st	Z, r14
    28c2:	f1 82       	std	Z+1, r15	; 0x01
    28c4:	e2 c0       	rjmp	.+452    	; 0x2a8a <strtod+0x28a>
    28c6:	20 e0       	ldi	r18, 0x00	; 0
    28c8:	30 e0       	ldi	r19, 0x00	; 0
    28ca:	a9 01       	movw	r20, r18
    28cc:	c0 e0       	ldi	r28, 0x00	; 0
    28ce:	d0 e0       	ldi	r29, 0x00	; 0
    28d0:	f7 01       	movw	r30, r14
    28d2:	80 ed       	ldi	r24, 0xD0	; 208
    28d4:	a8 2e       	mov	r10, r24
    28d6:	a0 0e       	add	r10, r16
    28d8:	89 e0       	ldi	r24, 0x09	; 9
    28da:	8a 15       	cp	r24, r10
    28dc:	30 f1       	brcs	.+76     	; 0x292a <strtod+0x12a>
    28de:	91 2f       	mov	r25, r17
    28e0:	92 60       	ori	r25, 0x02	; 2
    28e2:	b9 2e       	mov	r11, r25
    28e4:	81 2f       	mov	r24, r17
    28e6:	88 70       	andi	r24, 0x08	; 8
    28e8:	12 ff       	sbrs	r17, 2
    28ea:	04 c0       	rjmp	.+8      	; 0x28f4 <strtod+0xf4>
    28ec:	81 11       	cpse	r24, r1
    28ee:	24 c0       	rjmp	.+72     	; 0x2938 <strtod+0x138>
    28f0:	21 96       	adiw	r28, 0x01	; 1
    28f2:	22 c0       	rjmp	.+68     	; 0x2938 <strtod+0x138>
    28f4:	81 11       	cpse	r24, r1
    28f6:	21 97       	sbiw	r28, 0x01	; 1
    28f8:	a5 e0       	ldi	r26, 0x05	; 5
    28fa:	b0 e0       	ldi	r27, 0x00	; 0
    28fc:	0e 94 e6 19 	call	0x33cc	; 0x33cc <__muluhisi3>
    2900:	dc 01       	movw	r26, r24
    2902:	cb 01       	movw	r24, r22
    2904:	88 0f       	add	r24, r24
    2906:	99 1f       	adc	r25, r25
    2908:	aa 1f       	adc	r26, r26
    290a:	bb 1f       	adc	r27, r27
    290c:	9c 01       	movw	r18, r24
    290e:	ad 01       	movw	r20, r26
    2910:	2a 0d       	add	r18, r10
    2912:	31 1d       	adc	r19, r1
    2914:	41 1d       	adc	r20, r1
    2916:	51 1d       	adc	r21, r1
    2918:	28 39       	cpi	r18, 0x98	; 152
    291a:	89 e9       	ldi	r24, 0x99	; 153
    291c:	38 07       	cpc	r19, r24
    291e:	48 07       	cpc	r20, r24
    2920:	89 e1       	ldi	r24, 0x19	; 25
    2922:	58 07       	cpc	r21, r24
    2924:	48 f0       	brcs	.+18     	; 0x2938 <strtod+0x138>
    2926:	16 60       	ori	r17, 0x06	; 6
    2928:	06 c0       	rjmp	.+12     	; 0x2936 <strtod+0x136>
    292a:	9e ef       	ldi	r25, 0xFE	; 254
    292c:	a9 12       	cpse	r10, r25
    292e:	0a c0       	rjmp	.+20     	; 0x2944 <strtod+0x144>
    2930:	13 fd       	sbrc	r17, 3
    2932:	40 c0       	rjmp	.+128    	; 0x29b4 <strtod+0x1b4>
    2934:	18 60       	ori	r17, 0x08	; 8
    2936:	b1 2e       	mov	r11, r17
    2938:	8f ef       	ldi	r24, 0xFF	; 255
    293a:	e8 1a       	sub	r14, r24
    293c:	f8 0a       	sbc	r15, r24
    293e:	00 81       	ld	r16, Z
    2940:	1b 2d       	mov	r17, r11
    2942:	c6 cf       	rjmp	.-116    	; 0x28d0 <strtod+0xd0>
    2944:	80 2f       	mov	r24, r16
    2946:	8f 7d       	andi	r24, 0xDF	; 223
    2948:	85 34       	cpi	r24, 0x45	; 69
    294a:	a1 f5       	brne	.+104    	; 0x29b4 <strtod+0x1b4>
    294c:	80 81       	ld	r24, Z
    294e:	8d 32       	cpi	r24, 0x2D	; 45
    2950:	11 f4       	brne	.+4      	; 0x2956 <strtod+0x156>
    2952:	10 61       	ori	r17, 0x10	; 16
    2954:	06 c0       	rjmp	.+12     	; 0x2962 <strtod+0x162>
    2956:	8b 32       	cpi	r24, 0x2B	; 43
    2958:	21 f0       	breq	.+8      	; 0x2962 <strtod+0x162>
    295a:	31 96       	adiw	r30, 0x01	; 1
    295c:	61 e0       	ldi	r22, 0x01	; 1
    295e:	70 e0       	ldi	r23, 0x00	; 0
    2960:	04 c0       	rjmp	.+8      	; 0x296a <strtod+0x16a>
    2962:	81 81       	ldd	r24, Z+1	; 0x01
    2964:	32 96       	adiw	r30, 0x02	; 2
    2966:	62 e0       	ldi	r22, 0x02	; 2
    2968:	70 e0       	ldi	r23, 0x00	; 0
    296a:	80 53       	subi	r24, 0x30	; 48
    296c:	8a 30       	cpi	r24, 0x0A	; 10
    296e:	18 f0       	brcs	.+6      	; 0x2976 <strtod+0x176>
    2970:	e6 1b       	sub	r30, r22
    2972:	f7 0b       	sbc	r31, r23
    2974:	1f c0       	rjmp	.+62     	; 0x29b4 <strtod+0x1b4>
    2976:	60 e0       	ldi	r22, 0x00	; 0
    2978:	70 e0       	ldi	r23, 0x00	; 0
    297a:	60 38       	cpi	r22, 0x80	; 128
    297c:	9c e0       	ldi	r25, 0x0C	; 12
    297e:	79 07       	cpc	r23, r25
    2980:	5c f4       	brge	.+22     	; 0x2998 <strtod+0x198>
    2982:	db 01       	movw	r26, r22
    2984:	aa 0f       	add	r26, r26
    2986:	bb 1f       	adc	r27, r27
    2988:	aa 0f       	add	r26, r26
    298a:	bb 1f       	adc	r27, r27
    298c:	6a 0f       	add	r22, r26
    298e:	7b 1f       	adc	r23, r27
    2990:	66 0f       	add	r22, r22
    2992:	77 1f       	adc	r23, r23
    2994:	68 0f       	add	r22, r24
    2996:	71 1d       	adc	r23, r1
    2998:	31 96       	adiw	r30, 0x01	; 1
    299a:	df 01       	movw	r26, r30
    299c:	11 97       	sbiw	r26, 0x01	; 1
    299e:	8c 91       	ld	r24, X
    29a0:	80 53       	subi	r24, 0x30	; 48
    29a2:	8a 30       	cpi	r24, 0x0A	; 10
    29a4:	50 f3       	brcs	.-44     	; 0x297a <strtod+0x17a>
    29a6:	14 ff       	sbrs	r17, 4
    29a8:	03 c0       	rjmp	.+6      	; 0x29b0 <strtod+0x1b0>
    29aa:	71 95       	neg	r23
    29ac:	61 95       	neg	r22
    29ae:	71 09       	sbc	r23, r1
    29b0:	c6 0f       	add	r28, r22
    29b2:	d7 1f       	adc	r29, r23
    29b4:	11 ff       	sbrs	r17, 1
    29b6:	08 c0       	rjmp	.+16     	; 0x29c8 <strtod+0x1c8>
    29b8:	c1 14       	cp	r12, r1
    29ba:	d1 04       	cpc	r13, r1
    29bc:	29 f0       	breq	.+10     	; 0x29c8 <strtod+0x1c8>
    29be:	cf 01       	movw	r24, r30
    29c0:	01 97       	sbiw	r24, 0x01	; 1
    29c2:	f6 01       	movw	r30, r12
    29c4:	80 83       	st	Z, r24
    29c6:	91 83       	std	Z+1, r25	; 0x01
    29c8:	ca 01       	movw	r24, r20
    29ca:	b9 01       	movw	r22, r18
    29cc:	0e 94 bb 12 	call	0x2576	; 0x2576 <__floatunsisf>
    29d0:	21 2f       	mov	r18, r17
    29d2:	23 70       	andi	r18, 0x03	; 3
    29d4:	23 30       	cpi	r18, 0x03	; 3
    29d6:	19 f0       	breq	.+6      	; 0x29de <strtod+0x1de>
    29d8:	4b 01       	movw	r8, r22
    29da:	5c 01       	movw	r10, r24
    29dc:	06 c0       	rjmp	.+12     	; 0x29ea <strtod+0x1ea>
    29de:	4b 01       	movw	r8, r22
    29e0:	5c 01       	movw	r10, r24
    29e2:	b7 fa       	bst	r11, 7
    29e4:	b0 94       	com	r11
    29e6:	b7 f8       	bld	r11, 7
    29e8:	b0 94       	com	r11
    29ea:	20 e0       	ldi	r18, 0x00	; 0
    29ec:	30 e0       	ldi	r19, 0x00	; 0
    29ee:	a9 01       	movw	r20, r18
    29f0:	c5 01       	movw	r24, r10
    29f2:	b4 01       	movw	r22, r8
    29f4:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__cmpsf2>
    29f8:	88 23       	and	r24, r24
    29fa:	09 f4       	brne	.+2      	; 0x29fe <strtod+0x1fe>
    29fc:	3e c0       	rjmp	.+124    	; 0x2a7a <strtod+0x27a>
    29fe:	d7 ff       	sbrs	r29, 7
    2a00:	06 c0       	rjmp	.+12     	; 0x2a0e <strtod+0x20e>
    2a02:	d1 95       	neg	r29
    2a04:	c1 95       	neg	r28
    2a06:	d1 09       	sbc	r29, r1
    2a08:	07 e9       	ldi	r16, 0x97	; 151
    2a0a:	10 e0       	ldi	r17, 0x00	; 0
    2a0c:	02 c0       	rjmp	.+4      	; 0x2a12 <strtod+0x212>
    2a0e:	0f ea       	ldi	r16, 0xAF	; 175
    2a10:	10 e0       	ldi	r17, 0x00	; 0
    2a12:	68 01       	movw	r12, r16
    2a14:	f8 e1       	ldi	r31, 0x18	; 24
    2a16:	cf 1a       	sub	r12, r31
    2a18:	d1 08       	sbc	r13, r1
    2a1a:	90 e2       	ldi	r25, 0x20	; 32
    2a1c:	e9 2e       	mov	r14, r25
    2a1e:	f1 2c       	mov	r15, r1
    2a20:	ce 15       	cp	r28, r14
    2a22:	df 05       	cpc	r29, r15
    2a24:	74 f0       	brlt	.+28     	; 0x2a42 <strtod+0x242>
    2a26:	f8 01       	movw	r30, r16
    2a28:	25 91       	lpm	r18, Z+
    2a2a:	35 91       	lpm	r19, Z+
    2a2c:	45 91       	lpm	r20, Z+
    2a2e:	54 91       	lpm	r21, Z
    2a30:	c5 01       	movw	r24, r10
    2a32:	b4 01       	movw	r22, r8
    2a34:	0e 94 49 13 	call	0x2692	; 0x2692 <__mulsf3>
    2a38:	4b 01       	movw	r8, r22
    2a3a:	5c 01       	movw	r10, r24
    2a3c:	ce 19       	sub	r28, r14
    2a3e:	df 09       	sbc	r29, r15
    2a40:	ef cf       	rjmp	.-34     	; 0x2a20 <strtod+0x220>
    2a42:	04 50       	subi	r16, 0x04	; 4
    2a44:	11 09       	sbc	r17, r1
    2a46:	f5 94       	asr	r15
    2a48:	e7 94       	ror	r14
    2a4a:	0c 15       	cp	r16, r12
    2a4c:	1d 05       	cpc	r17, r13
    2a4e:	41 f7       	brne	.-48     	; 0x2a20 <strtod+0x220>
    2a50:	8a 2d       	mov	r24, r10
    2a52:	88 0f       	add	r24, r24
    2a54:	8b 2d       	mov	r24, r11
    2a56:	88 1f       	adc	r24, r24
    2a58:	8f 3f       	cpi	r24, 0xFF	; 255
    2a5a:	49 f0       	breq	.+18     	; 0x2a6e <strtod+0x26e>
    2a5c:	20 e0       	ldi	r18, 0x00	; 0
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	a9 01       	movw	r20, r18
    2a62:	c5 01       	movw	r24, r10
    2a64:	b4 01       	movw	r22, r8
    2a66:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__cmpsf2>
    2a6a:	81 11       	cpse	r24, r1
    2a6c:	06 c0       	rjmp	.+12     	; 0x2a7a <strtod+0x27a>
    2a6e:	82 e2       	ldi	r24, 0x22	; 34
    2a70:	90 e0       	ldi	r25, 0x00	; 0
    2a72:	80 93 bd 3b 	sts	0x3BBD, r24	; 0x803bbd <errno>
    2a76:	90 93 be 3b 	sts	0x3BBE, r25	; 0x803bbe <errno+0x1>
    2a7a:	c5 01       	movw	r24, r10
    2a7c:	b4 01       	movw	r22, r8
    2a7e:	09 c0       	rjmp	.+18     	; 0x2a92 <strtod+0x292>
    2a80:	60 e0       	ldi	r22, 0x00	; 0
    2a82:	70 e0       	ldi	r23, 0x00	; 0
    2a84:	80 e8       	ldi	r24, 0x80	; 128
    2a86:	9f ef       	ldi	r25, 0xFF	; 255
    2a88:	04 c0       	rjmp	.+8      	; 0x2a92 <strtod+0x292>
    2a8a:	60 e0       	ldi	r22, 0x00	; 0
    2a8c:	70 e0       	ldi	r23, 0x00	; 0
    2a8e:	80 ec       	ldi	r24, 0xC0	; 192
    2a90:	9f e7       	ldi	r25, 0x7F	; 127
    2a92:	cd b7       	in	r28, 0x3d	; 61
    2a94:	de b7       	in	r29, 0x3e	; 62
    2a96:	ec e0       	ldi	r30, 0x0C	; 12
    2a98:	0c 94 10 1a 	jmp	0x3420	; 0x3420 <__epilogue_restores__+0xc>

00002a9c <strtoul>:
    2a9c:	a0 e0       	ldi	r26, 0x00	; 0
    2a9e:	b0 e0       	ldi	r27, 0x00	; 0
    2aa0:	e4 e5       	ldi	r30, 0x54	; 84
    2aa2:	f5 e1       	ldi	r31, 0x15	; 21
    2aa4:	0c 94 f2 19 	jmp	0x33e4	; 0x33e4 <__prologue_saves__+0x2>
    2aa8:	5c 01       	movw	r10, r24
    2aaa:	6b 01       	movw	r12, r22
    2aac:	7a 01       	movw	r14, r20
    2aae:	61 15       	cp	r22, r1
    2ab0:	71 05       	cpc	r23, r1
    2ab2:	19 f0       	breq	.+6      	; 0x2aba <strtoul+0x1e>
    2ab4:	fb 01       	movw	r30, r22
    2ab6:	80 83       	st	Z, r24
    2ab8:	91 83       	std	Z+1, r25	; 0x01
    2aba:	e1 14       	cp	r14, r1
    2abc:	f1 04       	cpc	r15, r1
    2abe:	29 f0       	breq	.+10     	; 0x2aca <strtoul+0x2e>
    2ac0:	c7 01       	movw	r24, r14
    2ac2:	02 97       	sbiw	r24, 0x02	; 2
    2ac4:	83 97       	sbiw	r24, 0x23	; 35
    2ac6:	08 f0       	brcs	.+2      	; 0x2aca <strtoul+0x2e>
    2ac8:	c9 c0       	rjmp	.+402    	; 0x2c5c <strtoul+0x1c0>
    2aca:	e5 01       	movw	r28, r10
    2acc:	21 96       	adiw	r28, 0x01	; 1
    2ace:	f5 01       	movw	r30, r10
    2ad0:	10 81       	ld	r17, Z
    2ad2:	81 2f       	mov	r24, r17
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <isspace>
    2ada:	89 2b       	or	r24, r25
    2adc:	11 f0       	breq	.+4      	; 0x2ae2 <strtoul+0x46>
    2ade:	5e 01       	movw	r10, r28
    2ae0:	f4 cf       	rjmp	.-24     	; 0x2aca <strtoul+0x2e>
    2ae2:	1d 32       	cpi	r17, 0x2D	; 45
    2ae4:	29 f4       	brne	.+10     	; 0x2af0 <strtoul+0x54>
    2ae6:	21 96       	adiw	r28, 0x01	; 1
    2ae8:	f5 01       	movw	r30, r10
    2aea:	11 81       	ldd	r17, Z+1	; 0x01
    2aec:	01 e0       	ldi	r16, 0x01	; 1
    2aee:	07 c0       	rjmp	.+14     	; 0x2afe <strtoul+0x62>
    2af0:	1b 32       	cpi	r17, 0x2B	; 43
    2af2:	21 f4       	brne	.+8      	; 0x2afc <strtoul+0x60>
    2af4:	e5 01       	movw	r28, r10
    2af6:	22 96       	adiw	r28, 0x02	; 2
    2af8:	f5 01       	movw	r30, r10
    2afa:	11 81       	ldd	r17, Z+1	; 0x01
    2afc:	00 e0       	ldi	r16, 0x00	; 0
    2afe:	e1 14       	cp	r14, r1
    2b00:	f1 04       	cpc	r15, r1
    2b02:	b1 f0       	breq	.+44     	; 0x2b30 <strtoul+0x94>
    2b04:	f0 e1       	ldi	r31, 0x10	; 16
    2b06:	ef 16       	cp	r14, r31
    2b08:	f1 04       	cpc	r15, r1
    2b0a:	29 f4       	brne	.+10     	; 0x2b16 <strtoul+0x7a>
    2b0c:	b0 c0       	rjmp	.+352    	; 0x2c6e <strtoul+0x1d2>
    2b0e:	10 e3       	ldi	r17, 0x30	; 48
    2b10:	e1 14       	cp	r14, r1
    2b12:	f1 04       	cpc	r15, r1
    2b14:	01 f1       	breq	.+64     	; 0x2b56 <strtoul+0xba>
    2b16:	2a e0       	ldi	r18, 0x0A	; 10
    2b18:	e2 16       	cp	r14, r18
    2b1a:	f1 04       	cpc	r15, r1
    2b1c:	b1 f1       	breq	.+108    	; 0x2b8a <strtoul+0xee>
    2b1e:	80 e1       	ldi	r24, 0x10	; 16
    2b20:	e8 16       	cp	r14, r24
    2b22:	f1 04       	cpc	r15, r1
    2b24:	71 f0       	breq	.+28     	; 0x2b42 <strtoul+0xa6>
    2b26:	e8 e0       	ldi	r30, 0x08	; 8
    2b28:	ee 16       	cp	r14, r30
    2b2a:	f1 04       	cpc	r15, r1
    2b2c:	f1 f4       	brne	.+60     	; 0x2b6a <strtoul+0xce>
    2b2e:	13 c0       	rjmp	.+38     	; 0x2b56 <strtoul+0xba>
    2b30:	10 33       	cpi	r17, 0x30	; 48
    2b32:	41 f5       	brne	.+80     	; 0x2b84 <strtoul+0xe8>
    2b34:	88 81       	ld	r24, Y
    2b36:	8f 7d       	andi	r24, 0xDF	; 223
    2b38:	88 35       	cpi	r24, 0x58	; 88
    2b3a:	49 f7       	brne	.-46     	; 0x2b0e <strtoul+0x72>
    2b3c:	19 81       	ldd	r17, Y+1	; 0x01
    2b3e:	22 96       	adiw	r28, 0x02	; 2
    2b40:	02 60       	ori	r16, 0x02	; 2
    2b42:	f0 e1       	ldi	r31, 0x10	; 16
    2b44:	ef 2e       	mov	r14, r31
    2b46:	f1 2c       	mov	r15, r1
    2b48:	88 24       	eor	r8, r8
    2b4a:	8a 94       	dec	r8
    2b4c:	98 2c       	mov	r9, r8
    2b4e:	a8 2c       	mov	r10, r8
    2b50:	af e0       	ldi	r26, 0x0F	; 15
    2b52:	ba 2e       	mov	r11, r26
    2b54:	20 c0       	rjmp	.+64     	; 0x2b96 <strtoul+0xfa>
    2b56:	78 e0       	ldi	r23, 0x08	; 8
    2b58:	e7 2e       	mov	r14, r23
    2b5a:	f1 2c       	mov	r15, r1
    2b5c:	88 24       	eor	r8, r8
    2b5e:	8a 94       	dec	r8
    2b60:	98 2c       	mov	r9, r8
    2b62:	a8 2c       	mov	r10, r8
    2b64:	ef e1       	ldi	r30, 0x1F	; 31
    2b66:	be 2e       	mov	r11, r30
    2b68:	16 c0       	rjmp	.+44     	; 0x2b96 <strtoul+0xfa>
    2b6a:	6f ef       	ldi	r22, 0xFF	; 255
    2b6c:	7f ef       	ldi	r23, 0xFF	; 255
    2b6e:	cb 01       	movw	r24, r22
    2b70:	97 01       	movw	r18, r14
    2b72:	0f 2c       	mov	r0, r15
    2b74:	00 0c       	add	r0, r0
    2b76:	44 0b       	sbc	r20, r20
    2b78:	55 0b       	sbc	r21, r21
    2b7a:	0e 94 ca 13 	call	0x2794	; 0x2794 <__udivmodsi4>
    2b7e:	49 01       	movw	r8, r18
    2b80:	5a 01       	movw	r10, r20
    2b82:	09 c0       	rjmp	.+18     	; 0x2b96 <strtoul+0xfa>
    2b84:	8a e0       	ldi	r24, 0x0A	; 10
    2b86:	e8 2e       	mov	r14, r24
    2b88:	f1 2c       	mov	r15, r1
    2b8a:	69 e9       	ldi	r22, 0x99	; 153
    2b8c:	86 2e       	mov	r8, r22
    2b8e:	98 2c       	mov	r9, r8
    2b90:	a8 2c       	mov	r10, r8
    2b92:	69 e1       	ldi	r22, 0x19	; 25
    2b94:	b6 2e       	mov	r11, r22
    2b96:	40 e0       	ldi	r20, 0x00	; 0
    2b98:	60 e0       	ldi	r22, 0x00	; 0
    2b9a:	70 e0       	ldi	r23, 0x00	; 0
    2b9c:	cb 01       	movw	r24, r22
    2b9e:	27 01       	movw	r4, r14
    2ba0:	0f 2c       	mov	r0, r15
    2ba2:	00 0c       	add	r0, r0
    2ba4:	66 08       	sbc	r6, r6
    2ba6:	77 08       	sbc	r7, r7
    2ba8:	fe 01       	movw	r30, r28
    2baa:	50 ed       	ldi	r21, 0xD0	; 208
    2bac:	35 2e       	mov	r3, r21
    2bae:	31 0e       	add	r3, r17
    2bb0:	29 e0       	ldi	r18, 0x09	; 9
    2bb2:	23 15       	cp	r18, r3
    2bb4:	70 f4       	brcc	.+28     	; 0x2bd2 <strtoul+0x136>
    2bb6:	2f eb       	ldi	r18, 0xBF	; 191
    2bb8:	21 0f       	add	r18, r17
    2bba:	2a 31       	cpi	r18, 0x1A	; 26
    2bbc:	18 f4       	brcc	.+6      	; 0x2bc4 <strtoul+0x128>
    2bbe:	39 ec       	ldi	r19, 0xC9	; 201
    2bc0:	33 2e       	mov	r3, r19
    2bc2:	06 c0       	rjmp	.+12     	; 0x2bd0 <strtoul+0x134>
    2bc4:	2f e9       	ldi	r18, 0x9F	; 159
    2bc6:	21 0f       	add	r18, r17
    2bc8:	2a 31       	cpi	r18, 0x1A	; 26
    2bca:	30 f5       	brcc	.+76     	; 0x2c18 <strtoul+0x17c>
    2bcc:	29 ea       	ldi	r18, 0xA9	; 169
    2bce:	32 2e       	mov	r3, r18
    2bd0:	31 0e       	add	r3, r17
    2bd2:	23 2d       	mov	r18, r3
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	2e 15       	cp	r18, r14
    2bd8:	3f 05       	cpc	r19, r15
    2bda:	f4 f4       	brge	.+60     	; 0x2c18 <strtoul+0x17c>
    2bdc:	4f 3f       	cpi	r20, 0xFF	; 255
    2bde:	c9 f0       	breq	.+50     	; 0x2c12 <strtoul+0x176>
    2be0:	86 16       	cp	r8, r22
    2be2:	97 06       	cpc	r9, r23
    2be4:	a8 06       	cpc	r10, r24
    2be6:	b9 06       	cpc	r11, r25
    2be8:	88 f0       	brcs	.+34     	; 0x2c0c <strtoul+0x170>
    2bea:	a3 01       	movw	r20, r6
    2bec:	92 01       	movw	r18, r4
    2bee:	0e 94 d6 19 	call	0x33ac	; 0x33ac <__mulsi3>
    2bf2:	23 2d       	mov	r18, r3
    2bf4:	30 e0       	ldi	r19, 0x00	; 0
    2bf6:	40 e0       	ldi	r20, 0x00	; 0
    2bf8:	50 e0       	ldi	r21, 0x00	; 0
    2bfa:	62 0f       	add	r22, r18
    2bfc:	73 1f       	adc	r23, r19
    2bfe:	84 1f       	adc	r24, r20
    2c00:	95 1f       	adc	r25, r21
    2c02:	62 17       	cp	r22, r18
    2c04:	73 07       	cpc	r23, r19
    2c06:	84 07       	cpc	r24, r20
    2c08:	95 07       	cpc	r25, r21
    2c0a:	10 f4       	brcc	.+4      	; 0x2c10 <strtoul+0x174>
    2c0c:	4f ef       	ldi	r20, 0xFF	; 255
    2c0e:	01 c0       	rjmp	.+2      	; 0x2c12 <strtoul+0x176>
    2c10:	41 e0       	ldi	r20, 0x01	; 1
    2c12:	21 96       	adiw	r28, 0x01	; 1
    2c14:	10 81       	ld	r17, Z
    2c16:	c8 cf       	rjmp	.-112    	; 0x2ba8 <strtoul+0x10c>
    2c18:	c1 14       	cp	r12, r1
    2c1a:	d1 04       	cpc	r13, r1
    2c1c:	51 f0       	breq	.+20     	; 0x2c32 <strtoul+0x196>
    2c1e:	44 23       	and	r20, r20
    2c20:	11 f0       	breq	.+4      	; 0x2c26 <strtoul+0x18a>
    2c22:	21 97       	sbiw	r28, 0x01	; 1
    2c24:	03 c0       	rjmp	.+6      	; 0x2c2c <strtoul+0x190>
    2c26:	01 ff       	sbrs	r16, 1
    2c28:	04 c0       	rjmp	.+8      	; 0x2c32 <strtoul+0x196>
    2c2a:	22 97       	sbiw	r28, 0x02	; 2
    2c2c:	f6 01       	movw	r30, r12
    2c2e:	c0 83       	st	Z, r28
    2c30:	d1 83       	std	Z+1, r29	; 0x01
    2c32:	00 ff       	sbrs	r16, 0
    2c34:	07 c0       	rjmp	.+14     	; 0x2c44 <strtoul+0x1a8>
    2c36:	90 95       	com	r25
    2c38:	80 95       	com	r24
    2c3a:	70 95       	com	r23
    2c3c:	61 95       	neg	r22
    2c3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c40:	8f 4f       	sbci	r24, 0xFF	; 255
    2c42:	9f 4f       	sbci	r25, 0xFF	; 255
    2c44:	4f 3f       	cpi	r20, 0xFF	; 255
    2c46:	79 f4       	brne	.+30     	; 0x2c66 <strtoul+0x1ca>
    2c48:	82 e2       	ldi	r24, 0x22	; 34
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	80 93 bd 3b 	sts	0x3BBD, r24	; 0x803bbd <errno>
    2c50:	90 93 be 3b 	sts	0x3BBE, r25	; 0x803bbe <errno+0x1>
    2c54:	3f ef       	ldi	r19, 0xFF	; 255
    2c56:	2f ef       	ldi	r18, 0xFF	; 255
    2c58:	9f ef       	ldi	r25, 0xFF	; 255
    2c5a:	0d c0       	rjmp	.+26     	; 0x2c76 <strtoul+0x1da>
    2c5c:	40 e0       	ldi	r20, 0x00	; 0
    2c5e:	30 e0       	ldi	r19, 0x00	; 0
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	90 e0       	ldi	r25, 0x00	; 0
    2c64:	08 c0       	rjmp	.+16     	; 0x2c76 <strtoul+0x1da>
    2c66:	46 2f       	mov	r20, r22
    2c68:	37 2f       	mov	r19, r23
    2c6a:	28 2f       	mov	r18, r24
    2c6c:	04 c0       	rjmp	.+8      	; 0x2c76 <strtoul+0x1da>
    2c6e:	10 33       	cpi	r17, 0x30	; 48
    2c70:	09 f0       	breq	.+2      	; 0x2c74 <strtoul+0x1d8>
    2c72:	67 cf       	rjmp	.-306    	; 0x2b42 <strtoul+0xa6>
    2c74:	5f cf       	rjmp	.-322    	; 0x2b34 <strtoul+0x98>
    2c76:	64 2f       	mov	r22, r20
    2c78:	73 2f       	mov	r23, r19
    2c7a:	82 2f       	mov	r24, r18
    2c7c:	cd b7       	in	r28, 0x3d	; 61
    2c7e:	de b7       	in	r29, 0x3e	; 62
    2c80:	e1 e1       	ldi	r30, 0x11	; 17
    2c82:	0c 94 0b 1a 	jmp	0x3416	; 0x3416 <__epilogue_restores__+0x2>

00002c86 <atoi>:
    2c86:	fc 01       	movw	r30, r24
    2c88:	88 27       	eor	r24, r24
    2c8a:	99 27       	eor	r25, r25
    2c8c:	e8 94       	clt
    2c8e:	21 91       	ld	r18, Z+
    2c90:	20 32       	cpi	r18, 0x20	; 32
    2c92:	e9 f3       	breq	.-6      	; 0x2c8e <atoi+0x8>
    2c94:	29 30       	cpi	r18, 0x09	; 9
    2c96:	10 f0       	brcs	.+4      	; 0x2c9c <atoi+0x16>
    2c98:	2e 30       	cpi	r18, 0x0E	; 14
    2c9a:	c8 f3       	brcs	.-14     	; 0x2c8e <atoi+0x8>
    2c9c:	2b 32       	cpi	r18, 0x2B	; 43
    2c9e:	41 f0       	breq	.+16     	; 0x2cb0 <atoi+0x2a>
    2ca0:	2d 32       	cpi	r18, 0x2D	; 45
    2ca2:	39 f4       	brne	.+14     	; 0x2cb2 <atoi+0x2c>
    2ca4:	68 94       	set
    2ca6:	04 c0       	rjmp	.+8      	; 0x2cb0 <atoi+0x2a>
    2ca8:	0e 94 b9 16 	call	0x2d72	; 0x2d72 <__mulhi_const_10>
    2cac:	82 0f       	add	r24, r18
    2cae:	91 1d       	adc	r25, r1
    2cb0:	21 91       	ld	r18, Z+
    2cb2:	20 53       	subi	r18, 0x30	; 48
    2cb4:	2a 30       	cpi	r18, 0x0A	; 10
    2cb6:	c0 f3       	brcs	.-16     	; 0x2ca8 <atoi+0x22>
    2cb8:	1e f4       	brtc	.+6      	; 0x2cc0 <atoi+0x3a>
    2cba:	90 95       	com	r25
    2cbc:	81 95       	neg	r24
    2cbe:	9f 4f       	sbci	r25, 0xFF	; 255
    2cc0:	08 95       	ret

00002cc2 <isspace>:
    2cc2:	91 11       	cpse	r25, r1
    2cc4:	0c 94 23 19 	jmp	0x3246	; 0x3246 <__ctype_isfalse>
    2cc8:	80 32       	cpi	r24, 0x20	; 32
    2cca:	19 f0       	breq	.+6      	; 0x2cd2 <isspace+0x10>
    2ccc:	89 50       	subi	r24, 0x09	; 9
    2cce:	85 50       	subi	r24, 0x05	; 5
    2cd0:	c8 f7       	brcc	.-14     	; 0x2cc4 <isspace+0x2>
    2cd2:	08 95       	ret

00002cd4 <strncasecmp_P>:
    2cd4:	fb 01       	movw	r30, r22
    2cd6:	dc 01       	movw	r26, r24
    2cd8:	41 50       	subi	r20, 0x01	; 1
    2cda:	50 40       	sbci	r21, 0x00	; 0
    2cdc:	88 f0       	brcs	.+34     	; 0x2d00 <strncasecmp_P+0x2c>
    2cde:	8d 91       	ld	r24, X+
    2ce0:	81 34       	cpi	r24, 0x41	; 65
    2ce2:	1c f0       	brlt	.+6      	; 0x2cea <strncasecmp_P+0x16>
    2ce4:	8b 35       	cpi	r24, 0x5B	; 91
    2ce6:	0c f4       	brge	.+2      	; 0x2cea <strncasecmp_P+0x16>
    2ce8:	80 5e       	subi	r24, 0xE0	; 224
    2cea:	65 91       	lpm	r22, Z+
    2cec:	61 34       	cpi	r22, 0x41	; 65
    2cee:	1c f0       	brlt	.+6      	; 0x2cf6 <strncasecmp_P+0x22>
    2cf0:	6b 35       	cpi	r22, 0x5B	; 91
    2cf2:	0c f4       	brge	.+2      	; 0x2cf6 <strncasecmp_P+0x22>
    2cf4:	60 5e       	subi	r22, 0xE0	; 224
    2cf6:	86 1b       	sub	r24, r22
    2cf8:	61 11       	cpse	r22, r1
    2cfa:	71 f3       	breq	.-36     	; 0x2cd8 <strncasecmp_P+0x4>
    2cfc:	99 0b       	sbc	r25, r25
    2cfe:	08 95       	ret
    2d00:	88 1b       	sub	r24, r24
    2d02:	fc cf       	rjmp	.-8      	; 0x2cfc <strncasecmp_P+0x28>

00002d04 <strcmp>:
    2d04:	fb 01       	movw	r30, r22
    2d06:	dc 01       	movw	r26, r24
    2d08:	8d 91       	ld	r24, X+
    2d0a:	01 90       	ld	r0, Z+
    2d0c:	80 19       	sub	r24, r0
    2d0e:	01 10       	cpse	r0, r1
    2d10:	d9 f3       	breq	.-10     	; 0x2d08 <strcmp+0x4>
    2d12:	99 0b       	sbc	r25, r25
    2d14:	08 95       	ret

00002d16 <strcpy>:
    2d16:	fb 01       	movw	r30, r22
    2d18:	dc 01       	movw	r26, r24
    2d1a:	01 90       	ld	r0, Z+
    2d1c:	0d 92       	st	X+, r0
    2d1e:	00 20       	and	r0, r0
    2d20:	e1 f7       	brne	.-8      	; 0x2d1a <strcpy+0x4>
    2d22:	08 95       	ret

00002d24 <strtok_r>:
    2d24:	fa 01       	movw	r30, r20
    2d26:	a1 91       	ld	r26, Z+
    2d28:	b0 81       	ld	r27, Z
    2d2a:	00 97       	sbiw	r24, 0x00	; 0
    2d2c:	19 f4       	brne	.+6      	; 0x2d34 <strtok_r+0x10>
    2d2e:	10 97       	sbiw	r26, 0x00	; 0
    2d30:	e1 f0       	breq	.+56     	; 0x2d6a <strtok_r+0x46>
    2d32:	cd 01       	movw	r24, r26
    2d34:	dc 01       	movw	r26, r24
    2d36:	cd 01       	movw	r24, r26
    2d38:	0d 90       	ld	r0, X+
    2d3a:	00 20       	and	r0, r0
    2d3c:	11 f4       	brne	.+4      	; 0x2d42 <strtok_r+0x1e>
    2d3e:	c0 01       	movw	r24, r0
    2d40:	13 c0       	rjmp	.+38     	; 0x2d68 <strtok_r+0x44>
    2d42:	fb 01       	movw	r30, r22
    2d44:	21 91       	ld	r18, Z+
    2d46:	22 23       	and	r18, r18
    2d48:	19 f0       	breq	.+6      	; 0x2d50 <strtok_r+0x2c>
    2d4a:	20 15       	cp	r18, r0
    2d4c:	d9 f7       	brne	.-10     	; 0x2d44 <strtok_r+0x20>
    2d4e:	f3 cf       	rjmp	.-26     	; 0x2d36 <strtok_r+0x12>
    2d50:	fb 01       	movw	r30, r22
    2d52:	21 91       	ld	r18, Z+
    2d54:	20 15       	cp	r18, r0
    2d56:	19 f4       	brne	.+6      	; 0x2d5e <strtok_r+0x3a>
    2d58:	1e 92       	st	-X, r1
    2d5a:	11 96       	adiw	r26, 0x01	; 1
    2d5c:	06 c0       	rjmp	.+12     	; 0x2d6a <strtok_r+0x46>
    2d5e:	22 23       	and	r18, r18
    2d60:	c1 f7       	brne	.-16     	; 0x2d52 <strtok_r+0x2e>
    2d62:	0d 90       	ld	r0, X+
    2d64:	00 20       	and	r0, r0
    2d66:	a1 f7       	brne	.-24     	; 0x2d50 <strtok_r+0x2c>
    2d68:	d0 01       	movw	r26, r0
    2d6a:	fa 01       	movw	r30, r20
    2d6c:	a1 93       	st	Z+, r26
    2d6e:	b0 83       	st	Z, r27
    2d70:	08 95       	ret

00002d72 <__mulhi_const_10>:
    2d72:	7a e0       	ldi	r23, 0x0A	; 10
    2d74:	97 9f       	mul	r25, r23
    2d76:	90 2d       	mov	r25, r0
    2d78:	87 9f       	mul	r24, r23
    2d7a:	80 2d       	mov	r24, r0
    2d7c:	91 0d       	add	r25, r1
    2d7e:	11 24       	eor	r1, r1
    2d80:	08 95       	ret

00002d82 <vsnprintf>:
    2d82:	ae e0       	ldi	r26, 0x0E	; 14
    2d84:	b0 e0       	ldi	r27, 0x00	; 0
    2d86:	e7 ec       	ldi	r30, 0xC7	; 199
    2d88:	f6 e1       	ldi	r31, 0x16	; 22
    2d8a:	0c 94 ff 19 	jmp	0x33fe	; 0x33fe <__prologue_saves__+0x1c>
    2d8e:	8c 01       	movw	r16, r24
    2d90:	fa 01       	movw	r30, r20
    2d92:	86 e0       	ldi	r24, 0x06	; 6
    2d94:	8c 83       	std	Y+4, r24	; 0x04
    2d96:	09 83       	std	Y+1, r16	; 0x01
    2d98:	1a 83       	std	Y+2, r17	; 0x02
    2d9a:	77 ff       	sbrs	r23, 7
    2d9c:	02 c0       	rjmp	.+4      	; 0x2da2 <vsnprintf+0x20>
    2d9e:	60 e0       	ldi	r22, 0x00	; 0
    2da0:	70 e8       	ldi	r23, 0x80	; 128
    2da2:	cb 01       	movw	r24, r22
    2da4:	01 97       	sbiw	r24, 0x01	; 1
    2da6:	8d 83       	std	Y+5, r24	; 0x05
    2da8:	9e 83       	std	Y+6, r25	; 0x06
    2daa:	a9 01       	movw	r20, r18
    2dac:	bf 01       	movw	r22, r30
    2dae:	ce 01       	movw	r24, r28
    2db0:	01 96       	adiw	r24, 0x01	; 1
    2db2:	0e 94 42 17 	call	0x2e84	; 0x2e84 <vfprintf>
    2db6:	4d 81       	ldd	r20, Y+5	; 0x05
    2db8:	5e 81       	ldd	r21, Y+6	; 0x06
    2dba:	57 fd       	sbrc	r21, 7
    2dbc:	0a c0       	rjmp	.+20     	; 0x2dd2 <vsnprintf+0x50>
    2dbe:	2f 81       	ldd	r18, Y+7	; 0x07
    2dc0:	38 85       	ldd	r19, Y+8	; 0x08
    2dc2:	42 17       	cp	r20, r18
    2dc4:	53 07       	cpc	r21, r19
    2dc6:	0c f4       	brge	.+2      	; 0x2dca <vsnprintf+0x48>
    2dc8:	9a 01       	movw	r18, r20
    2dca:	f8 01       	movw	r30, r16
    2dcc:	e2 0f       	add	r30, r18
    2dce:	f3 1f       	adc	r31, r19
    2dd0:	10 82       	st	Z, r1
    2dd2:	2e 96       	adiw	r28, 0x0e	; 14
    2dd4:	e4 e0       	ldi	r30, 0x04	; 4
    2dd6:	0c 94 18 1a 	jmp	0x3430	; 0x3430 <__epilogue_restores__+0x1c>

00002dda <vsnprintf_P>:
    2dda:	ae e0       	ldi	r26, 0x0E	; 14
    2ddc:	b0 e0       	ldi	r27, 0x00	; 0
    2dde:	e3 ef       	ldi	r30, 0xF3	; 243
    2de0:	f6 e1       	ldi	r31, 0x16	; 22
    2de2:	0c 94 ff 19 	jmp	0x33fe	; 0x33fe <__prologue_saves__+0x1c>
    2de6:	8c 01       	movw	r16, r24
    2de8:	fa 01       	movw	r30, r20
    2dea:	8e e0       	ldi	r24, 0x0E	; 14
    2dec:	8c 83       	std	Y+4, r24	; 0x04
    2dee:	09 83       	std	Y+1, r16	; 0x01
    2df0:	1a 83       	std	Y+2, r17	; 0x02
    2df2:	77 ff       	sbrs	r23, 7
    2df4:	02 c0       	rjmp	.+4      	; 0x2dfa <vsnprintf_P+0x20>
    2df6:	60 e0       	ldi	r22, 0x00	; 0
    2df8:	70 e8       	ldi	r23, 0x80	; 128
    2dfa:	cb 01       	movw	r24, r22
    2dfc:	01 97       	sbiw	r24, 0x01	; 1
    2dfe:	8d 83       	std	Y+5, r24	; 0x05
    2e00:	9e 83       	std	Y+6, r25	; 0x06
    2e02:	a9 01       	movw	r20, r18
    2e04:	bf 01       	movw	r22, r30
    2e06:	ce 01       	movw	r24, r28
    2e08:	01 96       	adiw	r24, 0x01	; 1
    2e0a:	0e 94 42 17 	call	0x2e84	; 0x2e84 <vfprintf>
    2e0e:	4d 81       	ldd	r20, Y+5	; 0x05
    2e10:	5e 81       	ldd	r21, Y+6	; 0x06
    2e12:	57 fd       	sbrc	r21, 7
    2e14:	0a c0       	rjmp	.+20     	; 0x2e2a <vsnprintf_P+0x50>
    2e16:	2f 81       	ldd	r18, Y+7	; 0x07
    2e18:	38 85       	ldd	r19, Y+8	; 0x08
    2e1a:	42 17       	cp	r20, r18
    2e1c:	53 07       	cpc	r21, r19
    2e1e:	0c f4       	brge	.+2      	; 0x2e22 <vsnprintf_P+0x48>
    2e20:	9a 01       	movw	r18, r20
    2e22:	f8 01       	movw	r30, r16
    2e24:	e2 0f       	add	r30, r18
    2e26:	f3 1f       	adc	r31, r19
    2e28:	10 82       	st	Z, r1
    2e2a:	2e 96       	adiw	r28, 0x0e	; 14
    2e2c:	e4 e0       	ldi	r30, 0x04	; 4
    2e2e:	0c 94 18 1a 	jmp	0x3430	; 0x3430 <__epilogue_restores__+0x1c>

00002e32 <__cmpsf2>:
    2e32:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__fp_cmp>
    2e36:	08 f4       	brcc	.+2      	; 0x2e3a <__cmpsf2+0x8>
    2e38:	81 e0       	ldi	r24, 0x01	; 1
    2e3a:	08 95       	ret

00002e3c <__fp_cmp>:
    2e3c:	99 0f       	add	r25, r25
    2e3e:	00 08       	sbc	r0, r0
    2e40:	55 0f       	add	r21, r21
    2e42:	aa 0b       	sbc	r26, r26
    2e44:	e0 e8       	ldi	r30, 0x80	; 128
    2e46:	fe ef       	ldi	r31, 0xFE	; 254
    2e48:	16 16       	cp	r1, r22
    2e4a:	17 06       	cpc	r1, r23
    2e4c:	e8 07       	cpc	r30, r24
    2e4e:	f9 07       	cpc	r31, r25
    2e50:	c0 f0       	brcs	.+48     	; 0x2e82 <__fp_cmp+0x46>
    2e52:	12 16       	cp	r1, r18
    2e54:	13 06       	cpc	r1, r19
    2e56:	e4 07       	cpc	r30, r20
    2e58:	f5 07       	cpc	r31, r21
    2e5a:	98 f0       	brcs	.+38     	; 0x2e82 <__fp_cmp+0x46>
    2e5c:	62 1b       	sub	r22, r18
    2e5e:	73 0b       	sbc	r23, r19
    2e60:	84 0b       	sbc	r24, r20
    2e62:	95 0b       	sbc	r25, r21
    2e64:	39 f4       	brne	.+14     	; 0x2e74 <__fp_cmp+0x38>
    2e66:	0a 26       	eor	r0, r26
    2e68:	61 f0       	breq	.+24     	; 0x2e82 <__fp_cmp+0x46>
    2e6a:	23 2b       	or	r18, r19
    2e6c:	24 2b       	or	r18, r20
    2e6e:	25 2b       	or	r18, r21
    2e70:	21 f4       	brne	.+8      	; 0x2e7a <__fp_cmp+0x3e>
    2e72:	08 95       	ret
    2e74:	0a 26       	eor	r0, r26
    2e76:	09 f4       	brne	.+2      	; 0x2e7a <__fp_cmp+0x3e>
    2e78:	a1 40       	sbci	r26, 0x01	; 1
    2e7a:	a6 95       	lsr	r26
    2e7c:	8f ef       	ldi	r24, 0xFF	; 255
    2e7e:	81 1d       	adc	r24, r1
    2e80:	81 1d       	adc	r24, r1
    2e82:	08 95       	ret

00002e84 <vfprintf>:
    2e84:	ab e0       	ldi	r26, 0x0B	; 11
    2e86:	b0 e0       	ldi	r27, 0x00	; 0
    2e88:	e8 e4       	ldi	r30, 0x48	; 72
    2e8a:	f7 e1       	ldi	r31, 0x17	; 23
    2e8c:	0c 94 f1 19 	jmp	0x33e2	; 0x33e2 <__prologue_saves__>
    2e90:	6c 01       	movw	r12, r24
    2e92:	7b 01       	movw	r14, r22
    2e94:	8a 01       	movw	r16, r20
    2e96:	fc 01       	movw	r30, r24
    2e98:	16 82       	std	Z+6, r1	; 0x06
    2e9a:	17 82       	std	Z+7, r1	; 0x07
    2e9c:	83 81       	ldd	r24, Z+3	; 0x03
    2e9e:	81 ff       	sbrs	r24, 1
    2ea0:	cc c1       	rjmp	.+920    	; 0x323a <vfprintf+0x3b6>
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	01 96       	adiw	r24, 0x01	; 1
    2ea6:	3c 01       	movw	r6, r24
    2ea8:	f6 01       	movw	r30, r12
    2eaa:	93 81       	ldd	r25, Z+3	; 0x03
    2eac:	f7 01       	movw	r30, r14
    2eae:	93 fd       	sbrc	r25, 3
    2eb0:	85 91       	lpm	r24, Z+
    2eb2:	93 ff       	sbrs	r25, 3
    2eb4:	81 91       	ld	r24, Z+
    2eb6:	7f 01       	movw	r14, r30
    2eb8:	88 23       	and	r24, r24
    2eba:	09 f4       	brne	.+2      	; 0x2ebe <vfprintf+0x3a>
    2ebc:	ba c1       	rjmp	.+884    	; 0x3232 <vfprintf+0x3ae>
    2ebe:	85 32       	cpi	r24, 0x25	; 37
    2ec0:	39 f4       	brne	.+14     	; 0x2ed0 <vfprintf+0x4c>
    2ec2:	93 fd       	sbrc	r25, 3
    2ec4:	85 91       	lpm	r24, Z+
    2ec6:	93 ff       	sbrs	r25, 3
    2ec8:	81 91       	ld	r24, Z+
    2eca:	7f 01       	movw	r14, r30
    2ecc:	85 32       	cpi	r24, 0x25	; 37
    2ece:	29 f4       	brne	.+10     	; 0x2eda <vfprintf+0x56>
    2ed0:	b6 01       	movw	r22, r12
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    2ed8:	e7 cf       	rjmp	.-50     	; 0x2ea8 <vfprintf+0x24>
    2eda:	91 2c       	mov	r9, r1
    2edc:	21 2c       	mov	r2, r1
    2ede:	31 2c       	mov	r3, r1
    2ee0:	ff e1       	ldi	r31, 0x1F	; 31
    2ee2:	f3 15       	cp	r31, r3
    2ee4:	d8 f0       	brcs	.+54     	; 0x2f1c <vfprintf+0x98>
    2ee6:	8b 32       	cpi	r24, 0x2B	; 43
    2ee8:	79 f0       	breq	.+30     	; 0x2f08 <vfprintf+0x84>
    2eea:	38 f4       	brcc	.+14     	; 0x2efa <vfprintf+0x76>
    2eec:	80 32       	cpi	r24, 0x20	; 32
    2eee:	79 f0       	breq	.+30     	; 0x2f0e <vfprintf+0x8a>
    2ef0:	83 32       	cpi	r24, 0x23	; 35
    2ef2:	a1 f4       	brne	.+40     	; 0x2f1c <vfprintf+0x98>
    2ef4:	23 2d       	mov	r18, r3
    2ef6:	20 61       	ori	r18, 0x10	; 16
    2ef8:	1d c0       	rjmp	.+58     	; 0x2f34 <vfprintf+0xb0>
    2efa:	8d 32       	cpi	r24, 0x2D	; 45
    2efc:	61 f0       	breq	.+24     	; 0x2f16 <vfprintf+0x92>
    2efe:	80 33       	cpi	r24, 0x30	; 48
    2f00:	69 f4       	brne	.+26     	; 0x2f1c <vfprintf+0x98>
    2f02:	23 2d       	mov	r18, r3
    2f04:	21 60       	ori	r18, 0x01	; 1
    2f06:	16 c0       	rjmp	.+44     	; 0x2f34 <vfprintf+0xb0>
    2f08:	83 2d       	mov	r24, r3
    2f0a:	82 60       	ori	r24, 0x02	; 2
    2f0c:	38 2e       	mov	r3, r24
    2f0e:	e3 2d       	mov	r30, r3
    2f10:	e4 60       	ori	r30, 0x04	; 4
    2f12:	3e 2e       	mov	r3, r30
    2f14:	2a c0       	rjmp	.+84     	; 0x2f6a <vfprintf+0xe6>
    2f16:	f3 2d       	mov	r31, r3
    2f18:	f8 60       	ori	r31, 0x08	; 8
    2f1a:	1d c0       	rjmp	.+58     	; 0x2f56 <vfprintf+0xd2>
    2f1c:	37 fc       	sbrc	r3, 7
    2f1e:	2d c0       	rjmp	.+90     	; 0x2f7a <vfprintf+0xf6>
    2f20:	20 ed       	ldi	r18, 0xD0	; 208
    2f22:	28 0f       	add	r18, r24
    2f24:	2a 30       	cpi	r18, 0x0A	; 10
    2f26:	40 f0       	brcs	.+16     	; 0x2f38 <vfprintf+0xb4>
    2f28:	8e 32       	cpi	r24, 0x2E	; 46
    2f2a:	b9 f4       	brne	.+46     	; 0x2f5a <vfprintf+0xd6>
    2f2c:	36 fc       	sbrc	r3, 6
    2f2e:	81 c1       	rjmp	.+770    	; 0x3232 <vfprintf+0x3ae>
    2f30:	23 2d       	mov	r18, r3
    2f32:	20 64       	ori	r18, 0x40	; 64
    2f34:	32 2e       	mov	r3, r18
    2f36:	19 c0       	rjmp	.+50     	; 0x2f6a <vfprintf+0xe6>
    2f38:	36 fe       	sbrs	r3, 6
    2f3a:	06 c0       	rjmp	.+12     	; 0x2f48 <vfprintf+0xc4>
    2f3c:	8a e0       	ldi	r24, 0x0A	; 10
    2f3e:	98 9e       	mul	r9, r24
    2f40:	20 0d       	add	r18, r0
    2f42:	11 24       	eor	r1, r1
    2f44:	92 2e       	mov	r9, r18
    2f46:	11 c0       	rjmp	.+34     	; 0x2f6a <vfprintf+0xe6>
    2f48:	ea e0       	ldi	r30, 0x0A	; 10
    2f4a:	2e 9e       	mul	r2, r30
    2f4c:	20 0d       	add	r18, r0
    2f4e:	11 24       	eor	r1, r1
    2f50:	22 2e       	mov	r2, r18
    2f52:	f3 2d       	mov	r31, r3
    2f54:	f0 62       	ori	r31, 0x20	; 32
    2f56:	3f 2e       	mov	r3, r31
    2f58:	08 c0       	rjmp	.+16     	; 0x2f6a <vfprintf+0xe6>
    2f5a:	8c 36       	cpi	r24, 0x6C	; 108
    2f5c:	21 f4       	brne	.+8      	; 0x2f66 <vfprintf+0xe2>
    2f5e:	83 2d       	mov	r24, r3
    2f60:	80 68       	ori	r24, 0x80	; 128
    2f62:	38 2e       	mov	r3, r24
    2f64:	02 c0       	rjmp	.+4      	; 0x2f6a <vfprintf+0xe6>
    2f66:	88 36       	cpi	r24, 0x68	; 104
    2f68:	41 f4       	brne	.+16     	; 0x2f7a <vfprintf+0xf6>
    2f6a:	f7 01       	movw	r30, r14
    2f6c:	93 fd       	sbrc	r25, 3
    2f6e:	85 91       	lpm	r24, Z+
    2f70:	93 ff       	sbrs	r25, 3
    2f72:	81 91       	ld	r24, Z+
    2f74:	7f 01       	movw	r14, r30
    2f76:	81 11       	cpse	r24, r1
    2f78:	b3 cf       	rjmp	.-154    	; 0x2ee0 <vfprintf+0x5c>
    2f7a:	98 2f       	mov	r25, r24
    2f7c:	9f 7d       	andi	r25, 0xDF	; 223
    2f7e:	95 54       	subi	r25, 0x45	; 69
    2f80:	93 30       	cpi	r25, 0x03	; 3
    2f82:	28 f4       	brcc	.+10     	; 0x2f8e <vfprintf+0x10a>
    2f84:	0c 5f       	subi	r16, 0xFC	; 252
    2f86:	1f 4f       	sbci	r17, 0xFF	; 255
    2f88:	9f e3       	ldi	r25, 0x3F	; 63
    2f8a:	99 83       	std	Y+1, r25	; 0x01
    2f8c:	0d c0       	rjmp	.+26     	; 0x2fa8 <vfprintf+0x124>
    2f8e:	83 36       	cpi	r24, 0x63	; 99
    2f90:	31 f0       	breq	.+12     	; 0x2f9e <vfprintf+0x11a>
    2f92:	83 37       	cpi	r24, 0x73	; 115
    2f94:	71 f0       	breq	.+28     	; 0x2fb2 <vfprintf+0x12e>
    2f96:	83 35       	cpi	r24, 0x53	; 83
    2f98:	09 f0       	breq	.+2      	; 0x2f9c <vfprintf+0x118>
    2f9a:	59 c0       	rjmp	.+178    	; 0x304e <vfprintf+0x1ca>
    2f9c:	21 c0       	rjmp	.+66     	; 0x2fe0 <vfprintf+0x15c>
    2f9e:	f8 01       	movw	r30, r16
    2fa0:	80 81       	ld	r24, Z
    2fa2:	89 83       	std	Y+1, r24	; 0x01
    2fa4:	0e 5f       	subi	r16, 0xFE	; 254
    2fa6:	1f 4f       	sbci	r17, 0xFF	; 255
    2fa8:	88 24       	eor	r8, r8
    2faa:	83 94       	inc	r8
    2fac:	91 2c       	mov	r9, r1
    2fae:	53 01       	movw	r10, r6
    2fb0:	13 c0       	rjmp	.+38     	; 0x2fd8 <vfprintf+0x154>
    2fb2:	28 01       	movw	r4, r16
    2fb4:	f2 e0       	ldi	r31, 0x02	; 2
    2fb6:	4f 0e       	add	r4, r31
    2fb8:	51 1c       	adc	r5, r1
    2fba:	f8 01       	movw	r30, r16
    2fbc:	a0 80       	ld	r10, Z
    2fbe:	b1 80       	ldd	r11, Z+1	; 0x01
    2fc0:	36 fe       	sbrs	r3, 6
    2fc2:	03 c0       	rjmp	.+6      	; 0x2fca <vfprintf+0x146>
    2fc4:	69 2d       	mov	r22, r9
    2fc6:	70 e0       	ldi	r23, 0x00	; 0
    2fc8:	02 c0       	rjmp	.+4      	; 0x2fce <vfprintf+0x14a>
    2fca:	6f ef       	ldi	r22, 0xFF	; 255
    2fcc:	7f ef       	ldi	r23, 0xFF	; 255
    2fce:	c5 01       	movw	r24, r10
    2fd0:	0e 94 31 19 	call	0x3262	; 0x3262 <strnlen>
    2fd4:	4c 01       	movw	r8, r24
    2fd6:	82 01       	movw	r16, r4
    2fd8:	f3 2d       	mov	r31, r3
    2fda:	ff 77       	andi	r31, 0x7F	; 127
    2fdc:	3f 2e       	mov	r3, r31
    2fde:	16 c0       	rjmp	.+44     	; 0x300c <vfprintf+0x188>
    2fe0:	28 01       	movw	r4, r16
    2fe2:	22 e0       	ldi	r18, 0x02	; 2
    2fe4:	42 0e       	add	r4, r18
    2fe6:	51 1c       	adc	r5, r1
    2fe8:	f8 01       	movw	r30, r16
    2fea:	a0 80       	ld	r10, Z
    2fec:	b1 80       	ldd	r11, Z+1	; 0x01
    2fee:	36 fe       	sbrs	r3, 6
    2ff0:	03 c0       	rjmp	.+6      	; 0x2ff8 <vfprintf+0x174>
    2ff2:	69 2d       	mov	r22, r9
    2ff4:	70 e0       	ldi	r23, 0x00	; 0
    2ff6:	02 c0       	rjmp	.+4      	; 0x2ffc <vfprintf+0x178>
    2ff8:	6f ef       	ldi	r22, 0xFF	; 255
    2ffa:	7f ef       	ldi	r23, 0xFF	; 255
    2ffc:	c5 01       	movw	r24, r10
    2ffe:	0e 94 26 19 	call	0x324c	; 0x324c <strnlen_P>
    3002:	4c 01       	movw	r8, r24
    3004:	f3 2d       	mov	r31, r3
    3006:	f0 68       	ori	r31, 0x80	; 128
    3008:	3f 2e       	mov	r3, r31
    300a:	82 01       	movw	r16, r4
    300c:	33 fc       	sbrc	r3, 3
    300e:	1b c0       	rjmp	.+54     	; 0x3046 <vfprintf+0x1c2>
    3010:	82 2d       	mov	r24, r2
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	88 16       	cp	r8, r24
    3016:	99 06       	cpc	r9, r25
    3018:	b0 f4       	brcc	.+44     	; 0x3046 <vfprintf+0x1c2>
    301a:	b6 01       	movw	r22, r12
    301c:	80 e2       	ldi	r24, 0x20	; 32
    301e:	90 e0       	ldi	r25, 0x00	; 0
    3020:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    3024:	2a 94       	dec	r2
    3026:	f4 cf       	rjmp	.-24     	; 0x3010 <vfprintf+0x18c>
    3028:	f5 01       	movw	r30, r10
    302a:	37 fc       	sbrc	r3, 7
    302c:	85 91       	lpm	r24, Z+
    302e:	37 fe       	sbrs	r3, 7
    3030:	81 91       	ld	r24, Z+
    3032:	5f 01       	movw	r10, r30
    3034:	b6 01       	movw	r22, r12
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    303c:	21 10       	cpse	r2, r1
    303e:	2a 94       	dec	r2
    3040:	21 e0       	ldi	r18, 0x01	; 1
    3042:	82 1a       	sub	r8, r18
    3044:	91 08       	sbc	r9, r1
    3046:	81 14       	cp	r8, r1
    3048:	91 04       	cpc	r9, r1
    304a:	71 f7       	brne	.-36     	; 0x3028 <vfprintf+0x1a4>
    304c:	e8 c0       	rjmp	.+464    	; 0x321e <vfprintf+0x39a>
    304e:	84 36       	cpi	r24, 0x64	; 100
    3050:	11 f0       	breq	.+4      	; 0x3056 <vfprintf+0x1d2>
    3052:	89 36       	cpi	r24, 0x69	; 105
    3054:	41 f5       	brne	.+80     	; 0x30a6 <vfprintf+0x222>
    3056:	f8 01       	movw	r30, r16
    3058:	37 fe       	sbrs	r3, 7
    305a:	07 c0       	rjmp	.+14     	; 0x306a <vfprintf+0x1e6>
    305c:	60 81       	ld	r22, Z
    305e:	71 81       	ldd	r23, Z+1	; 0x01
    3060:	82 81       	ldd	r24, Z+2	; 0x02
    3062:	93 81       	ldd	r25, Z+3	; 0x03
    3064:	0c 5f       	subi	r16, 0xFC	; 252
    3066:	1f 4f       	sbci	r17, 0xFF	; 255
    3068:	08 c0       	rjmp	.+16     	; 0x307a <vfprintf+0x1f6>
    306a:	60 81       	ld	r22, Z
    306c:	71 81       	ldd	r23, Z+1	; 0x01
    306e:	07 2e       	mov	r0, r23
    3070:	00 0c       	add	r0, r0
    3072:	88 0b       	sbc	r24, r24
    3074:	99 0b       	sbc	r25, r25
    3076:	0e 5f       	subi	r16, 0xFE	; 254
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	f3 2d       	mov	r31, r3
    307c:	ff 76       	andi	r31, 0x6F	; 111
    307e:	3f 2e       	mov	r3, r31
    3080:	97 ff       	sbrs	r25, 7
    3082:	09 c0       	rjmp	.+18     	; 0x3096 <vfprintf+0x212>
    3084:	90 95       	com	r25
    3086:	80 95       	com	r24
    3088:	70 95       	com	r23
    308a:	61 95       	neg	r22
    308c:	7f 4f       	sbci	r23, 0xFF	; 255
    308e:	8f 4f       	sbci	r24, 0xFF	; 255
    3090:	9f 4f       	sbci	r25, 0xFF	; 255
    3092:	f0 68       	ori	r31, 0x80	; 128
    3094:	3f 2e       	mov	r3, r31
    3096:	2a e0       	ldi	r18, 0x0A	; 10
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	a3 01       	movw	r20, r6
    309c:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__ultoa_invert>
    30a0:	88 2e       	mov	r8, r24
    30a2:	86 18       	sub	r8, r6
    30a4:	45 c0       	rjmp	.+138    	; 0x3130 <vfprintf+0x2ac>
    30a6:	85 37       	cpi	r24, 0x75	; 117
    30a8:	31 f4       	brne	.+12     	; 0x30b6 <vfprintf+0x232>
    30aa:	23 2d       	mov	r18, r3
    30ac:	2f 7e       	andi	r18, 0xEF	; 239
    30ae:	b2 2e       	mov	r11, r18
    30b0:	2a e0       	ldi	r18, 0x0A	; 10
    30b2:	30 e0       	ldi	r19, 0x00	; 0
    30b4:	25 c0       	rjmp	.+74     	; 0x3100 <vfprintf+0x27c>
    30b6:	93 2d       	mov	r25, r3
    30b8:	99 7f       	andi	r25, 0xF9	; 249
    30ba:	b9 2e       	mov	r11, r25
    30bc:	8f 36       	cpi	r24, 0x6F	; 111
    30be:	c1 f0       	breq	.+48     	; 0x30f0 <vfprintf+0x26c>
    30c0:	18 f4       	brcc	.+6      	; 0x30c8 <vfprintf+0x244>
    30c2:	88 35       	cpi	r24, 0x58	; 88
    30c4:	79 f0       	breq	.+30     	; 0x30e4 <vfprintf+0x260>
    30c6:	b5 c0       	rjmp	.+362    	; 0x3232 <vfprintf+0x3ae>
    30c8:	80 37       	cpi	r24, 0x70	; 112
    30ca:	19 f0       	breq	.+6      	; 0x30d2 <vfprintf+0x24e>
    30cc:	88 37       	cpi	r24, 0x78	; 120
    30ce:	21 f0       	breq	.+8      	; 0x30d8 <vfprintf+0x254>
    30d0:	b0 c0       	rjmp	.+352    	; 0x3232 <vfprintf+0x3ae>
    30d2:	e9 2f       	mov	r30, r25
    30d4:	e0 61       	ori	r30, 0x10	; 16
    30d6:	be 2e       	mov	r11, r30
    30d8:	b4 fe       	sbrs	r11, 4
    30da:	0d c0       	rjmp	.+26     	; 0x30f6 <vfprintf+0x272>
    30dc:	fb 2d       	mov	r31, r11
    30de:	f4 60       	ori	r31, 0x04	; 4
    30e0:	bf 2e       	mov	r11, r31
    30e2:	09 c0       	rjmp	.+18     	; 0x30f6 <vfprintf+0x272>
    30e4:	34 fe       	sbrs	r3, 4
    30e6:	0a c0       	rjmp	.+20     	; 0x30fc <vfprintf+0x278>
    30e8:	29 2f       	mov	r18, r25
    30ea:	26 60       	ori	r18, 0x06	; 6
    30ec:	b2 2e       	mov	r11, r18
    30ee:	06 c0       	rjmp	.+12     	; 0x30fc <vfprintf+0x278>
    30f0:	28 e0       	ldi	r18, 0x08	; 8
    30f2:	30 e0       	ldi	r19, 0x00	; 0
    30f4:	05 c0       	rjmp	.+10     	; 0x3100 <vfprintf+0x27c>
    30f6:	20 e1       	ldi	r18, 0x10	; 16
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	02 c0       	rjmp	.+4      	; 0x3100 <vfprintf+0x27c>
    30fc:	20 e1       	ldi	r18, 0x10	; 16
    30fe:	32 e0       	ldi	r19, 0x02	; 2
    3100:	f8 01       	movw	r30, r16
    3102:	b7 fe       	sbrs	r11, 7
    3104:	07 c0       	rjmp	.+14     	; 0x3114 <vfprintf+0x290>
    3106:	60 81       	ld	r22, Z
    3108:	71 81       	ldd	r23, Z+1	; 0x01
    310a:	82 81       	ldd	r24, Z+2	; 0x02
    310c:	93 81       	ldd	r25, Z+3	; 0x03
    310e:	0c 5f       	subi	r16, 0xFC	; 252
    3110:	1f 4f       	sbci	r17, 0xFF	; 255
    3112:	06 c0       	rjmp	.+12     	; 0x3120 <vfprintf+0x29c>
    3114:	60 81       	ld	r22, Z
    3116:	71 81       	ldd	r23, Z+1	; 0x01
    3118:	80 e0       	ldi	r24, 0x00	; 0
    311a:	90 e0       	ldi	r25, 0x00	; 0
    311c:	0e 5f       	subi	r16, 0xFE	; 254
    311e:	1f 4f       	sbci	r17, 0xFF	; 255
    3120:	a3 01       	movw	r20, r6
    3122:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__ultoa_invert>
    3126:	88 2e       	mov	r8, r24
    3128:	86 18       	sub	r8, r6
    312a:	fb 2d       	mov	r31, r11
    312c:	ff 77       	andi	r31, 0x7F	; 127
    312e:	3f 2e       	mov	r3, r31
    3130:	36 fe       	sbrs	r3, 6
    3132:	0d c0       	rjmp	.+26     	; 0x314e <vfprintf+0x2ca>
    3134:	23 2d       	mov	r18, r3
    3136:	2e 7f       	andi	r18, 0xFE	; 254
    3138:	a2 2e       	mov	r10, r18
    313a:	89 14       	cp	r8, r9
    313c:	58 f4       	brcc	.+22     	; 0x3154 <vfprintf+0x2d0>
    313e:	34 fe       	sbrs	r3, 4
    3140:	0b c0       	rjmp	.+22     	; 0x3158 <vfprintf+0x2d4>
    3142:	32 fc       	sbrc	r3, 2
    3144:	09 c0       	rjmp	.+18     	; 0x3158 <vfprintf+0x2d4>
    3146:	83 2d       	mov	r24, r3
    3148:	8e 7e       	andi	r24, 0xEE	; 238
    314a:	a8 2e       	mov	r10, r24
    314c:	05 c0       	rjmp	.+10     	; 0x3158 <vfprintf+0x2d4>
    314e:	b8 2c       	mov	r11, r8
    3150:	a3 2c       	mov	r10, r3
    3152:	03 c0       	rjmp	.+6      	; 0x315a <vfprintf+0x2d6>
    3154:	b8 2c       	mov	r11, r8
    3156:	01 c0       	rjmp	.+2      	; 0x315a <vfprintf+0x2d6>
    3158:	b9 2c       	mov	r11, r9
    315a:	a4 fe       	sbrs	r10, 4
    315c:	0f c0       	rjmp	.+30     	; 0x317c <vfprintf+0x2f8>
    315e:	fe 01       	movw	r30, r28
    3160:	e8 0d       	add	r30, r8
    3162:	f1 1d       	adc	r31, r1
    3164:	80 81       	ld	r24, Z
    3166:	80 33       	cpi	r24, 0x30	; 48
    3168:	21 f4       	brne	.+8      	; 0x3172 <vfprintf+0x2ee>
    316a:	9a 2d       	mov	r25, r10
    316c:	99 7e       	andi	r25, 0xE9	; 233
    316e:	a9 2e       	mov	r10, r25
    3170:	09 c0       	rjmp	.+18     	; 0x3184 <vfprintf+0x300>
    3172:	a2 fe       	sbrs	r10, 2
    3174:	06 c0       	rjmp	.+12     	; 0x3182 <vfprintf+0x2fe>
    3176:	b3 94       	inc	r11
    3178:	b3 94       	inc	r11
    317a:	04 c0       	rjmp	.+8      	; 0x3184 <vfprintf+0x300>
    317c:	8a 2d       	mov	r24, r10
    317e:	86 78       	andi	r24, 0x86	; 134
    3180:	09 f0       	breq	.+2      	; 0x3184 <vfprintf+0x300>
    3182:	b3 94       	inc	r11
    3184:	a3 fc       	sbrc	r10, 3
    3186:	11 c0       	rjmp	.+34     	; 0x31aa <vfprintf+0x326>
    3188:	a0 fe       	sbrs	r10, 0
    318a:	06 c0       	rjmp	.+12     	; 0x3198 <vfprintf+0x314>
    318c:	b2 14       	cp	r11, r2
    318e:	88 f4       	brcc	.+34     	; 0x31b2 <vfprintf+0x32e>
    3190:	28 0c       	add	r2, r8
    3192:	92 2c       	mov	r9, r2
    3194:	9b 18       	sub	r9, r11
    3196:	0e c0       	rjmp	.+28     	; 0x31b4 <vfprintf+0x330>
    3198:	b2 14       	cp	r11, r2
    319a:	60 f4       	brcc	.+24     	; 0x31b4 <vfprintf+0x330>
    319c:	b6 01       	movw	r22, r12
    319e:	80 e2       	ldi	r24, 0x20	; 32
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    31a6:	b3 94       	inc	r11
    31a8:	f7 cf       	rjmp	.-18     	; 0x3198 <vfprintf+0x314>
    31aa:	b2 14       	cp	r11, r2
    31ac:	18 f4       	brcc	.+6      	; 0x31b4 <vfprintf+0x330>
    31ae:	2b 18       	sub	r2, r11
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <vfprintf+0x332>
    31b2:	98 2c       	mov	r9, r8
    31b4:	21 2c       	mov	r2, r1
    31b6:	a4 fe       	sbrs	r10, 4
    31b8:	10 c0       	rjmp	.+32     	; 0x31da <vfprintf+0x356>
    31ba:	b6 01       	movw	r22, r12
    31bc:	80 e3       	ldi	r24, 0x30	; 48
    31be:	90 e0       	ldi	r25, 0x00	; 0
    31c0:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    31c4:	a2 fe       	sbrs	r10, 2
    31c6:	17 c0       	rjmp	.+46     	; 0x31f6 <vfprintf+0x372>
    31c8:	a1 fc       	sbrc	r10, 1
    31ca:	03 c0       	rjmp	.+6      	; 0x31d2 <vfprintf+0x34e>
    31cc:	88 e7       	ldi	r24, 0x78	; 120
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	02 c0       	rjmp	.+4      	; 0x31d6 <vfprintf+0x352>
    31d2:	88 e5       	ldi	r24, 0x58	; 88
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	b6 01       	movw	r22, r12
    31d8:	0c c0       	rjmp	.+24     	; 0x31f2 <vfprintf+0x36e>
    31da:	8a 2d       	mov	r24, r10
    31dc:	86 78       	andi	r24, 0x86	; 134
    31de:	59 f0       	breq	.+22     	; 0x31f6 <vfprintf+0x372>
    31e0:	a1 fe       	sbrs	r10, 1
    31e2:	02 c0       	rjmp	.+4      	; 0x31e8 <vfprintf+0x364>
    31e4:	8b e2       	ldi	r24, 0x2B	; 43
    31e6:	01 c0       	rjmp	.+2      	; 0x31ea <vfprintf+0x366>
    31e8:	80 e2       	ldi	r24, 0x20	; 32
    31ea:	a7 fc       	sbrc	r10, 7
    31ec:	8d e2       	ldi	r24, 0x2D	; 45
    31ee:	b6 01       	movw	r22, r12
    31f0:	90 e0       	ldi	r25, 0x00	; 0
    31f2:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    31f6:	89 14       	cp	r8, r9
    31f8:	38 f4       	brcc	.+14     	; 0x3208 <vfprintf+0x384>
    31fa:	b6 01       	movw	r22, r12
    31fc:	80 e3       	ldi	r24, 0x30	; 48
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    3204:	9a 94       	dec	r9
    3206:	f7 cf       	rjmp	.-18     	; 0x31f6 <vfprintf+0x372>
    3208:	8a 94       	dec	r8
    320a:	f3 01       	movw	r30, r6
    320c:	e8 0d       	add	r30, r8
    320e:	f1 1d       	adc	r31, r1
    3210:	80 81       	ld	r24, Z
    3212:	b6 01       	movw	r22, r12
    3214:	90 e0       	ldi	r25, 0x00	; 0
    3216:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    321a:	81 10       	cpse	r8, r1
    321c:	f5 cf       	rjmp	.-22     	; 0x3208 <vfprintf+0x384>
    321e:	22 20       	and	r2, r2
    3220:	09 f4       	brne	.+2      	; 0x3224 <vfprintf+0x3a0>
    3222:	42 ce       	rjmp	.-892    	; 0x2ea8 <vfprintf+0x24>
    3224:	b6 01       	movw	r22, r12
    3226:	80 e2       	ldi	r24, 0x20	; 32
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	0e 94 3c 19 	call	0x3278	; 0x3278 <fputc>
    322e:	2a 94       	dec	r2
    3230:	f6 cf       	rjmp	.-20     	; 0x321e <vfprintf+0x39a>
    3232:	f6 01       	movw	r30, r12
    3234:	86 81       	ldd	r24, Z+6	; 0x06
    3236:	97 81       	ldd	r25, Z+7	; 0x07
    3238:	02 c0       	rjmp	.+4      	; 0x323e <vfprintf+0x3ba>
    323a:	8f ef       	ldi	r24, 0xFF	; 255
    323c:	9f ef       	ldi	r25, 0xFF	; 255
    323e:	2b 96       	adiw	r28, 0x0b	; 11
    3240:	e2 e1       	ldi	r30, 0x12	; 18
    3242:	0c 94 0a 1a 	jmp	0x3414	; 0x3414 <__epilogue_restores__>

00003246 <__ctype_isfalse>:
    3246:	99 27       	eor	r25, r25
    3248:	88 27       	eor	r24, r24

0000324a <__ctype_istrue>:
    324a:	08 95       	ret

0000324c <strnlen_P>:
    324c:	fc 01       	movw	r30, r24
    324e:	05 90       	lpm	r0, Z+
    3250:	61 50       	subi	r22, 0x01	; 1
    3252:	70 40       	sbci	r23, 0x00	; 0
    3254:	01 10       	cpse	r0, r1
    3256:	d8 f7       	brcc	.-10     	; 0x324e <strnlen_P+0x2>
    3258:	80 95       	com	r24
    325a:	90 95       	com	r25
    325c:	8e 0f       	add	r24, r30
    325e:	9f 1f       	adc	r25, r31
    3260:	08 95       	ret

00003262 <strnlen>:
    3262:	fc 01       	movw	r30, r24
    3264:	61 50       	subi	r22, 0x01	; 1
    3266:	70 40       	sbci	r23, 0x00	; 0
    3268:	01 90       	ld	r0, Z+
    326a:	01 10       	cpse	r0, r1
    326c:	d8 f7       	brcc	.-10     	; 0x3264 <strnlen+0x2>
    326e:	80 95       	com	r24
    3270:	90 95       	com	r25
    3272:	8e 0f       	add	r24, r30
    3274:	9f 1f       	adc	r25, r31
    3276:	08 95       	ret

00003278 <fputc>:
    3278:	0f 93       	push	r16
    327a:	1f 93       	push	r17
    327c:	cf 93       	push	r28
    327e:	df 93       	push	r29
    3280:	fb 01       	movw	r30, r22
    3282:	23 81       	ldd	r18, Z+3	; 0x03
    3284:	21 fd       	sbrc	r18, 1
    3286:	03 c0       	rjmp	.+6      	; 0x328e <fputc+0x16>
    3288:	8f ef       	ldi	r24, 0xFF	; 255
    328a:	9f ef       	ldi	r25, 0xFF	; 255
    328c:	2c c0       	rjmp	.+88     	; 0x32e6 <fputc+0x6e>
    328e:	22 ff       	sbrs	r18, 2
    3290:	16 c0       	rjmp	.+44     	; 0x32be <fputc+0x46>
    3292:	46 81       	ldd	r20, Z+6	; 0x06
    3294:	57 81       	ldd	r21, Z+7	; 0x07
    3296:	24 81       	ldd	r18, Z+4	; 0x04
    3298:	35 81       	ldd	r19, Z+5	; 0x05
    329a:	42 17       	cp	r20, r18
    329c:	53 07       	cpc	r21, r19
    329e:	44 f4       	brge	.+16     	; 0x32b0 <fputc+0x38>
    32a0:	a0 81       	ld	r26, Z
    32a2:	b1 81       	ldd	r27, Z+1	; 0x01
    32a4:	9d 01       	movw	r18, r26
    32a6:	2f 5f       	subi	r18, 0xFF	; 255
    32a8:	3f 4f       	sbci	r19, 0xFF	; 255
    32aa:	20 83       	st	Z, r18
    32ac:	31 83       	std	Z+1, r19	; 0x01
    32ae:	8c 93       	st	X, r24
    32b0:	26 81       	ldd	r18, Z+6	; 0x06
    32b2:	37 81       	ldd	r19, Z+7	; 0x07
    32b4:	2f 5f       	subi	r18, 0xFF	; 255
    32b6:	3f 4f       	sbci	r19, 0xFF	; 255
    32b8:	26 83       	std	Z+6, r18	; 0x06
    32ba:	37 83       	std	Z+7, r19	; 0x07
    32bc:	14 c0       	rjmp	.+40     	; 0x32e6 <fputc+0x6e>
    32be:	8b 01       	movw	r16, r22
    32c0:	ec 01       	movw	r28, r24
    32c2:	fb 01       	movw	r30, r22
    32c4:	00 84       	ldd	r0, Z+8	; 0x08
    32c6:	f1 85       	ldd	r31, Z+9	; 0x09
    32c8:	e0 2d       	mov	r30, r0
    32ca:	09 95       	icall
    32cc:	89 2b       	or	r24, r25
    32ce:	e1 f6       	brne	.-72     	; 0x3288 <fputc+0x10>
    32d0:	d8 01       	movw	r26, r16
    32d2:	16 96       	adiw	r26, 0x06	; 6
    32d4:	8d 91       	ld	r24, X+
    32d6:	9c 91       	ld	r25, X
    32d8:	17 97       	sbiw	r26, 0x07	; 7
    32da:	01 96       	adiw	r24, 0x01	; 1
    32dc:	16 96       	adiw	r26, 0x06	; 6
    32de:	8d 93       	st	X+, r24
    32e0:	9c 93       	st	X, r25
    32e2:	17 97       	sbiw	r26, 0x07	; 7
    32e4:	ce 01       	movw	r24, r28
    32e6:	df 91       	pop	r29
    32e8:	cf 91       	pop	r28
    32ea:	1f 91       	pop	r17
    32ec:	0f 91       	pop	r16
    32ee:	08 95       	ret

000032f0 <__ultoa_invert>:
    32f0:	fa 01       	movw	r30, r20
    32f2:	aa 27       	eor	r26, r26
    32f4:	28 30       	cpi	r18, 0x08	; 8
    32f6:	51 f1       	breq	.+84     	; 0x334c <__ultoa_invert+0x5c>
    32f8:	20 31       	cpi	r18, 0x10	; 16
    32fa:	81 f1       	breq	.+96     	; 0x335c <__ultoa_invert+0x6c>
    32fc:	e8 94       	clt
    32fe:	6f 93       	push	r22
    3300:	6e 7f       	andi	r22, 0xFE	; 254
    3302:	6e 5f       	subi	r22, 0xFE	; 254
    3304:	7f 4f       	sbci	r23, 0xFF	; 255
    3306:	8f 4f       	sbci	r24, 0xFF	; 255
    3308:	9f 4f       	sbci	r25, 0xFF	; 255
    330a:	af 4f       	sbci	r26, 0xFF	; 255
    330c:	b1 e0       	ldi	r27, 0x01	; 1
    330e:	3e d0       	rcall	.+124    	; 0x338c <__ultoa_invert+0x9c>
    3310:	b4 e0       	ldi	r27, 0x04	; 4
    3312:	3c d0       	rcall	.+120    	; 0x338c <__ultoa_invert+0x9c>
    3314:	67 0f       	add	r22, r23
    3316:	78 1f       	adc	r23, r24
    3318:	89 1f       	adc	r24, r25
    331a:	9a 1f       	adc	r25, r26
    331c:	a1 1d       	adc	r26, r1
    331e:	68 0f       	add	r22, r24
    3320:	79 1f       	adc	r23, r25
    3322:	8a 1f       	adc	r24, r26
    3324:	91 1d       	adc	r25, r1
    3326:	a1 1d       	adc	r26, r1
    3328:	6a 0f       	add	r22, r26
    332a:	71 1d       	adc	r23, r1
    332c:	81 1d       	adc	r24, r1
    332e:	91 1d       	adc	r25, r1
    3330:	a1 1d       	adc	r26, r1
    3332:	20 d0       	rcall	.+64     	; 0x3374 <__ultoa_invert+0x84>
    3334:	09 f4       	brne	.+2      	; 0x3338 <__ultoa_invert+0x48>
    3336:	68 94       	set
    3338:	3f 91       	pop	r19
    333a:	2a e0       	ldi	r18, 0x0A	; 10
    333c:	26 9f       	mul	r18, r22
    333e:	11 24       	eor	r1, r1
    3340:	30 19       	sub	r19, r0
    3342:	30 5d       	subi	r19, 0xD0	; 208
    3344:	31 93       	st	Z+, r19
    3346:	de f6       	brtc	.-74     	; 0x32fe <__ultoa_invert+0xe>
    3348:	cf 01       	movw	r24, r30
    334a:	08 95       	ret
    334c:	46 2f       	mov	r20, r22
    334e:	47 70       	andi	r20, 0x07	; 7
    3350:	40 5d       	subi	r20, 0xD0	; 208
    3352:	41 93       	st	Z+, r20
    3354:	b3 e0       	ldi	r27, 0x03	; 3
    3356:	0f d0       	rcall	.+30     	; 0x3376 <__ultoa_invert+0x86>
    3358:	c9 f7       	brne	.-14     	; 0x334c <__ultoa_invert+0x5c>
    335a:	f6 cf       	rjmp	.-20     	; 0x3348 <__ultoa_invert+0x58>
    335c:	46 2f       	mov	r20, r22
    335e:	4f 70       	andi	r20, 0x0F	; 15
    3360:	40 5d       	subi	r20, 0xD0	; 208
    3362:	4a 33       	cpi	r20, 0x3A	; 58
    3364:	18 f0       	brcs	.+6      	; 0x336c <__ultoa_invert+0x7c>
    3366:	49 5d       	subi	r20, 0xD9	; 217
    3368:	31 fd       	sbrc	r19, 1
    336a:	40 52       	subi	r20, 0x20	; 32
    336c:	41 93       	st	Z+, r20
    336e:	02 d0       	rcall	.+4      	; 0x3374 <__ultoa_invert+0x84>
    3370:	a9 f7       	brne	.-22     	; 0x335c <__ultoa_invert+0x6c>
    3372:	ea cf       	rjmp	.-44     	; 0x3348 <__ultoa_invert+0x58>
    3374:	b4 e0       	ldi	r27, 0x04	; 4
    3376:	a6 95       	lsr	r26
    3378:	97 95       	ror	r25
    337a:	87 95       	ror	r24
    337c:	77 95       	ror	r23
    337e:	67 95       	ror	r22
    3380:	ba 95       	dec	r27
    3382:	c9 f7       	brne	.-14     	; 0x3376 <__ultoa_invert+0x86>
    3384:	00 97       	sbiw	r24, 0x00	; 0
    3386:	61 05       	cpc	r22, r1
    3388:	71 05       	cpc	r23, r1
    338a:	08 95       	ret
    338c:	9b 01       	movw	r18, r22
    338e:	ac 01       	movw	r20, r24
    3390:	0a 2e       	mov	r0, r26
    3392:	06 94       	lsr	r0
    3394:	57 95       	ror	r21
    3396:	47 95       	ror	r20
    3398:	37 95       	ror	r19
    339a:	27 95       	ror	r18
    339c:	ba 95       	dec	r27
    339e:	c9 f7       	brne	.-14     	; 0x3392 <__ultoa_invert+0xa2>
    33a0:	62 0f       	add	r22, r18
    33a2:	73 1f       	adc	r23, r19
    33a4:	84 1f       	adc	r24, r20
    33a6:	95 1f       	adc	r25, r21
    33a8:	a0 1d       	adc	r26, r0
    33aa:	08 95       	ret

000033ac <__mulsi3>:
    33ac:	db 01       	movw	r26, r22
    33ae:	8f 93       	push	r24
    33b0:	9f 93       	push	r25
    33b2:	0e 94 e6 19 	call	0x33cc	; 0x33cc <__muluhisi3>
    33b6:	bf 91       	pop	r27
    33b8:	af 91       	pop	r26
    33ba:	a2 9f       	mul	r26, r18
    33bc:	80 0d       	add	r24, r0
    33be:	91 1d       	adc	r25, r1
    33c0:	a3 9f       	mul	r26, r19
    33c2:	90 0d       	add	r25, r0
    33c4:	b2 9f       	mul	r27, r18
    33c6:	90 0d       	add	r25, r0
    33c8:	11 24       	eor	r1, r1
    33ca:	08 95       	ret

000033cc <__muluhisi3>:
    33cc:	0e 94 22 1a 	call	0x3444	; 0x3444 <__umulhisi3>
    33d0:	a5 9f       	mul	r26, r21
    33d2:	90 0d       	add	r25, r0
    33d4:	b4 9f       	mul	r27, r20
    33d6:	90 0d       	add	r25, r0
    33d8:	a4 9f       	mul	r26, r20
    33da:	80 0d       	add	r24, r0
    33dc:	91 1d       	adc	r25, r1
    33de:	11 24       	eor	r1, r1
    33e0:	08 95       	ret

000033e2 <__prologue_saves__>:
    33e2:	2f 92       	push	r2
    33e4:	3f 92       	push	r3
    33e6:	4f 92       	push	r4
    33e8:	5f 92       	push	r5
    33ea:	6f 92       	push	r6
    33ec:	7f 92       	push	r7
    33ee:	8f 92       	push	r8
    33f0:	9f 92       	push	r9
    33f2:	af 92       	push	r10
    33f4:	bf 92       	push	r11
    33f6:	cf 92       	push	r12
    33f8:	df 92       	push	r13
    33fa:	ef 92       	push	r14
    33fc:	ff 92       	push	r15
    33fe:	0f 93       	push	r16
    3400:	1f 93       	push	r17
    3402:	cf 93       	push	r28
    3404:	df 93       	push	r29
    3406:	cd b7       	in	r28, 0x3d	; 61
    3408:	de b7       	in	r29, 0x3e	; 62
    340a:	ca 1b       	sub	r28, r26
    340c:	db 0b       	sbc	r29, r27
    340e:	cd bf       	out	0x3d, r28	; 61
    3410:	de bf       	out	0x3e, r29	; 62
    3412:	09 94       	ijmp

00003414 <__epilogue_restores__>:
    3414:	2a 88       	ldd	r2, Y+18	; 0x12
    3416:	39 88       	ldd	r3, Y+17	; 0x11
    3418:	48 88       	ldd	r4, Y+16	; 0x10
    341a:	5f 84       	ldd	r5, Y+15	; 0x0f
    341c:	6e 84       	ldd	r6, Y+14	; 0x0e
    341e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3420:	8c 84       	ldd	r8, Y+12	; 0x0c
    3422:	9b 84       	ldd	r9, Y+11	; 0x0b
    3424:	aa 84       	ldd	r10, Y+10	; 0x0a
    3426:	b9 84       	ldd	r11, Y+9	; 0x09
    3428:	c8 84       	ldd	r12, Y+8	; 0x08
    342a:	df 80       	ldd	r13, Y+7	; 0x07
    342c:	ee 80       	ldd	r14, Y+6	; 0x06
    342e:	fd 80       	ldd	r15, Y+5	; 0x05
    3430:	0c 81       	ldd	r16, Y+4	; 0x04
    3432:	1b 81       	ldd	r17, Y+3	; 0x03
    3434:	aa 81       	ldd	r26, Y+2	; 0x02
    3436:	b9 81       	ldd	r27, Y+1	; 0x01
    3438:	ce 0f       	add	r28, r30
    343a:	d1 1d       	adc	r29, r1
    343c:	cd bf       	out	0x3d, r28	; 61
    343e:	de bf       	out	0x3e, r29	; 62
    3440:	ed 01       	movw	r28, r26
    3442:	08 95       	ret

00003444 <__umulhisi3>:
    3444:	a2 9f       	mul	r26, r18
    3446:	b0 01       	movw	r22, r0
    3448:	b3 9f       	mul	r27, r19
    344a:	c0 01       	movw	r24, r0
    344c:	a3 9f       	mul	r26, r19
    344e:	70 0d       	add	r23, r0
    3450:	81 1d       	adc	r24, r1
    3452:	11 24       	eor	r1, r1
    3454:	91 1d       	adc	r25, r1
    3456:	b2 9f       	mul	r27, r18
    3458:	70 0d       	add	r23, r0
    345a:	81 1d       	adc	r24, r1
    345c:	11 24       	eor	r1, r1
    345e:	91 1d       	adc	r25, r1
    3460:	08 95       	ret

00003462 <_exit>:
    3462:	f8 94       	cli

00003464 <__stop_program>:
    3464:	ff cf       	rjmp	.-2      	; 0x3464 <__stop_program>
