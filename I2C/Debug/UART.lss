
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000030a1  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002fce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000003f  0000afce  00002fce  00003062  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000003bf  00803800  00803800  000030a1  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  000030a1  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003100  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000338  00000000  00000000  00003140  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005367  00000000  00000000  00003478  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002805  00000000  00000000  000087df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001e5a  00000000  00000000  0000afe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000009f8  00000000  00000000  0000ce40  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001751  00000000  00000000  0000d838  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002b1f  00000000  00000000  0000ef89  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c8  00000000  00000000  00011aa8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b0 02 	jmp	0x560	; 0x560 <__ctors_end>
       4:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
       8:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
       c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      10:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      14:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      18:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      1c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      20:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      24:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      28:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      2c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      30:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      34:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__vector_13>
      38:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      3c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      40:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      44:	0c 94 30 10 	jmp	0x2060	; 0x2060 <__vector_17>
      48:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      4c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      50:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      54:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      58:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      5c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      60:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      64:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      68:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      6c:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      70:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>
      74:	0c 94 c2 02 	jmp	0x584	; 0x584 <__bad_interrupt>

00000078 <__trampolines_end>:
      78:	4e 41       	sbci	r20, 0x1E	; 30
      7a:	4e 49       	Address 0x0000007a is out of bounds.
.word	0xffff	; ????

0000007b <pstr_inity>:
      7b:	49 4e 49 54 59                                      INITY

00000080 <pstr_inf>:
      80:	49 4e 46                                            INF

00000083 <pwr_m10>:
      83:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      93:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000009b <pwr_p10>:
      9b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      ab:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000000b3 <__c.4392>:
      b3:	7c 0a 20 20 20 00                                   |.   .

000000b9 <__c.4384>:
      b9:	2e 00                                               ..

000000bb <__c.4382>:
      bb:	25 63 00                                            %c.

000000be <__c.4380>:
      be:	20 20 7c 00                                           |.

000000c2 <__c.4378>:
      c2:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

000000cc <__c.4376>:
      cc:	3e 3e 20 6d 64 70 20 61 64 64 72 20 5b 73 69 7a     >> mdp addr [siz
      dc:	65 5d 20 0a 00                                      e] ..

000000e1 <__c.4359>:
      e1:	7c 0a 20 20 20 00                                   |.   .

000000e7 <__c.4351>:
      e7:	2e 00                                               ..

000000e9 <__c.4349>:
      e9:	25 63 00                                            %c.

000000ec <__c.4347>:
      ec:	20 20 7c 00                                           |.

000000f0 <__c.4345>:
      f0:	20 30 78 25 30 38 58 00                              0x%08X.

000000f8 <__c.4343>:
      f8:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

00000102 <__c.4341>:
     102:	3e 3e 20 6d 64 20 61 64 64 72 20 5b 73 69 7a 65     >> md addr [size
     112:	5d 20 0a 00                                         ] ..

00000116 <__c.4327>:
     116:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     126:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     -------------...

00000136 <__c.4322>:
     136:	0d 0a 00                                            ...

00000139 <__c.4319>:
     139:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 20 63 6d 64 20 6c     ---------- cmd l
     149:	69 73 74 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     ist ---------...

00000159 <__c.4317>:
     159:	0d 0a 00                                            ...

0000015c <__c.4170>:
     15c:	63 6c 69 23 20 00                                   cli# .

00000162 <__c.4168>:
     162:	0a 0d 00                                            ...

00000165 <__c.4240>:
     165:	0d 0a 00                                            ...

00000168 <__c.4217>:
     168:	1b 5b 34 68 25 63 1b 5b 34 6c 00                    .[4h%c.[4l.

00000173 <__c.4209>:
     173:	08 20 08 1b 5b 31 50 00                             . ..[1P.

0000017b <__c.4201>:
     17b:	1b 5b 31 50 00                                      .[1P.

00000180 <__c.4175>:
     180:	69 6e 66 6f 20 66 75 73 65 0a 00                    info fuse..

0000018b <__c.4173>:
     18b:	20 20 20 20 20 41 50 50 45 4e 44 20 20 20 20 20          APPEND     
     19b:	09 20 3a 20 25 64 20 4b 42 0a 00                    . : %d KB..

000001a6 <__c.4171>:
     1a6:	0a 46 55 53 45 2e 41 50 50 45 4e 44 20 20 20 09     .FUSE.APPEND   .
     1b6:	20 3a 20 30 78 25 30 38 58 0a 00                     : 0x%08X..

000001c1 <__c.4169>:
     1c1:	20 20 20 20 20 42 4f 4f 54 45 4e 44 20 20 20 20          BOOTEND    
     1d1:	20 09 20 3a 20 25 64 20 4b 42 0a 00                  . : %d KB..

000001dd <__c.4167>:
     1dd:	0a 46 55 53 45 2e 42 4f 4f 54 45 4e 44 20 20 20     .FUSE.BOOTEND   
     1ed:	09 20 3a 20 30 78 25 30 38 58 0a 00                 . : 0x%08X..

000001f9 <__c.4165>:
     1f9:	0a 00                                               ..

000001fb <__c.4163>:
     1fb:	20 20 20 20 20 53 55 54 20 20 20 20 20 20 20 20          SUT        
     20b:	20 20 09 20 3a 20 00                                  . : .

00000212 <__c.4161>:
     212:	36 34 20 6d 73 00                                   64 ms.

00000218 <__c.4159>:
     218:	33 32 20 6d 73 00                                   32 ms.

0000021e <__c.4157>:
     21e:	31 36 20 6d 73 00                                   16 ms.

00000224 <__c.4155>:
     224:	38 20 6d 73 00                                      8 ms.

00000229 <__c.4153>:
     229:	34 20 6d 73 00                                      4 ms.

0000022e <__c.4151>:
     22e:	32 20 6d 73 00                                      2 ms.

00000233 <__c.4149>:
     233:	31 20 6d 73 00                                      1 ms.

00000238 <__c.4147>:
     238:	30 20 6d 73 00                                      0 ms.

0000023d <__c.4144>:
     23d:	0a 46 55 53 45 2e 53 59 53 43 46 47 31 20 20 20     .FUSE.SYSCFG1   
     24d:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

0000025a <__c.4142>:
     25a:	0a 00                                               ..

0000025c <__c.4140>:
     25c:	20 20 20 20 20 45 45 53 41 56 45 20 20 20 20 20          EESAVE     
     26c:	09 20 3a 20 00                                      . : .

00000271 <__c.4138>:
     271:	0a 00                                               ..

00000273 <__c.4136>:
     273:	20 20 20 20 20 52 53 54 50 49 4e 43 46 47 20 20          RSTPINCFG  
     283:	09 20 3a 20 00                                      . : .

00000288 <__c.4134>:
     288:	45 45 50 52 4f 4d 20 6e 6f 74 20 65 72 61 73 65     EEPROM not erase
     298:	64 20 75 6e 64 65 72 20 43 68 69 70 20 45 72 61     d under Chip Era
     2a8:	73 65 00                                            se.

000002ab <__c.4132>:
     2ab:	45 45 50 52 4f 4d 20 65 72 61 73 65 64 20 64 75     EEPROM erased du
     2bb:	72 69 6e 67 20 43 68 69 70 20 45 72 61 73 65 00     ring Chip Erase.

000002cb <__c.4129>:
     2cb:	2d 20 00                                            - .

000002ce <__c.4127>:
     2ce:	52 45 53 45 54 20 45 78 74 65 72 6e 61 6c 20 52     RESET External R
     2de:	65 73 65 74 20 65 6e 61 62 6c 65 64 20 6f 6e 20     eset enabled on 
     2ee:	50 46 36 00                                         PF6.

000002f2 <__c.4125>:
     2f2:	2d 20 00                                            - .

000002f5 <__c.4123>:
     2f5:	49 4e 50 55 54 20 50 46 36 20 63 6f 6e 66 69 67     INPUT PF6 config
     305:	75 72 65 64 20 61 73 20 67 65 6e 65 72 61 6c 20     ured as general 
     315:	69 6e 70 75 74 20 70 69 6e 00                       input pin.

0000031f <__c.4120>:
     31f:	0a 46 55 53 45 2e 53 59 53 43 46 47 30 20 20 20     .FUSE.SYSCFG0   
     32f:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

0000033c <__c.4118>:
     33c:	0a 00                                               ..

0000033e <__c.4116>:
     33e:	20 20 20 20 20 43 4c 4b 53 45 4c 20 20 20 20 20          CLKSEL     
     34e:	09 20 3a 20 00                                      . : .

00000353 <__c.4114>:
     353:	4f 53 43 33 32 4b 00                                OSC32K.

0000035a <__c.4112>:
     35a:	4f 53 43 48 46 00                                   OSCHF.

00000360 <__c.4109>:
     360:	0a 46 55 53 45 2e 4f 53 43 43 46 47 20 20 20 20     .FUSE.OSCCFG    
     370:	20 09 20 3a 20 30 78 25 30 38 58 0a 00               . : 0x%08X..

0000037d <__c.4107>:
     37d:	0a 00                                               ..

0000037f <__c.4105>:
     37f:	20 20 20 20 20 53 4c 45 45 50 20 20 20 20 20 20          SLEEP      
     38f:	20 09 20 3a 20 00                                    . : .

00000395 <__c.4103>:
     395:	0a 00                                               ..

00000397 <__c.4101>:
     397:	20 20 20 20 20 41 43 54 49 56 45 20 20 20 20 20          ACTIVE     
     3a7:	20 09 20 3a 20 00                                    . : .

000003ad <__c.4099>:
     3ad:	0a 00                                               ..

000003af <__c.4097>:
     3af:	20 20 20 20 20 53 41 4d 50 46 52 45 51 20 20 20          SAMPFREQ   
     3bf:	20 09 20 3a 20 00                                    . : .

000003c5 <__c.4095>:
     3c5:	0a 00                                               ..

000003c7 <__c.4093>:
     3c7:	20 20 20 20 20 4c 56 4c 20 20 20 20 20 20 20 20          LVL        
     3d7:	20 09 20 3a 20 00                                    . : .

000003dd <__c.4091>:
     3dd:	52 65 73 65 72 76 65 64 00                          Reserved.

000003e6 <__c.4089>:
     3e6:	53 41 4d 50 4c 45 00                                SAMPLE.

000003ed <__c.4087>:
     3ed:	45 4e 41 42 4c 45 00                                ENABLE.

000003f4 <__c.4085>:
     3f4:	44 49 53 41 42 4c 45 00                             DISABLE.

000003fc <__c.4082>:
     3fc:	45 4e 41 42 4c 45 57 41 49 54 00                    ENABLEWAIT.

00000407 <__c.4080>:
     407:	53 41 4d 50 4c 45 00                                SAMPLE.

0000040e <__c.4078>:
     40e:	45 4e 41 42 4c 45 00                                ENABLE.

00000415 <__c.4076>:
     415:	44 49 53 41 42 4c 45 00                             DISABLE.

0000041d <__c.4073>:
     41d:	33 32 48 7a 00                                      32Hz.

00000422 <__c.4071>:
     422:	31 32 38 48 7a 00                                   128Hz.

00000428 <__c.4068>:
     428:	32 2e 38 35 56 00                                   2.85V.

0000042e <__c.4066>:
     42e:	32 2e 37 30 56 00                                   2.70V.

00000434 <__c.4064>:
     434:	32 2e 34 35 56 00                                   2.45V.

0000043a <__c.4062>:
     43a:	31 2e 39 56 00                                      1.9V.

0000043f <__c.4059>:
     43f:	0a 46 55 53 45 2e 42 4f 44 43 46 47 20 20 20 20     .FUSE.BODCFG    
     44f:	20 20 09 20 3a 20 30 78 25 30 38 58 0a 00             . : 0x%08X..

0000045d <__c.4056>:
     45d:	20 20 20 20 20 50 45 52 49 4f 44 5b 33 3a 30 5d          PERIOD[3:0]
     46d:	20 09 20 3a 20 30 78 25 58 0a 00                     . : 0x%X..

00000478 <__c.4054>:
     478:	20 20 20 20 20 57 49 4e 44 4f 57 5b 33 3a 30 5d          WINDOW[3:0]
     488:	20 09 20 3a 20 30 78 25 58 0a 00                     . : 0x%X..

00000493 <__c.4052>:
     493:	0a 46 55 53 45 2e 57 44 54 43 46 47 20 20 20 20     .FUSE.WDTCFG    
     4a3:	20 20 09 20 3a 20 30 78 25 30 38 58 0a 00             . : 0x%08X..

000004b1 <pin_tbl>:
     4b1:	40 04 44 04 00 00                                   @.D...

000004b7 <__c.4089>:
     4b7:	52 65 73 65 74 46 72 6f 6d 20 3a 20 45 74 63 0d     ResetFrom : Etc.
     4c7:	0a 00                                               ..

000004c9 <__c.4087>:
     4c9:	52 65 73 65 74 46 72 6f 6d 20 3a 20 42 6f 44 0d     ResetFrom : BoD.
     4d9:	0a 00                                               ..

000004db <__c.4085>:
     4db:	52 65 73 65 74 46 72 6f 6d 20 3a 20 53 6f 66 74     ResetFrom : Soft
     4eb:	0d 0a 00                                            ...

000004ee <__c.4083>:
     4ee:	52 65 73 65 74 46 72 6f 6d 20 3a 20 57 64 67 0d     ResetFrom : Wdg.
     4fe:	0a 00                                               ..

00000500 <__c.4081>:
     500:	52 65 73 65 74 46 72 6f 6d 20 3a 20 50 69 6e 0d     ResetFrom : Pin.
     510:	0a 00                                               ..

00000512 <__c.4079>:
     512:	52 65 73 65 74 46 72 6f 6d 20 3a 20 50 6f 77 65     ResetFrom : Powe
     522:	72 0d 0a 00                                         r...

00000526 <__c.4077>:
     526:	52 65 73 65 74 4d 6f 64 65 20 3a 20 30 78 25 30     ResetMode : 0x%0
     536:	32 58 0d 0a 00                                      2X...

0000053b <__c.4075>:
     53b:	0a 00                                               ..

0000053d <__c.4113>:
     53d:	72 65 73 65 74 20 62 6f 6f 74 20 30 78 30 30 7e     reset boot 0x00~
     54d:	30 78 46 46 0a 00                                   0xFF..

00000553 <__c.4111>:
     553:	72 65 73 65 74 20 69 6e 66 6f 0a 00 00              reset info...

00000560 <__ctors_end>:
     560:	11 24       	eor	r1, r1
     562:	1f be       	out	0x3f, r1	; 63
     564:	cf ef       	ldi	r28, 0xFF	; 255
     566:	cd bf       	out	0x3d, r28	; 61
     568:	df e3       	ldi	r29, 0x3F	; 63
     56a:	de bf       	out	0x3e, r29	; 62

0000056c <__do_clear_bss>:
     56c:	2b e3       	ldi	r18, 0x3B	; 59
     56e:	a0 e0       	ldi	r26, 0x00	; 0
     570:	b8 e3       	ldi	r27, 0x38	; 56
     572:	01 c0       	rjmp	.+2      	; 0x576 <.do_clear_bss_start>

00000574 <.do_clear_bss_loop>:
     574:	1d 92       	st	X+, r1

00000576 <.do_clear_bss_start>:
     576:	af 3b       	cpi	r26, 0xBF	; 191
     578:	b2 07       	cpc	r27, r18
     57a:	e1 f7       	brne	.-8      	; 0x574 <.do_clear_bss_loop>
     57c:	0e 94 66 10 	call	0x20cc	; 0x20cc <main>
     580:	0c 94 e5 17 	jmp	0x2fca	; 0x2fca <_exit>

00000584 <__bad_interrupt>:
     584:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000588 <memcpy_PF>:
     588:	fa 01       	movw	r30, r20
     58a:	dc 01       	movw	r26, r24
     58c:	02 c0       	rjmp	.+4      	; 0x592 <memcpy_PF+0xa>
     58e:	05 90       	lpm	r0, Z+
     590:	0d 92       	st	X+, r0
     592:	21 50       	subi	r18, 0x01	; 1
     594:	30 40       	sbci	r19, 0x00	; 0
     596:	d8 f7       	brcc	.-10     	; 0x58e <memcpy_PF+0x6>
     598:	08 95       	ret

0000059a <apInit>:



void apInit(void)
{
	cliOpen(_DEF_UART1, 115200);
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	52 ec       	ldi	r21, 0xC2	; 194
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <cliOpen>
     5a8:	08 95       	ret

000005aa <apMain>:
void apMain(void)
{
  uint32_t pre_time;


  pre_time = millis();
     5aa:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
     5ae:	6b 01       	movw	r12, r22
     5b0:	7c 01       	movw	r14, r24
  while(1)
  {
    if(millis() - pre_time >= 200)
     5b2:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
     5b6:	dc 01       	movw	r26, r24
     5b8:	cb 01       	movw	r24, r22
     5ba:	8c 19       	sub	r24, r12
     5bc:	9d 09       	sbc	r25, r13
     5be:	ae 09       	sbc	r26, r14
     5c0:	bf 09       	sbc	r27, r15
     5c2:	88 3c       	cpi	r24, 0xC8	; 200
     5c4:	91 05       	cpc	r25, r1
     5c6:	a1 05       	cpc	r26, r1
     5c8:	b1 05       	cpc	r27, r1
     5ca:	38 f0       	brcs	.+14     	; 0x5da <apMain+0x30>
    {
      pre_time = millis();
     5cc:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
     5d0:	6b 01       	movw	r12, r22
     5d2:	7c 01       	movw	r14, r24
  	  ledToggle(_DEF_LED1);
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <ledToggle>
    }
		
		cliMain();
     5da:	0e 94 c5 08 	call	0x118a	; 0x118a <cliMain>
  }
     5de:	e9 cf       	rjmp	.-46     	; 0x5b2 <apMain+0x8>

000005e0 <__vector_13>:

static volatile uint32_t ms_cnt = 0;


ISR(TCB0_INT_vect, ISR_NOBLOCK)
{
     5e0:	78 94       	sei
     5e2:	1f 92       	push	r1
     5e4:	0f 92       	push	r0
     5e6:	0f b6       	in	r0, 0x3f	; 63
     5e8:	0f 92       	push	r0
     5ea:	11 24       	eor	r1, r1
     5ec:	8f 93       	push	r24
     5ee:	9f 93       	push	r25
     5f0:	af 93       	push	r26
     5f2:	bf 93       	push	r27
  ms_cnt++;
     5f4:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
     5f8:	90 91 01 38 	lds	r25, 0x3801	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     5fc:	a0 91 02 38 	lds	r26, 0x3802	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     600:	b0 91 03 38 	lds	r27, 0x3803	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
     604:	01 96       	adiw	r24, 0x01	; 1
     606:	a1 1d       	adc	r26, r1
     608:	b1 1d       	adc	r27, r1
     60a:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
     60e:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     612:	a0 93 02 38 	sts	0x3802, r26	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     616:	b0 93 03 38 	sts	0x3803, r27	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
  TCB0.INTFLAGS = (1 << TCB_CAPT_bp);
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <__RODATA_PM_OFFSET__+0x7f8a86>
}
     620:	bf 91       	pop	r27
     622:	af 91       	pop	r26
     624:	9f 91       	pop	r25
     626:	8f 91       	pop	r24
     628:	0f 90       	pop	r0
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	0f 90       	pop	r0
     62e:	1f 90       	pop	r1
     630:	18 95       	reti

00000632 <bspInit>:



void bspInit(void)
{
	CCP = CCP_IOREG_gc;
     632:	88 ed       	ldi	r24, 0xD8	; 216
     634:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLA = (0 << CLKCTRL_CLKSEL_gp);
     636:	e0 e6       	ldi	r30, 0x60	; 96
     638:	f0 e0       	ldi	r31, 0x00	; 0
     63a:	10 82       	st	Z, r1

  CCP = CCP_IOREG_gc;
     63c:	84 bf       	out	0x34, r24	; 52
  CLKCTRL.MCLKCTRLB = (0 << CLKCTRL_PEN_bp);
     63e:	11 82       	std	Z+1, r1	; 0x01

  TCB0.CTRLA   = (0x00 << TCB_CLKSEL_gp);
     640:	e0 e8       	ldi	r30, 0x80	; 128
     642:	fa e0       	ldi	r31, 0x0A	; 10
     644:	10 82       	st	Z, r1
  TCB0.CTRLB   = (0x00 << TCB_CNTMODE_gp);
     646:	11 82       	std	Z+1, r1	; 0x01
  TCB0.INTCTRL = (1 << TCB_CAPT_bp);
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	85 83       	std	Z+5, r24	; 0x05
  TCB0.CCMP    = (1000 * (F_CPU/1000000)) - 1;
     64c:	8f e1       	ldi	r24, 0x1F	; 31
     64e:	9e e4       	ldi	r25, 0x4E	; 78
     650:	84 87       	std	Z+12, r24	; 0x0c
     652:	95 87       	std	Z+13, r25	; 0x0d
  TCB0.CTRLA  |= (1 << TCB_ENABLE_bp);
     654:	80 81       	ld	r24, Z
     656:	81 60       	ori	r24, 0x01	; 1
     658:	80 83       	st	Z, r24

  sei();
     65a:	78 94       	sei
     65c:	08 95       	ret

0000065e <millis>:
}

uint32_t millis(void)
{
	uint32_t ret;
  uint8_t old_sreg = SREG;
     65e:	2f b7       	in	r18, 0x3f	; 63
 

  cli();
     660:	f8 94       	cli
  ret = ms_cnt;
     662:	60 91 00 38 	lds	r22, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
     666:	70 91 01 38 	lds	r23, 0x3801	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
     66a:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     66e:	90 91 03 38 	lds	r25, 0x3803	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
  SREG = old_sreg;
     672:	2f bf       	out	0x3f, r18	; 63
	
	return ret;
}
     674:	08 95       	ret

00000676 <delay>:
  sei();
}


void delay(uint32_t ms)
{
     676:	8f 92       	push	r8
     678:	9f 92       	push	r9
     67a:	af 92       	push	r10
     67c:	bf 92       	push	r11
     67e:	cf 92       	push	r12
     680:	df 92       	push	r13
     682:	ef 92       	push	r14
     684:	ff 92       	push	r15
     686:	4b 01       	movw	r8, r22
     688:	5c 01       	movw	r10, r24
	uint32_t pre_time = millis();
     68a:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
     68e:	6b 01       	movw	r12, r22
     690:	7c 01       	movw	r14, r24
	while(millis() - pre_time < ms)
     692:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
     696:	dc 01       	movw	r26, r24
     698:	cb 01       	movw	r24, r22
     69a:	8c 19       	sub	r24, r12
     69c:	9d 09       	sbc	r25, r13
     69e:	ae 09       	sbc	r26, r14
     6a0:	bf 09       	sbc	r27, r15
     6a2:	88 15       	cp	r24, r8
     6a4:	99 05       	cpc	r25, r9
     6a6:	aa 05       	cpc	r26, r10
     6a8:	bb 05       	cpc	r27, r11
     6aa:	98 f3       	brcs	.-26     	; 0x692 <delay+0x1c>
	{

	}
}
     6ac:	ff 90       	pop	r15
     6ae:	ef 90       	pop	r14
     6b0:	df 90       	pop	r13
     6b2:	cf 90       	pop	r12
     6b4:	bf 90       	pop	r11
     6b6:	af 90       	pop	r10
     6b8:	9f 90       	pop	r9
     6ba:	8f 90       	pop	r8
     6bc:	08 95       	ret

000006be <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     6be:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in  	= 0;
     6c0:	10 82       	st	Z, r1
     6c2:	11 82       	std	Z+1, r1	; 0x01
     6c4:	12 82       	std	Z+2, r1	; 0x02
     6c6:	13 82       	std	Z+3, r1	; 0x03
	p_node->out 	= 0;
     6c8:	14 82       	std	Z+4, r1	; 0x04
     6ca:	15 82       	std	Z+5, r1	; 0x05
     6cc:	16 82       	std	Z+6, r1	; 0x06
     6ce:	17 82       	std	Z+7, r1	; 0x07
	p_node->len 	= length;
     6d0:	20 87       	std	Z+8, r18	; 0x08
     6d2:	31 87       	std	Z+9, r19	; 0x09
     6d4:	42 87       	std	Z+10, r20	; 0x0a
     6d6:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     6d8:	64 87       	std	Z+12, r22	; 0x0c
     6da:	75 87       	std	Z+13, r23	; 0x0d

	return ret;
}
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	08 95       	ret

000006e0 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     6e0:	4f 92       	push	r4
     6e2:	5f 92       	push	r5
     6e4:	6f 92       	push	r6
     6e6:	7f 92       	push	r7
     6e8:	af 92       	push	r10
     6ea:	bf 92       	push	r11
     6ec:	cf 92       	push	r12
     6ee:	df 92       	push	r13
     6f0:	ef 92       	push	r14
     6f2:	ff 92       	push	r15
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	5b 01       	movw	r10, r22
     700:	29 01       	movw	r4, r18
     702:	3a 01       	movw	r6, r20
	bool ret = true;
	uint32_t next_in;

	for(int i=0; i<length; i++)
     704:	00 e0       	ldi	r16, 0x00	; 0
     706:	10 e0       	ldi	r17, 0x00	; 0
     708:	2c c0       	rjmp	.+88     	; 0x762 <qbufferWrite+0x82>
	{
		next_in = (p_node->in + 1) % p_node->len;
     70a:	c8 80       	ld	r12, Y
     70c:	d9 80       	ldd	r13, Y+1	; 0x01
     70e:	ea 80       	ldd	r14, Y+2	; 0x02
     710:	fb 80       	ldd	r15, Y+3	; 0x03
     712:	c7 01       	movw	r24, r14
     714:	b6 01       	movw	r22, r12
     716:	6f 5f       	subi	r22, 0xFF	; 255
     718:	7f 4f       	sbci	r23, 0xFF	; 255
     71a:	8f 4f       	sbci	r24, 0xFF	; 255
     71c:	9f 4f       	sbci	r25, 0xFF	; 255
     71e:	28 85       	ldd	r18, Y+8	; 0x08
     720:	39 85       	ldd	r19, Y+9	; 0x09
     722:	4a 85       	ldd	r20, Y+10	; 0x0a
     724:	5b 85       	ldd	r21, Y+11	; 0x0b
     726:	0e 94 83 10 	call	0x2106	; 0x2106 <__udivmodsi4>

		if(next_in != p_node->out)
     72a:	2c 81       	ldd	r18, Y+4	; 0x04
     72c:	3d 81       	ldd	r19, Y+5	; 0x05
     72e:	4e 81       	ldd	r20, Y+6	; 0x06
     730:	5f 81       	ldd	r21, Y+7	; 0x07
     732:	62 17       	cp	r22, r18
     734:	73 07       	cpc	r23, r19
     736:	84 07       	cpc	r24, r20
     738:	95 07       	cpc	r25, r21
     73a:	f9 f0       	breq	.+62     	; 0x77a <qbufferWrite+0x9a>
		{
			if(p_node->p_buf != NULL)
     73c:	2c 85       	ldd	r18, Y+12	; 0x0c
     73e:	3d 85       	ldd	r19, Y+13	; 0x0d
     740:	21 15       	cp	r18, r1
     742:	31 05       	cpc	r19, r1
     744:	41 f0       	breq	.+16     	; 0x756 <qbufferWrite+0x76>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     746:	d9 01       	movw	r26, r18
     748:	ac 0d       	add	r26, r12
     74a:	bd 1d       	adc	r27, r13
     74c:	f5 01       	movw	r30, r10
     74e:	e0 0f       	add	r30, r16
     750:	f1 1f       	adc	r31, r17
     752:	20 81       	ld	r18, Z
     754:	2c 93       	st	X, r18
			}
			p_node->in = next_in;
     756:	68 83       	st	Y, r22
     758:	79 83       	std	Y+1, r23	; 0x01
     75a:	8a 83       	std	Y+2, r24	; 0x02
     75c:	9b 83       	std	Y+3, r25	; 0x03
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
	uint32_t next_in;

	for(int i=0; i<length; i++)
     75e:	0f 5f       	subi	r16, 0xFF	; 255
     760:	1f 4f       	sbci	r17, 0xFF	; 255
     762:	c8 01       	movw	r24, r16
     764:	01 2e       	mov	r0, r17
     766:	00 0c       	add	r0, r0
     768:	aa 0b       	sbc	r26, r26
     76a:	bb 0b       	sbc	r27, r27
     76c:	84 15       	cp	r24, r4
     76e:	95 05       	cpc	r25, r5
     770:	a6 05       	cpc	r26, r6
     772:	b7 05       	cpc	r27, r7
     774:	50 f2       	brcs	.-108    	; 0x70a <qbufferWrite+0x2a>
	return ret;
}

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	01 c0       	rjmp	.+2      	; 0x77c <qbufferWrite+0x9c>
			}
			p_node->in = next_in;
		}
		else
		{
			ret = false;
     77a:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
     786:	ef 90       	pop	r14
     788:	df 90       	pop	r13
     78a:	cf 90       	pop	r12
     78c:	bf 90       	pop	r11
     78e:	af 90       	pop	r10
     790:	7f 90       	pop	r7
     792:	6f 90       	pop	r6
     794:	5f 90       	pop	r5
     796:	4f 90       	pop	r4
     798:	08 95       	ret

0000079a <qbufferRead>:

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     79a:	4f 92       	push	r4
     79c:	5f 92       	push	r5
     79e:	6f 92       	push	r6
     7a0:	7f 92       	push	r7
     7a2:	8f 92       	push	r8
     7a4:	9f 92       	push	r9
     7a6:	af 92       	push	r10
     7a8:	bf 92       	push	r11
     7aa:	ef 92       	push	r14
     7ac:	ff 92       	push	r15
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	ec 01       	movw	r28, r24
     7b8:	7b 01       	movw	r14, r22
     7ba:	49 01       	movw	r8, r18
     7bc:	5a 01       	movw	r10, r20
	bool ret = true;

	for(int i=0; i<length; i++)
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	10 e0       	ldi	r17, 0x00	; 0
     7c2:	30 c0       	rjmp	.+96     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
	{
		if(p_node->p_buf != NULL)
     7c4:	2c 85       	ldd	r18, Y+12	; 0x0c
     7c6:	3d 85       	ldd	r19, Y+13	; 0x0d
     7c8:	21 15       	cp	r18, r1
     7ca:	31 05       	cpc	r19, r1
     7cc:	61 f0       	breq	.+24     	; 0x7e6 <qbufferRead+0x4c>
		{
			p_data[i] = p_node->p_buf[p_node->out];
     7ce:	8c 81       	ldd	r24, Y+4	; 0x04
     7d0:	9d 81       	ldd	r25, Y+5	; 0x05
     7d2:	ae 81       	ldd	r26, Y+6	; 0x06
     7d4:	bf 81       	ldd	r27, Y+7	; 0x07
     7d6:	f9 01       	movw	r30, r18
     7d8:	e8 0f       	add	r30, r24
     7da:	f9 1f       	adc	r31, r25
     7dc:	80 81       	ld	r24, Z
     7de:	f7 01       	movw	r30, r14
     7e0:	e0 0f       	add	r30, r16
     7e2:	f1 1f       	adc	r31, r17
     7e4:	80 83       	st	Z, r24
		}

		if(p_node->out != p_node->in)
     7e6:	8c 81       	ldd	r24, Y+4	; 0x04
     7e8:	9d 81       	ldd	r25, Y+5	; 0x05
     7ea:	ae 81       	ldd	r26, Y+6	; 0x06
     7ec:	bf 81       	ldd	r27, Y+7	; 0x07
     7ee:	48 80       	ld	r4, Y
     7f0:	59 80       	ldd	r5, Y+1	; 0x01
     7f2:	6a 80       	ldd	r6, Y+2	; 0x02
     7f4:	7b 80       	ldd	r7, Y+3	; 0x03
     7f6:	84 15       	cp	r24, r4
     7f8:	95 05       	cpc	r25, r5
     7fa:	a6 05       	cpc	r26, r6
     7fc:	b7 05       	cpc	r27, r7
     7fe:	f1 f0       	breq	.+60     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
     800:	bc 01       	movw	r22, r24
     802:	cd 01       	movw	r24, r26
     804:	6f 5f       	subi	r22, 0xFF	; 255
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	8f 4f       	sbci	r24, 0xFF	; 255
     80a:	9f 4f       	sbci	r25, 0xFF	; 255
     80c:	28 85       	ldd	r18, Y+8	; 0x08
     80e:	39 85       	ldd	r19, Y+9	; 0x09
     810:	4a 85       	ldd	r20, Y+10	; 0x0a
     812:	5b 85       	ldd	r21, Y+11	; 0x0b
     814:	0e 94 83 10 	call	0x2106	; 0x2106 <__udivmodsi4>
     818:	6c 83       	std	Y+4, r22	; 0x04
     81a:	7d 83       	std	Y+5, r23	; 0x05
     81c:	8e 83       	std	Y+6, r24	; 0x06
     81e:	9f 83       	std	Y+7, r25	; 0x07

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;

	for(int i=0; i<length; i++)
     820:	0f 5f       	subi	r16, 0xFF	; 255
     822:	1f 4f       	sbci	r17, 0xFF	; 255
     824:	c8 01       	movw	r24, r16
     826:	01 2e       	mov	r0, r17
     828:	00 0c       	add	r0, r0
     82a:	aa 0b       	sbc	r26, r26
     82c:	bb 0b       	sbc	r27, r27
     82e:	88 15       	cp	r24, r8
     830:	99 05       	cpc	r25, r9
     832:	aa 05       	cpc	r26, r10
     834:	bb 05       	cpc	r27, r11
     836:	30 f2       	brcs	.-116    	; 0x7c4 <qbufferRead+0x2a>
	return ret;
}

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     838:	81 e0       	ldi	r24, 0x01	; 1
     83a:	01 c0       	rjmp	.+2      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
		}
		else
		{
			ret = false;
     83c:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	1f 91       	pop	r17
     844:	0f 91       	pop	r16
     846:	ff 90       	pop	r15
     848:	ef 90       	pop	r14
     84a:	bf 90       	pop	r11
     84c:	af 90       	pop	r10
     84e:	9f 90       	pop	r9
     850:	8f 90       	pop	r8
     852:	7f 90       	pop	r7
     854:	6f 90       	pop	r6
     856:	5f 90       	pop	r5
     858:	4f 90       	pop	r4
     85a:	08 95       	ret

0000085c <qbufferAvailable>:

uint32_t qbufferAvailable(qbuffer_t *p_node)
{
     85c:	0f 93       	push	r16
     85e:	1f 93       	push	r17
     860:	fc 01       	movw	r30, r24
	uint32_t ret;

	ret = (p_node->in - p_node->out) % p_node->len;
     862:	80 81       	ld	r24, Z
     864:	91 81       	ldd	r25, Z+1	; 0x01
     866:	a2 81       	ldd	r26, Z+2	; 0x02
     868:	b3 81       	ldd	r27, Z+3	; 0x03
     86a:	04 81       	ldd	r16, Z+4	; 0x04
     86c:	15 81       	ldd	r17, Z+5	; 0x05
     86e:	26 81       	ldd	r18, Z+6	; 0x06
     870:	37 81       	ldd	r19, Z+7	; 0x07
     872:	bc 01       	movw	r22, r24
     874:	cd 01       	movw	r24, r26
     876:	60 1b       	sub	r22, r16
     878:	71 0b       	sbc	r23, r17
     87a:	82 0b       	sbc	r24, r18
     87c:	93 0b       	sbc	r25, r19
     87e:	20 85       	ldd	r18, Z+8	; 0x08
     880:	31 85       	ldd	r19, Z+9	; 0x09
     882:	42 85       	ldd	r20, Z+10	; 0x0a
     884:	53 85       	ldd	r21, Z+11	; 0x0b
     886:	0e 94 83 10 	call	0x2106	; 0x2106 <__udivmodsi4>

	return ret;
}
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	08 95       	ret

00000890 <cliLineClean>:
	{
		ret = false;
	}

	return ret;
}
     890:	fc 01       	movw	r30, r24
     892:	ef 5a       	subi	r30, 0xAF	; 175
     894:	fd 4f       	sbci	r31, 0xFD	; 253
     896:	10 82       	st	Z, r1
     898:	31 97       	sbiw	r30, 0x01	; 1
     89a:	10 82       	st	Z, r1
     89c:	31 97       	sbiw	r30, 0x01	; 1
     89e:	2f e2       	ldi	r18, 0x2F	; 47
     8a0:	20 83       	st	Z, r18
     8a2:	f0 97       	sbiw	r30, 0x30	; 48
     8a4:	10 82       	st	Z, r1
     8a6:	08 95       	ret

000008a8 <cliLineAdd>:
     8a8:	fc 01       	movw	r30, r24
     8aa:	ef 5a       	subi	r30, 0xAF	; 175
     8ac:	fe 4f       	sbci	r31, 0xFE	; 254
     8ae:	50 81       	ld	r21, Z
     8b0:	25 2f       	mov	r18, r21
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	43 e3       	ldi	r20, 0x33	; 51
     8b6:	42 9f       	mul	r20, r18
     8b8:	d0 01       	movw	r26, r0
     8ba:	43 9f       	mul	r20, r19
     8bc:	b0 0d       	add	r27, r0
     8be:	11 24       	eor	r1, r1
     8c0:	a8 0f       	add	r26, r24
     8c2:	b9 1f       	adc	r27, r25
     8c4:	ad 5a       	subi	r26, 0xAD	; 173
     8c6:	be 4f       	sbci	r27, 0xFE	; 254
     8c8:	e2 53       	subi	r30, 0x32	; 50
     8ca:	ff 4f       	sbci	r31, 0xFF	; 255
     8cc:	01 90       	ld	r0, Z+
     8ce:	0d 92       	st	X+, r0
     8d0:	4a 95       	dec	r20
     8d2:	e1 f7       	brne	.-8      	; 0x8cc <cliLineAdd+0x24>
     8d4:	fc 01       	movw	r30, r24
     8d6:	ee 5a       	subi	r30, 0xAE	; 174
     8d8:	fe 4f       	sbci	r31, 0xFE	; 254
     8da:	40 81       	ld	r20, Z
     8dc:	44 30       	cpi	r20, 0x04	; 4
     8de:	10 f4       	brcc	.+4      	; 0x8e4 <cliLineAdd+0x3c>
     8e0:	4f 5f       	subi	r20, 0xFF	; 255
     8e2:	40 83       	st	Z, r20
     8e4:	fc 01       	movw	r30, r24
     8e6:	e0 5b       	subi	r30, 0xB0	; 176
     8e8:	fe 4f       	sbci	r31, 0xFE	; 254
     8ea:	50 83       	st	Z, r21
     8ec:	2f 5f       	subi	r18, 0xFF	; 255
     8ee:	3f 4f       	sbci	r19, 0xFF	; 255
     8f0:	23 70       	andi	r18, 0x03	; 3
     8f2:	30 78       	andi	r19, 0x80	; 128
     8f4:	33 23       	and	r19, r19
     8f6:	34 f4       	brge	.+12     	; 0x904 <cliLineAdd+0x5c>
     8f8:	21 50       	subi	r18, 0x01	; 1
     8fa:	31 09       	sbc	r19, r1
     8fc:	2c 6f       	ori	r18, 0xFC	; 252
     8fe:	3f 6f       	ori	r19, 0xFF	; 255
     900:	2f 5f       	subi	r18, 0xFF	; 255
     902:	3f 4f       	sbci	r19, 0xFF	; 255
     904:	fc 01       	movw	r30, r24
     906:	ef 5a       	subi	r30, 0xAF	; 175
     908:	fe 4f       	sbci	r31, 0xFE	; 254
     90a:	20 83       	st	Z, r18
     90c:	32 97       	sbiw	r30, 0x02	; 2
     90e:	21 e0       	ldi	r18, 0x01	; 1
     910:	20 83       	st	Z, r18
     912:	08 95       	ret

00000914 <cliToUpper>:
     914:	fc 01       	movw	r30, r24
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	0e c0       	rjmp	.+28     	; 0x938 <cliToUpper+0x24>
     91c:	df 01       	movw	r26, r30
     91e:	a2 0f       	add	r26, r18
     920:	b3 1f       	adc	r27, r19
     922:	9c 91       	ld	r25, X
     924:	99 23       	and	r25, r25
     926:	59 f0       	breq	.+22     	; 0x93e <cliToUpper+0x2a>
     928:	4f e9       	ldi	r20, 0x9F	; 159
     92a:	49 0f       	add	r20, r25
     92c:	4a 31       	cpi	r20, 0x1A	; 26
     92e:	08 f4       	brcc	.+2      	; 0x932 <cliToUpper+0x1e>
     930:	90 52       	subi	r25, 0x20	; 32
     932:	9c 93       	st	X, r25
     934:	2f 5f       	subi	r18, 0xFF	; 255
     936:	3f 4f       	sbci	r19, 0xFF	; 255
     938:	2e 30       	cpi	r18, 0x0E	; 14
     93a:	31 05       	cpc	r19, r1
     93c:	78 f3       	brcs	.-34     	; 0x91c <cliToUpper+0x8>
     93e:	2e 30       	cpi	r18, 0x0E	; 14
     940:	31 05       	cpc	r19, r1
     942:	29 f4       	brne	.+10     	; 0x94e <cliToUpper+0x3a>
     944:	21 50       	subi	r18, 0x01	; 1
     946:	31 09       	sbc	r19, r1
     948:	e2 0f       	add	r30, r18
     94a:	f3 1f       	adc	r31, r19
     94c:	10 82       	st	Z, r1
     94e:	08 95       	ret

00000950 <cliArgsGetStr>:
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     956:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     95a:	82 17       	cp	r24, r18
     95c:	93 07       	cpc	r25, r19
     95e:	58 f4       	brcc	.+22     	; 0x976 <cliArgsGetStr+0x26>
     960:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     964:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     968:	88 0f       	add	r24, r24
     96a:	99 1f       	adc	r25, r25
     96c:	e8 0f       	add	r30, r24
     96e:	f9 1f       	adc	r31, r25
     970:	80 81       	ld	r24, Z
     972:	91 81       	ldd	r25, Z+1	; 0x01
     974:	08 95       	ret
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	08 95       	ret

0000097c <cliArgsIsStr>:
     97c:	28 2f       	mov	r18, r24
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	80 91 5a 3b 	lds	r24, 0x3B5A	; 0x803b5a <cli_node+0x354>
     984:	90 91 5b 3b 	lds	r25, 0x3B5B	; 0x803b5b <cli_node+0x355>
     988:	28 17       	cp	r18, r24
     98a:	39 07       	cpc	r19, r25
     98c:	88 f4       	brcc	.+34     	; 0x9b0 <cliArgsIsStr+0x34>
     98e:	cb 01       	movw	r24, r22
     990:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     994:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     998:	22 0f       	add	r18, r18
     99a:	33 1f       	adc	r19, r19
     99c:	e2 0f       	add	r30, r18
     99e:	f3 1f       	adc	r31, r19
     9a0:	60 81       	ld	r22, Z
     9a2:	71 81       	ldd	r23, Z+1	; 0x01
     9a4:	0e 94 3b 13 	call	0x2676	; 0x2676 <strcmp>
     9a8:	89 2b       	or	r24, r25
     9aa:	21 f0       	breq	.+8      	; 0x9b4 <cliArgsIsStr+0x38>
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	08 95       	ret
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	08 95       	ret
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	08 95       	ret

000009b8 <cliArgsGetFloat>:
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     9be:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     9c2:	82 17       	cp	r24, r18
     9c4:	93 07       	cpc	r25, r19
     9c6:	78 f4       	brcc	.+30     	; 0x9e6 <cliArgsGetFloat+0x2e>
     9c8:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     9cc:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     9d0:	88 0f       	add	r24, r24
     9d2:	99 1f       	adc	r25, r25
     9d4:	e8 0f       	add	r30, r24
     9d6:	f9 1f       	adc	r31, r25
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	70 e0       	ldi	r23, 0x00	; 0
     9dc:	80 81       	ld	r24, Z
     9de:	91 81       	ldd	r25, Z+1	; 0x01
     9e0:	0e 94 b9 10 	call	0x2172	; 0x2172 <strtod>
     9e4:	08 95       	ret
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	cb 01       	movw	r24, r22
     9ec:	08 95       	ret

000009ee <cliArgsGetData>:
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	20 91 5a 3b 	lds	r18, 0x3B5A	; 0x803b5a <cli_node+0x354>
     9f4:	30 91 5b 3b 	lds	r19, 0x3B5B	; 0x803b5b <cli_node+0x355>
     9f8:	82 17       	cp	r24, r18
     9fa:	93 07       	cpc	r25, r19
     9fc:	88 f4       	brcc	.+34     	; 0xa20 <cliArgsGetData+0x32>
     9fe:	e0 91 5c 3b 	lds	r30, 0x3B5C	; 0x803b5c <cli_node+0x356>
     a02:	f0 91 5d 3b 	lds	r31, 0x3B5D	; 0x803b5d <cli_node+0x357>
     a06:	88 0f       	add	r24, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	e8 0f       	add	r30, r24
     a0c:	f9 1f       	adc	r31, r25
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	50 e0       	ldi	r21, 0x00	; 0
     a12:	60 e0       	ldi	r22, 0x00	; 0
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	80 81       	ld	r24, Z
     a18:	91 81       	ldd	r25, Z+1	; 0x01
     a1a:	0e 94 07 12 	call	0x240e	; 0x240e <strtoul>
     a1e:	08 95       	ret
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	70 e0       	ldi	r23, 0x00	; 0
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	08 95       	ret

00000a2a <cliLineChange>:
     a2a:	1f 93       	push	r17
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	fc 01       	movw	r30, r24
     a32:	ee 5a       	subi	r30, 0xAE	; 174
     a34:	fe 4f       	sbci	r31, 0xFE	; 254
     a36:	20 81       	ld	r18, Z
     a38:	22 23       	and	r18, r18
     a3a:	09 f4       	brne	.+2      	; 0xa3e <cliLineChange+0x14>
     a3c:	74 c0       	rjmp	.+232    	; 0xb26 <cliLineChange+0xfc>
     a3e:	16 2f       	mov	r17, r22
     a40:	ec 01       	movw	r28, r24
     a42:	e2 50       	subi	r30, 0x02	; 2
     a44:	ff 4f       	sbci	r31, 0xFF	; 255
     a46:	80 81       	ld	r24, Z
     a48:	88 23       	and	r24, r24
     a4a:	79 f0       	breq	.+30     	; 0xa6a <cliLineChange+0x40>
     a4c:	1f 92       	push	r1
     a4e:	8f 93       	push	r24
     a50:	8e ec       	ldi	r24, 0xCE	; 206
     a52:	9f ea       	ldi	r25, 0xAF	; 175
     a54:	9f 93       	push	r25
     a56:	8f 93       	push	r24
     a58:	88 81       	ld	r24, Y
     a5a:	8f 93       	push	r24
     a5c:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
     a60:	0f 90       	pop	r0
     a62:	0f 90       	pop	r0
     a64:	0f 90       	pop	r0
     a66:	0f 90       	pop	r0
     a68:	0f 90       	pop	r0
     a6a:	fe 01       	movw	r30, r28
     a6c:	ef 5a       	subi	r30, 0xAF	; 175
     a6e:	fd 4f       	sbci	r31, 0xFD	; 253
     a70:	80 81       	ld	r24, Z
     a72:	88 23       	and	r24, r24
     a74:	79 f0       	breq	.+30     	; 0xa94 <cliLineChange+0x6a>
     a76:	1f 92       	push	r1
     a78:	8f 93       	push	r24
     a7a:	84 ed       	ldi	r24, 0xD4	; 212
     a7c:	9f ea       	ldi	r25, 0xAF	; 175
     a7e:	9f 93       	push	r25
     a80:	8f 93       	push	r24
     a82:	88 81       	ld	r24, Y
     a84:	8f 93       	push	r24
     a86:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
     a8a:	0f 90       	pop	r0
     a8c:	0f 90       	pop	r0
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
     a94:	11 30       	cpi	r17, 0x01	; 1
     a96:	f1 f4       	brne	.+60     	; 0xad4 <cliLineChange+0xaa>
     a98:	fe 01       	movw	r30, r28
     a9a:	e1 5b       	subi	r30, 0xB1	; 177
     a9c:	fe 4f       	sbci	r31, 0xFE	; 254
     a9e:	80 81       	ld	r24, Z
     aa0:	88 23       	and	r24, r24
     aa2:	21 f0       	breq	.+8      	; 0xaac <cliLineChange+0x82>
     aa4:	32 96       	adiw	r30, 0x02	; 2
     aa6:	80 81       	ld	r24, Z
     aa8:	31 97       	sbiw	r30, 0x01	; 1
     aaa:	80 83       	st	Z, r24
     aac:	fe 01       	movw	r30, r28
     aae:	e0 5b       	subi	r30, 0xB0	; 176
     ab0:	fe 4f       	sbci	r31, 0xFE	; 254
     ab2:	80 81       	ld	r24, Z
     ab4:	de 01       	movw	r26, r28
     ab6:	ae 5a       	subi	r26, 0xAE	; 174
     ab8:	be 4f       	sbci	r27, 0xFE	; 254
     aba:	6c 91       	ld	r22, X
     abc:	70 e0       	ldi	r23, 0x00	; 0
     abe:	9b 01       	movw	r18, r22
     ac0:	28 0f       	add	r18, r24
     ac2:	31 1d       	adc	r19, r1
     ac4:	87 fd       	sbrc	r24, 7
     ac6:	3a 95       	dec	r19
     ac8:	c9 01       	movw	r24, r18
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	0e 94 6f 10 	call	0x20de	; 0x20de <__divmodhi4>
     ad0:	80 83       	st	Z, r24
     ad2:	10 c0       	rjmp	.+32     	; 0xaf4 <cliLineChange+0xca>
     ad4:	fe 01       	movw	r30, r28
     ad6:	e0 5b       	subi	r30, 0xB0	; 176
     ad8:	fe 4f       	sbci	r31, 0xFE	; 254
     ada:	80 81       	ld	r24, Z
     adc:	08 2e       	mov	r0, r24
     ade:	00 0c       	add	r0, r0
     ae0:	99 0b       	sbc	r25, r25
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	de 01       	movw	r26, r28
     ae6:	ae 5a       	subi	r26, 0xAE	; 174
     ae8:	be 4f       	sbci	r27, 0xFE	; 254
     aea:	6c 91       	ld	r22, X
     aec:	70 e0       	ldi	r23, 0x00	; 0
     aee:	0e 94 6f 10 	call	0x20de	; 0x20de <__divmodhi4>
     af2:	80 83       	st	Z, r24
     af4:	de 01       	movw	r26, r28
     af6:	a1 5e       	subi	r26, 0xE1	; 225
     af8:	bd 4f       	sbci	r27, 0xFD	; 253
     afa:	fe 01       	movw	r30, r28
     afc:	33 e3       	ldi	r19, 0x33	; 51
     afe:	83 9f       	mul	r24, r19
     b00:	e0 0d       	add	r30, r0
     b02:	f1 1d       	adc	r31, r1
     b04:	11 24       	eor	r1, r1
     b06:	ed 5a       	subi	r30, 0xAD	; 173
     b08:	fe 4f       	sbci	r31, 0xFE	; 254
     b0a:	83 e3       	ldi	r24, 0x33	; 51
     b0c:	01 90       	ld	r0, Z+
     b0e:	0d 92       	st	X+, r0
     b10:	8a 95       	dec	r24
     b12:	e1 f7       	brne	.-8      	; 0xb0c <cliLineChange+0xe2>
     b14:	fe 01       	movw	r30, r28
     b16:	ef 5a       	subi	r30, 0xAF	; 175
     b18:	fd 4f       	sbci	r31, 0xFD	; 253
     b1a:	80 81       	ld	r24, Z
     b1c:	31 97       	sbiw	r30, 0x01	; 1
     b1e:	80 83       	st	Z, r24
     b20:	c1 5b       	subi	r28, 0xB1	; 177
     b22:	de 4f       	sbci	r29, 0xFE	; 254
     b24:	18 82       	st	Y, r1
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	08 95       	ret

00000b2e <cliParseArgs>:
     b2e:	cf 92       	push	r12
     b30:	df 92       	push	r13
     b32:	ef 92       	push	r14
     b34:	ff 92       	push	r15
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	00 d0       	rcall	.+0      	; 0xb40 <cliParseArgs+0x12>
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	6c 01       	movw	r12, r24
     b46:	fc 01       	movw	r30, r24
     b48:	e3 5f       	subi	r30, 0xF3	; 243
     b4a:	fe 4f       	sbci	r31, 0xFE	; 254
     b4c:	10 82       	st	Z, r1
     b4e:	11 82       	std	Z+1, r1	; 0x01
     b50:	7c 01       	movw	r14, r24
     b52:	81 ef       	ldi	r24, 0xF1	; 241
     b54:	e8 1a       	sub	r14, r24
     b56:	8e ef       	ldi	r24, 0xFE	; 254
     b58:	f8 0a       	sbc	r15, r24
     b5a:	f7 01       	movw	r30, r14
     b5c:	10 82       	st	Z, r1
     b5e:	11 82       	std	Z+1, r1	; 0x01
     b60:	ae 01       	movw	r20, r28
     b62:	4f 5f       	subi	r20, 0xFF	; 255
     b64:	5f 4f       	sbci	r21, 0xFF	; 255
     b66:	6a ed       	ldi	r22, 0xDA	; 218
     b68:	7f ea       	ldi	r23, 0xAF	; 175
     b6a:	c6 01       	movw	r24, r12
     b6c:	81 5e       	subi	r24, 0xE1	; 225
     b6e:	9d 4f       	sbci	r25, 0xFD	; 253
     b70:	0e 94 4b 13 	call	0x2696	; 0x2696 <strtok_r>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	14 c0       	rjmp	.+40     	; 0xba2 <cliParseArgs+0x74>
     b7a:	89 01       	movw	r16, r18
     b7c:	0f 5f       	subi	r16, 0xFF	; 255
     b7e:	1f 4f       	sbci	r17, 0xFF	; 255
     b80:	22 0f       	add	r18, r18
     b82:	33 1f       	adc	r19, r19
     b84:	f7 01       	movw	r30, r14
     b86:	e2 0f       	add	r30, r18
     b88:	f3 1f       	adc	r31, r19
     b8a:	80 83       	st	Z, r24
     b8c:	91 83       	std	Z+1, r25	; 0x01
     b8e:	ae 01       	movw	r20, r28
     b90:	4f 5f       	subi	r20, 0xFF	; 255
     b92:	5f 4f       	sbci	r21, 0xFF	; 255
     b94:	6a ed       	ldi	r22, 0xDA	; 218
     b96:	7f ea       	ldi	r23, 0xAF	; 175
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 4b 13 	call	0x2696	; 0x2696 <strtok_r>
     ba0:	98 01       	movw	r18, r16
     ba2:	00 97       	sbiw	r24, 0x00	; 0
     ba4:	51 f7       	brne	.-44     	; 0xb7a <cliParseArgs+0x4c>
     ba6:	f6 01       	movw	r30, r12
     ba8:	e3 5f       	subi	r30, 0xF3	; 243
     baa:	fe 4f       	sbci	r31, 0xFE	; 254
     bac:	20 83       	st	Z, r18
     bae:	31 83       	std	Z+1, r19	; 0x01
     bb0:	23 2b       	or	r18, r19
     bb2:	11 f4       	brne	.+4      	; 0xbb8 <cliParseArgs+0x8a>
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	01 c0       	rjmp	.+2      	; 0xbba <cliParseArgs+0x8c>
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	df 91       	pop	r29
     bc0:	cf 91       	pop	r28
     bc2:	1f 91       	pop	r17
     bc4:	0f 91       	pop	r16
     bc6:	ff 90       	pop	r15
     bc8:	ef 90       	pop	r14
     bca:	df 90       	pop	r13
     bcc:	cf 90       	pop	r12
     bce:	08 95       	ret

00000bd0 <cliOpen>:
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	e6 e0       	ldi	r30, 0x06	; 6
     bda:	f8 e3       	ldi	r31, 0x38	; 56
     bdc:	80 83       	st	Z, r24
     bde:	95 81       	ldd	r25, Z+5	; 0x05
     be0:	99 23       	and	r25, r25
     be2:	69 f0       	breq	.+26     	; 0xbfe <cliOpen+0x2e>
     be4:	00 91 07 38 	lds	r16, 0x3807	; 0x803807 <cli_node+0x1>
     be8:	10 91 08 38 	lds	r17, 0x3808	; 0x803808 <cli_node+0x2>
     bec:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <cli_node+0x3>
     bf0:	30 91 0a 38 	lds	r19, 0x380A	; 0x80380a <cli_node+0x4>
     bf4:	04 17       	cp	r16, r20
     bf6:	15 07       	cpc	r17, r21
     bf8:	26 07       	cpc	r18, r22
     bfa:	37 07       	cpc	r19, r23
     bfc:	49 f0       	breq	.+18     	; 0xc10 <cliOpen+0x40>
     bfe:	c6 e0       	ldi	r28, 0x06	; 6
     c00:	d8 e3       	ldi	r29, 0x38	; 56
     c02:	49 83       	std	Y+1, r20	; 0x01
     c04:	5a 83       	std	Y+2, r21	; 0x02
     c06:	6b 83       	std	Y+3, r22	; 0x03
     c08:	7c 83       	std	Y+4, r23	; 0x04
     c0a:	0e 94 1c 0f 	call	0x1e38	; 0x1e38 <uartOpen>
     c0e:	8d 83       	std	Y+5, r24	; 0x05
     c10:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <cli_node+0x5>
     c14:	df 91       	pop	r29
     c16:	cf 91       	pop	r28
     c18:	1f 91       	pop	r17
     c1a:	0f 91       	pop	r16
     c1c:	08 95       	ret

00000c1e <cliPrintf>:
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	cd b7       	in	r28, 0x3d	; 61
     c24:	de b7       	in	r29, 0x3e	; 62
     c26:	9e 01       	movw	r18, r28
     c28:	2b 5f       	subi	r18, 0xFB	; 251
     c2a:	3f 4f       	sbci	r19, 0xFF	; 255
     c2c:	f9 01       	movw	r30, r18
     c2e:	41 91       	ld	r20, Z+
     c30:	51 91       	ld	r21, Z+
     c32:	9f 01       	movw	r18, r30
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	71 e0       	ldi	r23, 0x01	; 1
     c38:	83 e1       	ldi	r24, 0x13	; 19
     c3a:	98 e3       	ldi	r25, 0x38	; 56
     c3c:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <vsnprintf>
     c40:	9c 01       	movw	r18, r24
     c42:	99 0f       	add	r25, r25
     c44:	44 0b       	sbc	r20, r20
     c46:	55 0b       	sbc	r21, r21
     c48:	63 e1       	ldi	r22, 0x13	; 19
     c4a:	78 e3       	ldi	r23, 0x38	; 56
     c4c:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
     c50:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	08 95       	ret

00000c5a <cliPrintf_P>:
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	cd b7       	in	r28, 0x3d	; 61
     c60:	de b7       	in	r29, 0x3e	; 62
     c62:	9e 01       	movw	r18, r28
     c64:	2b 5f       	subi	r18, 0xFB	; 251
     c66:	3f 4f       	sbci	r19, 0xFF	; 255
     c68:	f9 01       	movw	r30, r18
     c6a:	41 91       	ld	r20, Z+
     c6c:	51 91       	ld	r21, Z+
     c6e:	9f 01       	movw	r18, r30
     c70:	60 e0       	ldi	r22, 0x00	; 0
     c72:	71 e0       	ldi	r23, 0x01	; 1
     c74:	83 e1       	ldi	r24, 0x13	; 19
     c76:	98 e3       	ldi	r25, 0x38	; 56
     c78:	0e 94 a6 13 	call	0x274c	; 0x274c <vsnprintf_P>
     c7c:	9c 01       	movw	r18, r24
     c7e:	99 0f       	add	r25, r25
     c80:	44 0b       	sbc	r20, r20
     c82:	55 0b       	sbc	r21, r21
     c84:	63 e1       	ldi	r22, 0x13	; 19
     c86:	78 e3       	ldi	r23, 0x38	; 56
     c88:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
     c8c:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	08 95       	ret

00000c96 <cliRunCmd>:
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	8c 01       	movw	r16, r24
     ca0:	0e 94 97 05 	call	0xb2e	; 0xb2e <cliParseArgs>
     ca4:	88 23       	and	r24, r24
     ca6:	09 f4       	brne	.+2      	; 0xcaa <cliRunCmd+0x14>
     ca8:	50 c0       	rjmp	.+160    	; 0xd4a <cliRunCmd+0xb4>
     caa:	85 e6       	ldi	r24, 0x65	; 101
     cac:	91 e0       	ldi	r25, 0x01	; 1
     cae:	9f 93       	push	r25
     cb0:	8f 93       	push	r24
     cb2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     cb6:	f8 01       	movw	r30, r16
     cb8:	e1 5f       	subi	r30, 0xF1	; 241
     cba:	fe 4f       	sbci	r31, 0xFE	; 254
     cbc:	80 81       	ld	r24, Z
     cbe:	91 81       	ldd	r25, Z+1	; 0x01
     cc0:	0e 94 8a 04 	call	0x914	; 0x914 <cliToUpper>
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	c0 e0       	ldi	r28, 0x00	; 0
     cca:	d0 e0       	ldi	r29, 0x00	; 0
     ccc:	36 c0       	rjmp	.+108    	; 0xd3a <cliRunCmd+0xa4>
     cce:	be 01       	movw	r22, r28
     cd0:	62 95       	swap	r22
     cd2:	72 95       	swap	r23
     cd4:	70 7f       	andi	r23, 0xF0	; 240
     cd6:	76 27       	eor	r23, r22
     cd8:	60 7f       	andi	r22, 0xF0	; 240
     cda:	76 27       	eor	r23, r22
     cdc:	6c 5a       	subi	r22, 0xAC	; 172
     cde:	7d 4f       	sbci	r23, 0xFD	; 253
     ce0:	60 0f       	add	r22, r16
     ce2:	71 1f       	adc	r23, r17
     ce4:	f8 01       	movw	r30, r16
     ce6:	e1 5f       	subi	r30, 0xF1	; 241
     ce8:	fe 4f       	sbci	r31, 0xFE	; 254
     cea:	80 81       	ld	r24, Z
     cec:	91 81       	ldd	r25, Z+1	; 0x01
     cee:	0e 94 3b 13 	call	0x2676	; 0x2676 <strcmp>
     cf2:	89 2b       	or	r24, r25
     cf4:	09 f5       	brne	.+66     	; 0xd38 <cliRunCmd+0xa2>
     cf6:	f8 01       	movw	r30, r16
     cf8:	e3 5f       	subi	r30, 0xF3	; 243
     cfa:	fe 4f       	sbci	r31, 0xFE	; 254
     cfc:	20 81       	ld	r18, Z
     cfe:	31 81       	ldd	r19, Z+1	; 0x01
     d00:	21 50       	subi	r18, 0x01	; 1
     d02:	31 09       	sbc	r19, r1
     d04:	c8 01       	movw	r24, r16
     d06:	8c 5a       	subi	r24, 0xAC	; 172
     d08:	9c 4f       	sbci	r25, 0xFC	; 252
     d0a:	fc 01       	movw	r30, r24
     d0c:	20 83       	st	Z, r18
     d0e:	31 83       	std	Z+1, r19	; 0x01
     d10:	98 01       	movw	r18, r16
     d12:	2f 5e       	subi	r18, 0xEF	; 239
     d14:	3e 4f       	sbci	r19, 0xFE	; 254
     d16:	32 96       	adiw	r30, 0x02	; 2
     d18:	20 83       	st	Z, r18
     d1a:	31 83       	std	Z+1, r19	; 0x01
     d1c:	c2 95       	swap	r28
     d1e:	d2 95       	swap	r29
     d20:	d0 7f       	andi	r29, 0xF0	; 240
     d22:	dc 27       	eor	r29, r28
     d24:	c0 7f       	andi	r28, 0xF0	; 240
     d26:	dc 27       	eor	r29, r28
     d28:	c0 0f       	add	r28, r16
     d2a:	d1 1f       	adc	r29, r17
     d2c:	ce 59       	subi	r28, 0x9E	; 158
     d2e:	dd 4f       	sbci	r29, 0xFD	; 253
     d30:	e8 81       	ld	r30, Y
     d32:	f9 81       	ldd	r31, Y+1	; 0x01
     d34:	09 95       	icall
     d36:	09 c0       	rjmp	.+18     	; 0xd4a <cliRunCmd+0xb4>
     d38:	21 96       	adiw	r28, 0x01	; 1
     d3a:	f8 01       	movw	r30, r16
     d3c:	ee 5a       	subi	r30, 0xAE	; 174
     d3e:	fd 4f       	sbci	r31, 0xFD	; 253
     d40:	80 81       	ld	r24, Z
     d42:	91 81       	ldd	r25, Z+1	; 0x01
     d44:	c8 17       	cp	r28, r24
     d46:	d9 07       	cpc	r29, r25
     d48:	10 f2       	brcs	.-124    	; 0xcce <cliRunCmd+0x38>
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	df 91       	pop	r29
     d4e:	cf 91       	pop	r28
     d50:	1f 91       	pop	r17
     d52:	0f 91       	pop	r16
     d54:	08 95       	ret

00000d56 <cliShowPrompt>:
     d56:	82 e6       	ldi	r24, 0x62	; 98
     d58:	91 e0       	ldi	r25, 0x01	; 1
     d5a:	9f 93       	push	r25
     d5c:	8f 93       	push	r24
     d5e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     d62:	8c e5       	ldi	r24, 0x5C	; 92
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	9f 93       	push	r25
     d68:	8f 93       	push	r24
     d6a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     d6e:	0f 90       	pop	r0
     d70:	0f 90       	pop	r0
     d72:	0f 90       	pop	r0
     d74:	0f 90       	pop	r0
     d76:	08 95       	ret

00000d78 <cliUpdate>:
     d78:	ef 92       	push	r14
     d7a:	ff 92       	push	r15
     d7c:	0f 93       	push	r16
     d7e:	1f 93       	push	r17
     d80:	cf 93       	push	r28
     d82:	df 93       	push	r29
     d84:	cd b7       	in	r28, 0x3d	; 61
     d86:	de b7       	in	r29, 0x3e	; 62
     d88:	29 97       	sbiw	r28, 0x09	; 9
     d8a:	cd bf       	out	0x3d, r28	; 61
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	8c 01       	movw	r16, r24
     d90:	69 87       	std	Y+9, r22	; 0x09
     d92:	dc 01       	movw	r26, r24
     d94:	1c 96       	adiw	r26, 0x0c	; 12
     d96:	8c 91       	ld	r24, X
     d98:	81 11       	cpse	r24, r1
     d9a:	16 c1       	rjmp	.+556    	; 0xfc8 <cliUpdate+0x250>
     d9c:	6d 30       	cpi	r22, 0x0D	; 13
     d9e:	51 f0       	breq	.+20     	; 0xdb4 <cliUpdate+0x3c>
     da0:	20 f4       	brcc	.+8      	; 0xdaa <cliUpdate+0x32>
     da2:	68 30       	cpi	r22, 0x08	; 8
     da4:	09 f4       	brne	.+2      	; 0xda8 <cliUpdate+0x30>
     da6:	56 c0       	rjmp	.+172    	; 0xe54 <cliUpdate+0xdc>
     da8:	a2 c0       	rjmp	.+324    	; 0xeee <cliUpdate+0x176>
     daa:	6b 31       	cpi	r22, 0x1B	; 27
     dac:	c9 f0       	breq	.+50     	; 0xde0 <cliUpdate+0x68>
     dae:	6f 37       	cpi	r22, 0x7F	; 127
     db0:	d9 f0       	breq	.+54     	; 0xde8 <cliUpdate+0x70>
     db2:	9d c0       	rjmp	.+314    	; 0xeee <cliUpdate+0x176>
     db4:	f8 01       	movw	r30, r16
     db6:	e1 5e       	subi	r30, 0xE1	; 225
     db8:	fd 4f       	sbci	r31, 0xFD	; 253
     dba:	82 a9       	ldd	r24, Z+50	; 0x32
     dbc:	88 23       	and	r24, r24
     dbe:	31 f0       	breq	.+12     	; 0xdcc <cliUpdate+0x54>
     dc0:	c8 01       	movw	r24, r16
     dc2:	0e 94 54 04 	call	0x8a8	; 0x8a8 <cliLineAdd>
     dc6:	c8 01       	movw	r24, r16
     dc8:	0e 94 4b 06 	call	0xc96	; 0xc96 <cliRunCmd>
     dcc:	f8 01       	movw	r30, r16
     dce:	e1 5e       	subi	r30, 0xE1	; 225
     dd0:	fd 4f       	sbci	r31, 0xFD	; 253
     dd2:	12 aa       	std	Z+50, r1	; 0x32
     dd4:	11 aa       	std	Z+49, r1	; 0x31
     dd6:	10 82       	st	Z, r1
     dd8:	c8 01       	movw	r24, r16
     dda:	0e 94 ab 06 	call	0xd56	; 0xd56 <cliShowPrompt>
     dde:	f4 c0       	rjmp	.+488    	; 0xfc8 <cliUpdate+0x250>
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	f8 01       	movw	r30, r16
     de4:	84 87       	std	Z+12, r24	; 0x0c
     de6:	f0 c0       	rjmp	.+480    	; 0xfc8 <cliUpdate+0x250>
     de8:	f8 01       	movw	r30, r16
     dea:	e1 5e       	subi	r30, 0xE1	; 225
     dec:	fd 4f       	sbci	r31, 0xFD	; 253
     dee:	61 a9       	ldd	r22, Z+49	; 0x31
     df0:	f2 a8       	ldd	r15, Z+50	; 0x32
     df2:	6f 15       	cp	r22, r15
     df4:	08 f0       	brcs	.+2      	; 0xdf8 <cliUpdate+0x80>
     df6:	e8 c0       	rjmp	.+464    	; 0xfc8 <cliUpdate+0x250>
     df8:	7f 2d       	mov	r23, r15
     dfa:	76 1b       	sub	r23, r22
     dfc:	21 e0       	ldi	r18, 0x01	; 1
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	12 c0       	rjmp	.+36     	; 0xe26 <cliUpdate+0xae>
     e02:	c9 01       	movw	r24, r18
     e04:	86 0f       	add	r24, r22
     e06:	91 1d       	adc	r25, r1
     e08:	ac 01       	movw	r20, r24
     e0a:	41 50       	subi	r20, 0x01	; 1
     e0c:	51 09       	sbc	r21, r1
     e0e:	f8 01       	movw	r30, r16
     e10:	e1 5e       	subi	r30, 0xE1	; 225
     e12:	fd 4f       	sbci	r31, 0xFD	; 253
     e14:	df 01       	movw	r26, r30
     e16:	a8 0f       	add	r26, r24
     e18:	b9 1f       	adc	r27, r25
     e1a:	8c 91       	ld	r24, X
     e1c:	e4 0f       	add	r30, r20
     e1e:	f5 1f       	adc	r31, r21
     e20:	80 83       	st	Z, r24
     e22:	2f 5f       	subi	r18, 0xFF	; 255
     e24:	3f 4f       	sbci	r19, 0xFF	; 255
     e26:	87 2f       	mov	r24, r23
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	28 17       	cp	r18, r24
     e2c:	39 07       	cpc	r19, r25
     e2e:	4c f3       	brlt	.-46     	; 0xe02 <cliUpdate+0x8a>
     e30:	af ef       	ldi	r26, 0xFF	; 255
     e32:	af 0d       	add	r26, r15
     e34:	f8 01       	movw	r30, r16
     e36:	e1 5e       	subi	r30, 0xE1	; 225
     e38:	fd 4f       	sbci	r31, 0xFD	; 253
     e3a:	a2 ab       	std	Z+50, r26	; 0x32
     e3c:	ea 0f       	add	r30, r26
     e3e:	f1 1d       	adc	r31, r1
     e40:	10 82       	st	Z, r1
     e42:	8b e7       	ldi	r24, 0x7B	; 123
     e44:	91 e0       	ldi	r25, 0x01	; 1
     e46:	9f 93       	push	r25
     e48:	8f 93       	push	r24
     e4a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     e4e:	0f 90       	pop	r0
     e50:	0f 90       	pop	r0
     e52:	ba c0       	rjmp	.+372    	; 0xfc8 <cliUpdate+0x250>
     e54:	f8 01       	movw	r30, r16
     e56:	e1 5e       	subi	r30, 0xE1	; 225
     e58:	fd 4f       	sbci	r31, 0xFD	; 253
     e5a:	82 a9       	ldd	r24, Z+50	; 0x32
     e5c:	88 23       	and	r24, r24
     e5e:	a9 f1       	breq	.+106    	; 0xeca <cliUpdate+0x152>
     e60:	61 a9       	ldd	r22, Z+49	; 0x31
     e62:	66 23       	and	r22, r22
     e64:	91 f1       	breq	.+100    	; 0xeca <cliUpdate+0x152>
     e66:	86 13       	cpse	r24, r22
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <cliUpdate+0xfc>
     e6a:	81 50       	subi	r24, 0x01	; 1
     e6c:	82 ab       	std	Z+50, r24	; 0x32
     e6e:	e8 0f       	add	r30, r24
     e70:	f1 1d       	adc	r31, r1
     e72:	10 82       	st	Z, r1
     e74:	f8 01       	movw	r30, r16
     e76:	e1 5e       	subi	r30, 0xE1	; 225
     e78:	fd 4f       	sbci	r31, 0xFD	; 253
     e7a:	f2 a8       	ldd	r15, Z+50	; 0x32
     e7c:	6f 15       	cp	r22, r15
     e7e:	28 f5       	brcc	.+74     	; 0xeca <cliUpdate+0x152>
     e80:	7f 2d       	mov	r23, r15
     e82:	76 1b       	sub	r23, r22
     e84:	20 e0       	ldi	r18, 0x00	; 0
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	12 c0       	rjmp	.+36     	; 0xeae <cliUpdate+0x136>
     e8a:	c9 01       	movw	r24, r18
     e8c:	86 0f       	add	r24, r22
     e8e:	91 1d       	adc	r25, r1
     e90:	ac 01       	movw	r20, r24
     e92:	41 50       	subi	r20, 0x01	; 1
     e94:	51 09       	sbc	r21, r1
     e96:	f8 01       	movw	r30, r16
     e98:	e1 5e       	subi	r30, 0xE1	; 225
     e9a:	fd 4f       	sbci	r31, 0xFD	; 253
     e9c:	df 01       	movw	r26, r30
     e9e:	a8 0f       	add	r26, r24
     ea0:	b9 1f       	adc	r27, r25
     ea2:	8c 91       	ld	r24, X
     ea4:	e4 0f       	add	r30, r20
     ea6:	f5 1f       	adc	r31, r21
     ea8:	80 83       	st	Z, r24
     eaa:	2f 5f       	subi	r18, 0xFF	; 255
     eac:	3f 4f       	sbci	r19, 0xFF	; 255
     eae:	87 2f       	mov	r24, r23
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	28 17       	cp	r18, r24
     eb4:	39 07       	cpc	r19, r25
     eb6:	4c f3       	brlt	.-46     	; 0xe8a <cliUpdate+0x112>
     eb8:	af ef       	ldi	r26, 0xFF	; 255
     eba:	af 0d       	add	r26, r15
     ebc:	f8 01       	movw	r30, r16
     ebe:	e1 5e       	subi	r30, 0xE1	; 225
     ec0:	fd 4f       	sbci	r31, 0xFD	; 253
     ec2:	a2 ab       	std	Z+50, r26	; 0x32
     ec4:	ea 0f       	add	r30, r26
     ec6:	f1 1d       	adc	r31, r1
     ec8:	10 82       	st	Z, r1
     eca:	f8 01       	movw	r30, r16
     ecc:	e1 5e       	subi	r30, 0xE1	; 225
     ece:	fd 4f       	sbci	r31, 0xFD	; 253
     ed0:	81 a9       	ldd	r24, Z+49	; 0x31
     ed2:	88 23       	and	r24, r24
     ed4:	09 f4       	brne	.+2      	; 0xed8 <cliUpdate+0x160>
     ed6:	78 c0       	rjmp	.+240    	; 0xfc8 <cliUpdate+0x250>
     ed8:	81 50       	subi	r24, 0x01	; 1
     eda:	81 ab       	std	Z+49, r24	; 0x31
     edc:	83 e7       	ldi	r24, 0x73	; 115
     ede:	91 e0       	ldi	r25, 0x01	; 1
     ee0:	9f 93       	push	r25
     ee2:	8f 93       	push	r24
     ee4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	6d c0       	rjmp	.+218    	; 0xfc8 <cliUpdate+0x250>
     eee:	f8 01       	movw	r30, r16
     ef0:	e1 5e       	subi	r30, 0xE1	; 225
     ef2:	fd 4f       	sbci	r31, 0xFD	; 253
     ef4:	42 a9       	ldd	r20, Z+50	; 0x32
     ef6:	24 2f       	mov	r18, r20
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	2f 5f       	subi	r18, 0xFF	; 255
     efc:	3f 4f       	sbci	r19, 0xFF	; 255
     efe:	80 a9       	ldd	r24, Z+48	; 0x30
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	28 17       	cp	r18, r24
     f04:	39 07       	cpc	r19, r25
     f06:	0c f0       	brlt	.+2      	; 0xf0a <cliUpdate+0x192>
     f08:	5f c0       	rjmp	.+190    	; 0xfc8 <cliUpdate+0x250>
     f0a:	81 a9       	ldd	r24, Z+49	; 0x31
     f0c:	48 13       	cpse	r20, r24
     f0e:	1c c0       	rjmp	.+56     	; 0xf48 <cliUpdate+0x1d0>
     f10:	21 e0       	ldi	r18, 0x01	; 1
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	40 e0       	ldi	r20, 0x00	; 0
     f16:	50 e0       	ldi	r21, 0x00	; 0
     f18:	be 01       	movw	r22, r28
     f1a:	67 5f       	subi	r22, 0xF7	; 247
     f1c:	7f 4f       	sbci	r23, 0xFF	; 255
     f1e:	d8 01       	movw	r26, r16
     f20:	8c 91       	ld	r24, X
     f22:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
     f26:	f8 01       	movw	r30, r16
     f28:	e1 5e       	subi	r30, 0xE1	; 225
     f2a:	fd 4f       	sbci	r31, 0xFD	; 253
     f2c:	91 a9       	ldd	r25, Z+49	; 0x31
     f2e:	df 01       	movw	r26, r30
     f30:	a9 0f       	add	r26, r25
     f32:	b1 1d       	adc	r27, r1
     f34:	89 85       	ldd	r24, Y+9	; 0x09
     f36:	8c 93       	st	X, r24
     f38:	82 a9       	ldd	r24, Z+50	; 0x32
     f3a:	8f 5f       	subi	r24, 0xFF	; 255
     f3c:	82 ab       	std	Z+50, r24	; 0x32
     f3e:	9f 5f       	subi	r25, 0xFF	; 255
     f40:	91 ab       	std	Z+49, r25	; 0x31
     f42:	e8 0f       	add	r30, r24
     f44:	f1 1d       	adc	r31, r1
     f46:	10 82       	st	Z, r1
     f48:	f8 01       	movw	r30, r16
     f4a:	e1 5e       	subi	r30, 0xE1	; 225
     f4c:	fd 4f       	sbci	r31, 0xFD	; 253
     f4e:	f1 a8       	ldd	r15, Z+49	; 0x31
     f50:	72 a9       	ldd	r23, Z+50	; 0x32
     f52:	f7 16       	cp	r15, r23
     f54:	c8 f5       	brcc	.+114    	; 0xfc8 <cliUpdate+0x250>
     f56:	a7 2f       	mov	r26, r23
     f58:	af 19       	sub	r26, r15
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	12 c0       	rjmp	.+36     	; 0xf84 <cliUpdate+0x20c>
     f60:	87 2f       	mov	r24, r23
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	82 1b       	sub	r24, r18
     f66:	93 0b       	sbc	r25, r19
     f68:	fc 01       	movw	r30, r24
     f6a:	31 97       	sbiw	r30, 0x01	; 1
     f6c:	a8 01       	movw	r20, r16
     f6e:	41 5e       	subi	r20, 0xE1	; 225
     f70:	5d 4f       	sbci	r21, 0xFD	; 253
     f72:	e4 0f       	add	r30, r20
     f74:	f5 1f       	adc	r31, r21
     f76:	60 81       	ld	r22, Z
     f78:	fa 01       	movw	r30, r20
     f7a:	e8 0f       	add	r30, r24
     f7c:	f9 1f       	adc	r31, r25
     f7e:	60 83       	st	Z, r22
     f80:	2f 5f       	subi	r18, 0xFF	; 255
     f82:	3f 4f       	sbci	r19, 0xFF	; 255
     f84:	8a 2f       	mov	r24, r26
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	28 17       	cp	r18, r24
     f8a:	39 07       	cpc	r19, r25
     f8c:	4c f3       	brlt	.-46     	; 0xf60 <cliUpdate+0x1e8>
     f8e:	89 85       	ldd	r24, Y+9	; 0x09
     f90:	f8 01       	movw	r30, r16
     f92:	e1 5e       	subi	r30, 0xE1	; 225
     f94:	fd 4f       	sbci	r31, 0xFD	; 253
     f96:	9f 01       	movw	r18, r30
     f98:	2f 0d       	add	r18, r15
     f9a:	31 1d       	adc	r19, r1
     f9c:	d9 01       	movw	r26, r18
     f9e:	8c 93       	st	X, r24
     fa0:	7f 5f       	subi	r23, 0xFF	; 255
     fa2:	72 ab       	std	Z+50, r23	; 0x32
     fa4:	b1 e0       	ldi	r27, 0x01	; 1
     fa6:	bf 0d       	add	r27, r15
     fa8:	b1 ab       	std	Z+49, r27	; 0x31
     faa:	e7 0f       	add	r30, r23
     fac:	f1 1d       	adc	r31, r1
     fae:	10 82       	st	Z, r1
     fb0:	1f 92       	push	r1
     fb2:	8f 93       	push	r24
     fb4:	88 e6       	ldi	r24, 0x68	; 104
     fb6:	91 e0       	ldi	r25, 0x01	; 1
     fb8:	9f 93       	push	r25
     fba:	8f 93       	push	r24
     fbc:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
     fc0:	0f 90       	pop	r0
     fc2:	0f 90       	pop	r0
     fc4:	0f 90       	pop	r0
     fc6:	0f 90       	pop	r0
     fc8:	f8 01       	movw	r30, r16
     fca:	84 85       	ldd	r24, Z+12	; 0x0c
     fcc:	82 30       	cpi	r24, 0x02	; 2
     fce:	69 f0       	breq	.+26     	; 0xfea <cliUpdate+0x272>
     fd0:	18 f4       	brcc	.+6      	; 0xfd8 <cliUpdate+0x260>
     fd2:	81 30       	cpi	r24, 0x01	; 1
     fd4:	39 f0       	breq	.+14     	; 0xfe4 <cliUpdate+0x26c>
     fd6:	ce c0       	rjmp	.+412    	; 0x1174 <cliUpdate+0x3fc>
     fd8:	83 30       	cpi	r24, 0x03	; 3
     fda:	59 f0       	breq	.+22     	; 0xff2 <cliUpdate+0x27a>
     fdc:	84 30       	cpi	r24, 0x04	; 4
     fde:	09 f4       	brne	.+2      	; 0xfe2 <cliUpdate+0x26a>
     fe0:	c8 c0       	rjmp	.+400    	; 0x1172 <cliUpdate+0x3fa>
     fe2:	c8 c0       	rjmp	.+400    	; 0x1174 <cliUpdate+0x3fc>
     fe4:	82 e0       	ldi	r24, 0x02	; 2
     fe6:	84 87       	std	Z+12, r24	; 0x0c
     fe8:	c5 c0       	rjmp	.+394    	; 0x1174 <cliUpdate+0x3fc>
     fea:	83 e0       	ldi	r24, 0x03	; 3
     fec:	f8 01       	movw	r30, r16
     fee:	84 87       	std	Z+12, r24	; 0x0c
     ff0:	c1 c0       	rjmp	.+386    	; 0x1174 <cliUpdate+0x3fc>
     ff2:	14 86       	std	Z+12, r1	; 0x0c
     ff4:	89 85       	ldd	r24, Y+9	; 0x09
     ff6:	84 34       	cpi	r24, 0x44	; 68
     ff8:	c1 f4       	brne	.+48     	; 0x102a <cliUpdate+0x2b2>
     ffa:	f8 01       	movw	r30, r16
     ffc:	e1 5e       	subi	r30, 0xE1	; 225
     ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    1000:	91 a9       	ldd	r25, Z+49	; 0x31
    1002:	99 23       	and	r25, r25
    1004:	91 f0       	breq	.+36     	; 0x102a <cliUpdate+0x2b2>
    1006:	91 50       	subi	r25, 0x01	; 1
    1008:	91 ab       	std	Z+49, r25	; 0x31
    100a:	9b e1       	ldi	r25, 0x1B	; 27
    100c:	99 83       	std	Y+1, r25	; 0x01
    100e:	9b e5       	ldi	r25, 0x5B	; 91
    1010:	9a 83       	std	Y+2, r25	; 0x02
    1012:	8b 83       	std	Y+3, r24	; 0x03
    1014:	23 e0       	ldi	r18, 0x03	; 3
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	40 e0       	ldi	r20, 0x00	; 0
    101a:	50 e0       	ldi	r21, 0x00	; 0
    101c:	be 01       	movw	r22, r28
    101e:	6f 5f       	subi	r22, 0xFF	; 255
    1020:	7f 4f       	sbci	r23, 0xFF	; 255
    1022:	f8 01       	movw	r30, r16
    1024:	80 81       	ld	r24, Z
    1026:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
    102a:	89 85       	ldd	r24, Y+9	; 0x09
    102c:	83 34       	cpi	r24, 0x43	; 67
    102e:	c9 f4       	brne	.+50     	; 0x1062 <cliUpdate+0x2ea>
    1030:	f8 01       	movw	r30, r16
    1032:	e1 5e       	subi	r30, 0xE1	; 225
    1034:	fd 4f       	sbci	r31, 0xFD	; 253
    1036:	91 a9       	ldd	r25, Z+49	; 0x31
    1038:	22 a9       	ldd	r18, Z+50	; 0x32
    103a:	92 17       	cp	r25, r18
    103c:	90 f4       	brcc	.+36     	; 0x1062 <cliUpdate+0x2ea>
    103e:	9f 5f       	subi	r25, 0xFF	; 255
    1040:	91 ab       	std	Z+49, r25	; 0x31
    1042:	9b e1       	ldi	r25, 0x1B	; 27
    1044:	99 83       	std	Y+1, r25	; 0x01
    1046:	9b e5       	ldi	r25, 0x5B	; 91
    1048:	9a 83       	std	Y+2, r25	; 0x02
    104a:	8b 83       	std	Y+3, r24	; 0x03
    104c:	23 e0       	ldi	r18, 0x03	; 3
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	40 e0       	ldi	r20, 0x00	; 0
    1052:	50 e0       	ldi	r21, 0x00	; 0
    1054:	be 01       	movw	r22, r28
    1056:	6f 5f       	subi	r22, 0xFF	; 255
    1058:	7f 4f       	sbci	r23, 0xFF	; 255
    105a:	d8 01       	movw	r26, r16
    105c:	8c 91       	ld	r24, X
    105e:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
    1062:	89 85       	ldd	r24, Y+9	; 0x09
    1064:	81 34       	cpi	r24, 0x41	; 65
    1066:	89 f4       	brne	.+34     	; 0x108a <cliUpdate+0x312>
    1068:	61 e0       	ldi	r22, 0x01	; 1
    106a:	c8 01       	movw	r24, r16
    106c:	0e 94 15 05 	call	0xa2a	; 0xa2a <cliLineChange>
    1070:	c8 01       	movw	r24, r16
    1072:	81 5e       	subi	r24, 0xE1	; 225
    1074:	9d 4f       	sbci	r25, 0xFD	; 253
    1076:	9f 93       	push	r25
    1078:	8f 93       	push	r24
    107a:	f8 01       	movw	r30, r16
    107c:	80 81       	ld	r24, Z
    107e:	8f 93       	push	r24
    1080:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
    1084:	0f 90       	pop	r0
    1086:	0f 90       	pop	r0
    1088:	0f 90       	pop	r0
    108a:	89 85       	ldd	r24, Y+9	; 0x09
    108c:	82 34       	cpi	r24, 0x42	; 66
    108e:	89 f4       	brne	.+34     	; 0x10b2 <cliUpdate+0x33a>
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	c8 01       	movw	r24, r16
    1094:	0e 94 15 05 	call	0xa2a	; 0xa2a <cliLineChange>
    1098:	c8 01       	movw	r24, r16
    109a:	81 5e       	subi	r24, 0xE1	; 225
    109c:	9d 4f       	sbci	r25, 0xFD	; 253
    109e:	9f 93       	push	r25
    10a0:	8f 93       	push	r24
    10a2:	d8 01       	movw	r26, r16
    10a4:	8c 91       	ld	r24, X
    10a6:	8f 93       	push	r24
    10a8:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	89 85       	ldd	r24, Y+9	; 0x09
    10b4:	81 33       	cpi	r24, 0x31	; 49
    10b6:	e9 f4       	brne	.+58     	; 0x10f2 <cliUpdate+0x37a>
    10b8:	78 01       	movw	r14, r16
    10ba:	b1 ee       	ldi	r27, 0xE1	; 225
    10bc:	eb 1a       	sub	r14, r27
    10be:	bd ef       	ldi	r27, 0xFD	; 253
    10c0:	fb 0a       	sbc	r15, r27
    10c2:	f7 01       	movw	r30, r14
    10c4:	81 a9       	ldd	r24, Z+49	; 0x31
    10c6:	1f 92       	push	r1
    10c8:	8f 93       	push	r24
    10ca:	8e ec       	ldi	r24, 0xCE	; 206
    10cc:	9f ea       	ldi	r25, 0xAF	; 175
    10ce:	9f 93       	push	r25
    10d0:	8f 93       	push	r24
    10d2:	d8 01       	movw	r26, r16
    10d4:	8c 91       	ld	r24, X
    10d6:	8f 93       	push	r24
    10d8:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
    10dc:	f7 01       	movw	r30, r14
    10de:	11 aa       	std	Z+49, r1	; 0x31
    10e0:	84 e0       	ldi	r24, 0x04	; 4
    10e2:	d8 01       	movw	r26, r16
    10e4:	1c 96       	adiw	r26, 0x0c	; 12
    10e6:	8c 93       	st	X, r24
    10e8:	0f 90       	pop	r0
    10ea:	0f 90       	pop	r0
    10ec:	0f 90       	pop	r0
    10ee:	0f 90       	pop	r0
    10f0:	0f 90       	pop	r0
    10f2:	89 85       	ldd	r24, Y+9	; 0x09
    10f4:	84 33       	cpi	r24, 0x34	; 52
    10f6:	f1 f5       	brne	.+124    	; 0x1174 <cliUpdate+0x3fc>
    10f8:	f8 01       	movw	r30, r16
    10fa:	e1 5e       	subi	r30, 0xE1	; 225
    10fc:	fd 4f       	sbci	r31, 0xFD	; 253
    10fe:	21 a9       	ldd	r18, Z+49	; 0x31
    1100:	82 a9       	ldd	r24, Z+50	; 0x32
    1102:	28 17       	cp	r18, r24
    1104:	98 f4       	brcc	.+38     	; 0x112c <cliUpdate+0x3b4>
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	82 1b       	sub	r24, r18
    110a:	91 09       	sbc	r25, r1
    110c:	9f 93       	push	r25
    110e:	8f 93       	push	r24
    1110:	81 ee       	ldi	r24, 0xE1	; 225
    1112:	9f ea       	ldi	r25, 0xAF	; 175
    1114:	9f 93       	push	r25
    1116:	8f 93       	push	r24
    1118:	f8 01       	movw	r30, r16
    111a:	80 81       	ld	r24, Z
    111c:	8f 93       	push	r24
    111e:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
    1122:	0f 90       	pop	r0
    1124:	0f 90       	pop	r0
    1126:	0f 90       	pop	r0
    1128:	0f 90       	pop	r0
    112a:	0f 90       	pop	r0
    112c:	f8 01       	movw	r30, r16
    112e:	e1 5e       	subi	r30, 0xE1	; 225
    1130:	fd 4f       	sbci	r31, 0xFD	; 253
    1132:	81 a9       	ldd	r24, Z+49	; 0x31
    1134:	22 a9       	ldd	r18, Z+50	; 0x32
    1136:	28 17       	cp	r18, r24
    1138:	98 f4       	brcc	.+38     	; 0x1160 <cliUpdate+0x3e8>
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	82 1b       	sub	r24, r18
    113e:	91 09       	sbc	r25, r1
    1140:	9f 93       	push	r25
    1142:	8f 93       	push	r24
    1144:	8e ec       	ldi	r24, 0xCE	; 206
    1146:	9f ea       	ldi	r25, 0xAF	; 175
    1148:	9f 93       	push	r25
    114a:	8f 93       	push	r24
    114c:	d8 01       	movw	r26, r16
    114e:	8c 91       	ld	r24, X
    1150:	8f 93       	push	r24
    1152:	0e 94 04 10 	call	0x2008	; 0x2008 <uartPrintf>
    1156:	0f 90       	pop	r0
    1158:	0f 90       	pop	r0
    115a:	0f 90       	pop	r0
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	f8 01       	movw	r30, r16
    1162:	e1 5e       	subi	r30, 0xE1	; 225
    1164:	fd 4f       	sbci	r31, 0xFD	; 253
    1166:	82 a9       	ldd	r24, Z+50	; 0x32
    1168:	81 ab       	std	Z+49, r24	; 0x31
    116a:	84 e0       	ldi	r24, 0x04	; 4
    116c:	f8 01       	movw	r30, r16
    116e:	84 87       	std	Z+12, r24	; 0x0c
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <cliUpdate+0x3fc>
    1172:	14 86       	std	Z+12, r1	; 0x0c
    1174:	80 e0       	ldi	r24, 0x00	; 0
    1176:	29 96       	adiw	r28, 0x09	; 9
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	df 91       	pop	r29
    117e:	cf 91       	pop	r28
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	ff 90       	pop	r15
    1186:	ef 90       	pop	r14
    1188:	08 95       	ret

0000118a <cliMain>:
    118a:	cf 93       	push	r28
    118c:	c0 91 0b 38 	lds	r28, 0x380B	; 0x80380b <cli_node+0x5>
    1190:	cc 23       	and	r28, r28
    1192:	89 f0       	breq	.+34     	; 0x11b6 <cliMain+0x2c>
    1194:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
    1198:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <uartAvailable>
    119c:	67 2b       	or	r22, r23
    119e:	68 2b       	or	r22, r24
    11a0:	69 2b       	or	r22, r25
    11a2:	49 f0       	breq	.+18     	; 0x11b6 <cliMain+0x2c>
    11a4:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <cli_node>
    11a8:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <uartRead>
    11ac:	68 2f       	mov	r22, r24
    11ae:	86 e0       	ldi	r24, 0x06	; 6
    11b0:	98 e3       	ldi	r25, 0x38	; 56
    11b2:	0e 94 bc 06 	call	0xd78	; 0xd78 <cliUpdate>
    11b6:	8c 2f       	mov	r24, r28
    11b8:	cf 91       	pop	r28
    11ba:	08 95       	ret

000011bc <cliShowList>:
    11bc:	cf 93       	push	r28
    11be:	df 93       	push	r29
    11c0:	89 e5       	ldi	r24, 0x59	; 89
    11c2:	91 e0       	ldi	r25, 0x01	; 1
    11c4:	9f 93       	push	r25
    11c6:	8f 93       	push	r24
    11c8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    11cc:	89 e3       	ldi	r24, 0x39	; 57
    11ce:	91 e0       	ldi	r25, 0x01	; 1
    11d0:	9f 93       	push	r25
    11d2:	8f 93       	push	r24
    11d4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    11d8:	0f 90       	pop	r0
    11da:	0f 90       	pop	r0
    11dc:	0f 90       	pop	r0
    11de:	0f 90       	pop	r0
    11e0:	c0 e0       	ldi	r28, 0x00	; 0
    11e2:	d0 e0       	ldi	r29, 0x00	; 0
    11e4:	18 c0       	rjmp	.+48     	; 0x1216 <cliShowList+0x5a>
    11e6:	ce 01       	movw	r24, r28
    11e8:	82 95       	swap	r24
    11ea:	92 95       	swap	r25
    11ec:	90 7f       	andi	r25, 0xF0	; 240
    11ee:	98 27       	eor	r25, r24
    11f0:	80 7f       	andi	r24, 0xF0	; 240
    11f2:	98 27       	eor	r25, r24
    11f4:	86 5a       	subi	r24, 0xA6	; 166
    11f6:	95 4c       	sbci	r25, 0xC5	; 197
    11f8:	9f 93       	push	r25
    11fa:	8f 93       	push	r24
    11fc:	0e 94 0f 06 	call	0xc1e	; 0xc1e <cliPrintf>
    1200:	86 e3       	ldi	r24, 0x36	; 54
    1202:	91 e0       	ldi	r25, 0x01	; 1
    1204:	9f 93       	push	r25
    1206:	8f 93       	push	r24
    1208:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    120c:	21 96       	adiw	r28, 0x01	; 1
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0
    1212:	0f 90       	pop	r0
    1214:	0f 90       	pop	r0
    1216:	80 91 58 3a 	lds	r24, 0x3A58	; 0x803a58 <cli_node+0x252>
    121a:	90 91 59 3a 	lds	r25, 0x3A59	; 0x803a59 <cli_node+0x253>
    121e:	c8 17       	cp	r28, r24
    1220:	d9 07       	cpc	r29, r25
    1222:	08 f3       	brcs	.-62     	; 0x11e6 <cliShowList+0x2a>
    1224:	86 e1       	ldi	r24, 0x16	; 22
    1226:	91 e0       	ldi	r25, 0x01	; 1
    1228:	9f 93       	push	r25
    122a:	8f 93       	push	r24
    122c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1230:	0f 90       	pop	r0
    1232:	0f 90       	pop	r0
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	08 95       	ret

0000123a <cliMemoryDump>:
    123a:	6f 92       	push	r6
    123c:	7f 92       	push	r7
    123e:	8f 92       	push	r8
    1240:	9f 92       	push	r9
    1242:	af 92       	push	r10
    1244:	bf 92       	push	r11
    1246:	cf 92       	push	r12
    1248:	df 92       	push	r13
    124a:	ef 92       	push	r14
    124c:	ff 92       	push	r15
    124e:	0f 93       	push	r16
    1250:	1f 93       	push	r17
    1252:	cf 93       	push	r28
    1254:	df 93       	push	r29
    1256:	00 d0       	rcall	.+0      	; 0x1258 <cliMemoryDump+0x1e>
    1258:	00 d0       	rcall	.+0      	; 0x125a <cliMemoryDump+0x20>
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	fc 01       	movw	r30, r24
    1260:	20 81       	ld	r18, Z
    1262:	31 81       	ldd	r19, Z+1	; 0x01
    1264:	02 81       	ldd	r16, Z+2	; 0x02
    1266:	13 81       	ldd	r17, Z+3	; 0x03
    1268:	21 15       	cp	r18, r1
    126a:	31 05       	cpc	r19, r1
    126c:	49 f4       	brne	.+18     	; 0x1280 <cliMemoryDump+0x46>
    126e:	82 e0       	ldi	r24, 0x02	; 2
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	9f 93       	push	r25
    1274:	8f 93       	push	r24
    1276:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    127a:	0f 90       	pop	r0
    127c:	0f 90       	pop	r0
    127e:	a8 c0       	rjmp	.+336    	; 0x13d0 <cliMemoryDump+0x196>
    1280:	22 30       	cpi	r18, 0x02	; 2
    1282:	31 05       	cpc	r19, r1
    1284:	5c f0       	brlt	.+22     	; 0x129c <cliMemoryDump+0x62>
    1286:	40 e0       	ldi	r20, 0x00	; 0
    1288:	50 e0       	ldi	r21, 0x00	; 0
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	70 e0       	ldi	r23, 0x00	; 0
    128e:	f8 01       	movw	r30, r16
    1290:	82 81       	ldd	r24, Z+2	; 0x02
    1292:	93 81       	ldd	r25, Z+3	; 0x03
    1294:	0e 94 07 12 	call	0x240e	; 0x240e <strtoul>
    1298:	3b 01       	movw	r6, r22
    129a:	04 c0       	rjmp	.+8      	; 0x12a4 <cliMemoryDump+0x6a>
    129c:	68 94       	set
    129e:	66 24       	eor	r6, r6
    12a0:	64 f8       	bld	r6, 4
    12a2:	71 2c       	mov	r7, r1
    12a4:	f8 01       	movw	r30, r16
    12a6:	80 81       	ld	r24, Z
    12a8:	91 81       	ldd	r25, Z+1	; 0x01
    12aa:	0e 94 fc 12 	call	0x25f8	; 0x25f8 <atoi>
    12ae:	6c 01       	movw	r12, r24
    12b0:	87 ee       	ldi	r24, 0xE7	; 231
    12b2:	9f ea       	ldi	r25, 0xAF	; 175
    12b4:	9f 93       	push	r25
    12b6:	8f 93       	push	r24
    12b8:	0e 94 0f 06 	call	0xc1e	; 0xc1e <cliPrintf>
    12bc:	0f 90       	pop	r0
    12be:	0f 90       	pop	r0
    12c0:	46 01       	movw	r8, r12
    12c2:	e1 2c       	mov	r14, r1
    12c4:	f1 2c       	mov	r15, r1
    12c6:	80 c0       	rjmp	.+256    	; 0x13c8 <cliMemoryDump+0x18e>
    12c8:	c7 01       	movw	r24, r14
    12ca:	83 70       	andi	r24, 0x03	; 3
    12cc:	99 27       	eor	r25, r25
    12ce:	89 2b       	or	r24, r25
    12d0:	61 f4       	brne	.+24     	; 0x12ea <cliMemoryDump+0xb0>
    12d2:	df 92       	push	r13
    12d4:	cf 92       	push	r12
    12d6:	88 ef       	ldi	r24, 0xF8	; 248
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	9f 93       	push	r25
    12dc:	8f 93       	push	r24
    12de:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
    12e8:	0f 90       	pop	r0
    12ea:	f6 01       	movw	r30, r12
    12ec:	81 81       	ldd	r24, Z+1	; 0x01
    12ee:	8f 93       	push	r24
    12f0:	80 81       	ld	r24, Z
    12f2:	8f 93       	push	r24
    12f4:	80 ef       	ldi	r24, 0xF0	; 240
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	9f 93       	push	r25
    12fa:	8f 93       	push	r24
    12fc:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1300:	c7 01       	movw	r24, r14
    1302:	83 70       	andi	r24, 0x03	; 3
    1304:	90 78       	andi	r25, 0x80	; 128
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	0f 90       	pop	r0
    130e:	99 23       	and	r25, r25
    1310:	24 f4       	brge	.+8      	; 0x131a <cliMemoryDump+0xe0>
    1312:	01 97       	sbiw	r24, 0x01	; 1
    1314:	8c 6f       	ori	r24, 0xFC	; 252
    1316:	9f 6f       	ori	r25, 0xFF	; 255
    1318:	01 96       	adiw	r24, 0x01	; 1
    131a:	03 97       	sbiw	r24, 0x03	; 3
    131c:	09 f0       	breq	.+2      	; 0x1320 <cliMemoryDump+0xe6>
    131e:	4e c0       	rjmp	.+156    	; 0x13bc <cliMemoryDump+0x182>
    1320:	8c ee       	ldi	r24, 0xEC	; 236
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	9f 93       	push	r25
    1326:	8f 93       	push	r24
    1328:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    132c:	0f 90       	pop	r0
    132e:	0f 90       	pop	r0
    1330:	a1 2c       	mov	r10, r1
    1332:	b1 2c       	mov	r11, r1
    1334:	37 c0       	rjmp	.+110    	; 0x13a4 <cliMemoryDump+0x16a>
    1336:	f4 01       	movw	r30, r8
    1338:	80 81       	ld	r24, Z
    133a:	91 81       	ldd	r25, Z+1	; 0x01
    133c:	a2 81       	ldd	r26, Z+2	; 0x02
    133e:	b3 81       	ldd	r27, Z+3	; 0x03
    1340:	89 83       	std	Y+1, r24	; 0x01
    1342:	9a 83       	std	Y+2, r25	; 0x02
    1344:	ab 83       	std	Y+3, r26	; 0x03
    1346:	bc 83       	std	Y+4, r27	; 0x04
    1348:	00 e0       	ldi	r16, 0x00	; 0
    134a:	10 e0       	ldi	r17, 0x00	; 0
    134c:	22 c0       	rjmp	.+68     	; 0x1392 <cliMemoryDump+0x158>
    134e:	e1 e0       	ldi	r30, 0x01	; 1
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	ec 0f       	add	r30, r28
    1354:	fd 1f       	adc	r31, r29
    1356:	e0 0f       	add	r30, r16
    1358:	f1 1f       	adc	r31, r17
    135a:	80 81       	ld	r24, Z
    135c:	90 ee       	ldi	r25, 0xE0	; 224
    135e:	98 0f       	add	r25, r24
    1360:	9f 35       	cpi	r25, 0x5F	; 95
    1362:	68 f4       	brcc	.+26     	; 0x137e <cliMemoryDump+0x144>
    1364:	1f 92       	push	r1
    1366:	8f 93       	push	r24
    1368:	89 ee       	ldi	r24, 0xE9	; 233
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	9f 93       	push	r25
    136e:	8f 93       	push	r24
    1370:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1374:	0f 90       	pop	r0
    1376:	0f 90       	pop	r0
    1378:	0f 90       	pop	r0
    137a:	0f 90       	pop	r0
    137c:	08 c0       	rjmp	.+16     	; 0x138e <cliMemoryDump+0x154>
    137e:	87 ee       	ldi	r24, 0xE7	; 231
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	9f 93       	push	r25
    1384:	8f 93       	push	r24
    1386:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    138a:	0f 90       	pop	r0
    138c:	0f 90       	pop	r0
    138e:	0f 5f       	subi	r16, 0xFF	; 255
    1390:	1f 4f       	sbci	r17, 0xFF	; 255
    1392:	04 30       	cpi	r16, 0x04	; 4
    1394:	11 05       	cpc	r17, r1
    1396:	dc f2       	brlt	.-74     	; 0x134e <cliMemoryDump+0x114>
    1398:	f2 e0       	ldi	r31, 0x02	; 2
    139a:	8f 0e       	add	r8, r31
    139c:	91 1c       	adc	r9, r1
    139e:	8f ef       	ldi	r24, 0xFF	; 255
    13a0:	a8 1a       	sub	r10, r24
    13a2:	b8 0a       	sbc	r11, r24
    13a4:	e4 e0       	ldi	r30, 0x04	; 4
    13a6:	ae 16       	cp	r10, r30
    13a8:	b1 04       	cpc	r11, r1
    13aa:	2c f2       	brlt	.-118    	; 0x1336 <cliMemoryDump+0xfc>
    13ac:	81 ee       	ldi	r24, 0xE1	; 225
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	9f 93       	push	r25
    13b2:	8f 93       	push	r24
    13b4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    13b8:	0f 90       	pop	r0
    13ba:	0f 90       	pop	r0
    13bc:	f2 e0       	ldi	r31, 0x02	; 2
    13be:	cf 0e       	add	r12, r31
    13c0:	d1 1c       	adc	r13, r1
    13c2:	8f ef       	ldi	r24, 0xFF	; 255
    13c4:	e8 1a       	sub	r14, r24
    13c6:	f8 0a       	sbc	r15, r24
    13c8:	e6 14       	cp	r14, r6
    13ca:	f7 04       	cpc	r15, r7
    13cc:	0c f4       	brge	.+2      	; 0x13d0 <cliMemoryDump+0x196>
    13ce:	7c cf       	rjmp	.-264    	; 0x12c8 <cliMemoryDump+0x8e>
    13d0:	24 96       	adiw	r28, 0x04	; 4
    13d2:	cd bf       	out	0x3d, r28	; 61
    13d4:	de bf       	out	0x3e, r29	; 62
    13d6:	df 91       	pop	r29
    13d8:	cf 91       	pop	r28
    13da:	1f 91       	pop	r17
    13dc:	0f 91       	pop	r16
    13de:	ff 90       	pop	r15
    13e0:	ef 90       	pop	r14
    13e2:	df 90       	pop	r13
    13e4:	cf 90       	pop	r12
    13e6:	bf 90       	pop	r11
    13e8:	af 90       	pop	r10
    13ea:	9f 90       	pop	r9
    13ec:	8f 90       	pop	r8
    13ee:	7f 90       	pop	r7
    13f0:	6f 90       	pop	r6
    13f2:	08 95       	ret

000013f4 <cliMemoryDump_P>:
    13f4:	2f 92       	push	r2
    13f6:	3f 92       	push	r3
    13f8:	4f 92       	push	r4
    13fa:	5f 92       	push	r5
    13fc:	6f 92       	push	r6
    13fe:	7f 92       	push	r7
    1400:	8f 92       	push	r8
    1402:	9f 92       	push	r9
    1404:	af 92       	push	r10
    1406:	bf 92       	push	r11
    1408:	cf 92       	push	r12
    140a:	df 92       	push	r13
    140c:	ef 92       	push	r14
    140e:	ff 92       	push	r15
    1410:	0f 93       	push	r16
    1412:	1f 93       	push	r17
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	00 d0       	rcall	.+0      	; 0x141a <cliMemoryDump_P+0x26>
    141a:	00 d0       	rcall	.+0      	; 0x141c <cliMemoryDump_P+0x28>
    141c:	cd b7       	in	r28, 0x3d	; 61
    141e:	de b7       	in	r29, 0x3e	; 62
    1420:	fc 01       	movw	r30, r24
    1422:	20 81       	ld	r18, Z
    1424:	31 81       	ldd	r19, Z+1	; 0x01
    1426:	02 81       	ldd	r16, Z+2	; 0x02
    1428:	13 81       	ldd	r17, Z+3	; 0x03
    142a:	21 15       	cp	r18, r1
    142c:	31 05       	cpc	r19, r1
    142e:	49 f4       	brne	.+18     	; 0x1442 <cliMemoryDump_P+0x4e>
    1430:	8c ec       	ldi	r24, 0xCC	; 204
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	9f 93       	push	r25
    1436:	8f 93       	push	r24
    1438:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    143c:	0f 90       	pop	r0
    143e:	0f 90       	pop	r0
    1440:	a2 c0       	rjmp	.+324    	; 0x1586 <cliMemoryDump_P+0x192>
    1442:	22 30       	cpi	r18, 0x02	; 2
    1444:	31 05       	cpc	r19, r1
    1446:	5c f0       	brlt	.+22     	; 0x145e <cliMemoryDump_P+0x6a>
    1448:	40 e0       	ldi	r20, 0x00	; 0
    144a:	50 e0       	ldi	r21, 0x00	; 0
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	70 e0       	ldi	r23, 0x00	; 0
    1450:	f8 01       	movw	r30, r16
    1452:	82 81       	ldd	r24, Z+2	; 0x02
    1454:	93 81       	ldd	r25, Z+3	; 0x03
    1456:	0e 94 07 12 	call	0x240e	; 0x240e <strtoul>
    145a:	1b 01       	movw	r2, r22
    145c:	04 c0       	rjmp	.+8      	; 0x1466 <cliMemoryDump_P+0x72>
    145e:	68 94       	set
    1460:	22 24       	eor	r2, r2
    1462:	24 f8       	bld	r2, 4
    1464:	31 2c       	mov	r3, r1
    1466:	40 e0       	ldi	r20, 0x00	; 0
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	60 e0       	ldi	r22, 0x00	; 0
    146c:	70 e0       	ldi	r23, 0x00	; 0
    146e:	f8 01       	movw	r30, r16
    1470:	80 81       	ld	r24, Z
    1472:	91 81       	ldd	r25, Z+1	; 0x01
    1474:	0e 94 07 12 	call	0x240e	; 0x240e <strtoul>
    1478:	4b 01       	movw	r8, r22
    147a:	5c 01       	movw	r10, r24
    147c:	87 ee       	ldi	r24, 0xE7	; 231
    147e:	9f ea       	ldi	r25, 0xAF	; 175
    1480:	9f 93       	push	r25
    1482:	8f 93       	push	r24
    1484:	0e 94 0f 06 	call	0xc1e	; 0xc1e <cliPrintf>
    1488:	0f 90       	pop	r0
    148a:	0f 90       	pop	r0
    148c:	24 01       	movw	r4, r8
    148e:	35 01       	movw	r6, r10
    1490:	e1 2c       	mov	r14, r1
    1492:	f1 2c       	mov	r15, r1
    1494:	74 c0       	rjmp	.+232    	; 0x157e <cliMemoryDump_P+0x18a>
    1496:	c7 01       	movw	r24, r14
    1498:	83 70       	andi	r24, 0x03	; 3
    149a:	99 27       	eor	r25, r25
    149c:	89 2b       	or	r24, r25
    149e:	61 f4       	brne	.+24     	; 0x14b8 <cliMemoryDump_P+0xc4>
    14a0:	9f 92       	push	r9
    14a2:	8f 92       	push	r8
    14a4:	82 ec       	ldi	r24, 0xC2	; 194
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	9f 93       	push	r25
    14aa:	8f 93       	push	r24
    14ac:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    14b0:	0f 90       	pop	r0
    14b2:	0f 90       	pop	r0
    14b4:	0f 90       	pop	r0
    14b6:	0f 90       	pop	r0
    14b8:	c7 01       	movw	r24, r14
    14ba:	83 70       	andi	r24, 0x03	; 3
    14bc:	90 78       	andi	r25, 0x80	; 128
    14be:	99 23       	and	r25, r25
    14c0:	24 f4       	brge	.+8      	; 0x14ca <cliMemoryDump_P+0xd6>
    14c2:	01 97       	sbiw	r24, 0x01	; 1
    14c4:	8c 6f       	ori	r24, 0xFC	; 252
    14c6:	9f 6f       	ori	r25, 0xFF	; 255
    14c8:	01 96       	adiw	r24, 0x01	; 1
    14ca:	03 97       	sbiw	r24, 0x03	; 3
    14cc:	09 f0       	breq	.+2      	; 0x14d0 <cliMemoryDump_P+0xdc>
    14ce:	4f c0       	rjmp	.+158    	; 0x156e <cliMemoryDump_P+0x17a>
    14d0:	8e eb       	ldi	r24, 0xBE	; 190
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	9f 93       	push	r25
    14d6:	8f 93       	push	r24
    14d8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    14dc:	0f 90       	pop	r0
    14de:	0f 90       	pop	r0
    14e0:	c1 2c       	mov	r12, r1
    14e2:	d1 2c       	mov	r13, r1
    14e4:	38 c0       	rjmp	.+112    	; 0x1556 <cliMemoryDump_P+0x162>
    14e6:	24 e0       	ldi	r18, 0x04	; 4
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	b3 01       	movw	r22, r6
    14ec:	a2 01       	movw	r20, r4
    14ee:	ce 01       	movw	r24, r28
    14f0:	01 96       	adiw	r24, 0x01	; 1
    14f2:	0e 94 c4 02 	call	0x588	; 0x588 <memcpy_PF>
    14f6:	00 e0       	ldi	r16, 0x00	; 0
    14f8:	10 e0       	ldi	r17, 0x00	; 0
    14fa:	22 c0       	rjmp	.+68     	; 0x1540 <cliMemoryDump_P+0x14c>
    14fc:	e1 e0       	ldi	r30, 0x01	; 1
    14fe:	f0 e0       	ldi	r31, 0x00	; 0
    1500:	ec 0f       	add	r30, r28
    1502:	fd 1f       	adc	r31, r29
    1504:	e0 0f       	add	r30, r16
    1506:	f1 1f       	adc	r31, r17
    1508:	80 81       	ld	r24, Z
    150a:	90 ee       	ldi	r25, 0xE0	; 224
    150c:	98 0f       	add	r25, r24
    150e:	9f 35       	cpi	r25, 0x5F	; 95
    1510:	68 f4       	brcc	.+26     	; 0x152c <cliMemoryDump_P+0x138>
    1512:	1f 92       	push	r1
    1514:	8f 93       	push	r24
    1516:	8b eb       	ldi	r24, 0xBB	; 187
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	9f 93       	push	r25
    151c:	8f 93       	push	r24
    151e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1522:	0f 90       	pop	r0
    1524:	0f 90       	pop	r0
    1526:	0f 90       	pop	r0
    1528:	0f 90       	pop	r0
    152a:	08 c0       	rjmp	.+16     	; 0x153c <cliMemoryDump_P+0x148>
    152c:	89 eb       	ldi	r24, 0xB9	; 185
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	9f 93       	push	r25
    1532:	8f 93       	push	r24
    1534:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1538:	0f 90       	pop	r0
    153a:	0f 90       	pop	r0
    153c:	0f 5f       	subi	r16, 0xFF	; 255
    153e:	1f 4f       	sbci	r17, 0xFF	; 255
    1540:	04 30       	cpi	r16, 0x04	; 4
    1542:	11 05       	cpc	r17, r1
    1544:	dc f2       	brlt	.-74     	; 0x14fc <cliMemoryDump_P+0x108>
    1546:	f4 e0       	ldi	r31, 0x04	; 4
    1548:	4f 0e       	add	r4, r31
    154a:	51 1c       	adc	r5, r1
    154c:	61 1c       	adc	r6, r1
    154e:	71 1c       	adc	r7, r1
    1550:	8f ef       	ldi	r24, 0xFF	; 255
    1552:	c8 1a       	sub	r12, r24
    1554:	d8 0a       	sbc	r13, r24
    1556:	e4 e0       	ldi	r30, 0x04	; 4
    1558:	ce 16       	cp	r12, r30
    155a:	d1 04       	cpc	r13, r1
    155c:	24 f2       	brlt	.-120    	; 0x14e6 <cliMemoryDump_P+0xf2>
    155e:	83 eb       	ldi	r24, 0xB3	; 179
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	9f 93       	push	r25
    1564:	8f 93       	push	r24
    1566:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    156a:	0f 90       	pop	r0
    156c:	0f 90       	pop	r0
    156e:	f4 e0       	ldi	r31, 0x04	; 4
    1570:	8f 0e       	add	r8, r31
    1572:	91 1c       	adc	r9, r1
    1574:	a1 1c       	adc	r10, r1
    1576:	b1 1c       	adc	r11, r1
    1578:	8f ef       	ldi	r24, 0xFF	; 255
    157a:	e8 1a       	sub	r14, r24
    157c:	f8 0a       	sbc	r15, r24
    157e:	e2 14       	cp	r14, r2
    1580:	f3 04       	cpc	r15, r3
    1582:	0c f4       	brge	.+2      	; 0x1586 <cliMemoryDump_P+0x192>
    1584:	88 cf       	rjmp	.-240    	; 0x1496 <cliMemoryDump_P+0xa2>
    1586:	24 96       	adiw	r28, 0x04	; 4
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	de bf       	out	0x3e, r29	; 62
    158c:	df 91       	pop	r29
    158e:	cf 91       	pop	r28
    1590:	1f 91       	pop	r17
    1592:	0f 91       	pop	r16
    1594:	ff 90       	pop	r15
    1596:	ef 90       	pop	r14
    1598:	df 90       	pop	r13
    159a:	cf 90       	pop	r12
    159c:	bf 90       	pop	r11
    159e:	af 90       	pop	r10
    15a0:	9f 90       	pop	r9
    15a2:	8f 90       	pop	r8
    15a4:	7f 90       	pop	r7
    15a6:	6f 90       	pop	r6
    15a8:	5f 90       	pop	r5
    15aa:	4f 90       	pop	r4
    15ac:	3f 90       	pop	r3
    15ae:	2f 90       	pop	r2
    15b0:	08 95       	ret

000015b2 <cliAdd>:

bool cliAdd(const char *cmd_str, void (*p_func)(cli_args_t *))
{
    15b2:	ef 92       	push	r14
    15b4:	ff 92       	push	r15
    15b6:	0f 93       	push	r16
    15b8:	1f 93       	push	r17
    15ba:	cf 93       	push	r28
    15bc:	df 93       	push	r29
	bool ret = true;
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
    15be:	20 91 58 3a 	lds	r18, 0x3A58	; 0x803a58 <cli_node+0x252>
    15c2:	30 91 59 3a 	lds	r19, 0x3A59	; 0x803a59 <cli_node+0x253>
    15c6:	20 31       	cpi	r18, 0x10	; 16
    15c8:	31 05       	cpc	r19, r1
    15ca:	f8 f4       	brcc	.+62     	; 0x160a <cliAdd+0x58>
    15cc:	8b 01       	movw	r16, r22
    15ce:	bc 01       	movw	r22, r24
		return false;
	}

	index = p_cli->cmd_count;

	strcpy(p_cli->cmd_list[index].cmd_str, cmd_str);
    15d0:	e9 01       	movw	r28, r18
    15d2:	c2 95       	swap	r28
    15d4:	d2 95       	swap	r29
    15d6:	d0 7f       	andi	r29, 0xF0	; 240
    15d8:	dc 27       	eor	r29, r28
    15da:	c0 7f       	andi	r28, 0xF0	; 240
    15dc:	dc 27       	eor	r29, r28
    15de:	ce 01       	movw	r24, r28
    15e0:	86 5a       	subi	r24, 0xA6	; 166
    15e2:	95 4c       	sbci	r25, 0xC5	; 197
    15e4:	7c 01       	movw	r14, r24
    15e6:	0e 94 44 13 	call	0x2688	; 0x2688 <strcpy>
	p_cli->cmd_list[index].cmd_func = p_func;
    15ea:	c8 59       	subi	r28, 0x98	; 152
    15ec:	d5 4c       	sbci	r29, 0xC5	; 197
    15ee:	08 83       	st	Y, r16
    15f0:	19 83       	std	Y+1, r17	; 0x01

	cliToUpper(p_cli->cmd_list[index].cmd_str);
    15f2:	c7 01       	movw	r24, r14
    15f4:	0e 94 8a 04 	call	0x914	; 0x914 <cliToUpper>

	p_cli->cmd_count++;
    15f8:	e8 e5       	ldi	r30, 0x58	; 88
    15fa:	fa e3       	ldi	r31, 0x3A	; 58
    15fc:	80 81       	ld	r24, Z
    15fe:	91 81       	ldd	r25, Z+1	; 0x01
    1600:	01 96       	adiw	r24, 0x01	; 1
    1602:	80 83       	st	Z, r24
    1604:	91 83       	std	Z+1, r25	; 0x01

	return ret;
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	01 c0       	rjmp	.+2      	; 0x160c <cliAdd+0x5a>
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
	{
		return false;
    160a:	80 e0       	ldi	r24, 0x00	; 0
	cliToUpper(p_cli->cmd_list[index].cmd_str);

	p_cli->cmd_count++;

	return ret;
}
    160c:	df 91       	pop	r29
    160e:	cf 91       	pop	r28
    1610:	1f 91       	pop	r17
    1612:	0f 91       	pop	r16
    1614:	ff 90       	pop	r15
    1616:	ef 90       	pop	r14
    1618:	08 95       	ret

0000161a <cliInit>:
void cliMemoryDump_P(cli_args_t *args);


bool cliInit(void)
{
	cli_node.is_open = false;
    161a:	e6 e0       	ldi	r30, 0x06	; 6
    161c:	f8 e3       	ldi	r31, 0x38	; 56
    161e:	15 82       	std	Z+5, r1	; 0x05
	cli_node.is_log  = false;
    1620:	16 82       	std	Z+6, r1	; 0x06
	cli_node.state   = CLI_RX_IDLE;
    1622:	14 86       	std	Z+12, r1	; 0x0c

	cli_node.hist_line_i     = 0;
    1624:	10 92 56 39 	sts	0x3956, r1	; 0x803956 <cli_node+0x150>
	cli_node.hist_line_last  = 0;
    1628:	10 92 57 39 	sts	0x3957, r1	; 0x803957 <cli_node+0x151>
	cli_node.hist_line_count = 0;
    162c:	10 92 58 39 	sts	0x3958, r1	; 0x803958 <cli_node+0x152>
	cli_node.hist_line_new   = false;
    1630:	10 92 55 39 	sts	0x3955, r1	; 0x803955 <cli_node+0x14f>

	cli_node.cmd_args.getData  = cliArgsGetData;
    1634:	87 ef       	ldi	r24, 0xF7	; 247
    1636:	94 e0       	ldi	r25, 0x04	; 4
    1638:	80 93 5e 3b 	sts	0x3B5E, r24	; 0x803b5e <cli_node+0x358>
    163c:	90 93 5f 3b 	sts	0x3B5F, r25	; 0x803b5f <cli_node+0x359>
	cli_node.cmd_args.getFloat = cliArgsGetFloat;
    1640:	8c ed       	ldi	r24, 0xDC	; 220
    1642:	94 e0       	ldi	r25, 0x04	; 4
    1644:	80 93 60 3b 	sts	0x3B60, r24	; 0x803b60 <cli_node+0x35a>
    1648:	90 93 61 3b 	sts	0x3B61, r25	; 0x803b61 <cli_node+0x35b>
	cli_node.cmd_args.getStr   = cliArgsGetStr;
    164c:	88 ea       	ldi	r24, 0xA8	; 168
    164e:	94 e0       	ldi	r25, 0x04	; 4
    1650:	80 93 62 3b 	sts	0x3B62, r24	; 0x803b62 <cli_node+0x35c>
    1654:	90 93 63 3b 	sts	0x3B63, r25	; 0x803b63 <cli_node+0x35d>
	cli_node.cmd_args.isStr    = cliArgsIsStr;
    1658:	8e eb       	ldi	r24, 0xBE	; 190
    165a:	94 e0       	ldi	r25, 0x04	; 4
    165c:	80 93 64 3b 	sts	0x3B64, r24	; 0x803b64 <cli_node+0x35e>
    1660:	90 93 65 3b 	sts	0x3B65, r25	; 0x803b65 <cli_node+0x35f>

	cliLineClean(&cli_node);
    1664:	cf 01       	movw	r24, r30
    1666:	0e 94 48 04 	call	0x890	; 0x890 <cliLineClean>


	cliAdd("help", cliShowList);
    166a:	6e ed       	ldi	r22, 0xDE	; 222
    166c:	78 e0       	ldi	r23, 0x08	; 8
    166e:	8c ee       	ldi	r24, 0xEC	; 236
    1670:	9f ea       	ldi	r25, 0xAF	; 175
    1672:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <cliAdd>
	cliAdd("md"  , cliMemoryDump);
    1676:	6d e1       	ldi	r22, 0x1D	; 29
    1678:	79 e0       	ldi	r23, 0x09	; 9
    167a:	81 ef       	ldi	r24, 0xF1	; 241
    167c:	9f ea       	ldi	r25, 0xAF	; 175
    167e:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <cliAdd>
	cliAdd("mdp" , cliMemoryDump_P);
    1682:	6a ef       	ldi	r22, 0xFA	; 250
    1684:	79 e0       	ldi	r23, 0x09	; 9
    1686:	84 ef       	ldi	r24, 0xF4	; 244
    1688:	9f ea       	ldi	r25, 0xAF	; 175
    168a:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <cliAdd>

	return true;
}
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	08 95       	ret

00001692 <cliInfo>:

	 return true;
 }

 void cliInfo(cli_args_t *args)
 {
    1692:	cf 92       	push	r12
    1694:	df 92       	push	r13
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	ec 97       	sbiw	r28, 0x3c	; 60
    16a8:	cd bf       	out	0x3d, r28	; 61
    16aa:	de bf       	out	0x3e, r29	; 62
	 bool ret = false;

	 if (args->argc == 1 && args->isStr(0, "fuse") == true)
    16ac:	dc 01       	movw	r26, r24
    16ae:	2d 91       	ld	r18, X+
    16b0:	3c 91       	ld	r19, X
    16b2:	11 97       	sbiw	r26, 0x01	; 1
    16b4:	21 30       	cpi	r18, 0x01	; 1
    16b6:	31 05       	cpc	r19, r1
    16b8:	09 f0       	breq	.+2      	; 0x16bc <cliInfo+0x2a>
    16ba:	37 c2       	rjmp	.+1134   	; 0x1b2a <cliInfo+0x498>
    16bc:	1a 96       	adiw	r26, 0x0a	; 10
    16be:	ed 91       	ld	r30, X+
    16c0:	fc 91       	ld	r31, X
    16c2:	1b 97       	sbiw	r26, 0x0b	; 11
    16c4:	68 ef       	ldi	r22, 0xF8	; 248
    16c6:	7f ea       	ldi	r23, 0xAF	; 175
    16c8:	80 e0       	ldi	r24, 0x00	; 0
    16ca:	09 95       	icall
    16cc:	88 23       	and	r24, r24
    16ce:	09 f4       	brne	.+2      	; 0x16d2 <cliInfo+0x40>
    16d0:	2e c2       	rjmp	.+1116   	; 0x1b2e <cliInfo+0x49c>
	 {
		 cliPrintf_P(PSTR("\nFUSE.WDTCFG      \t : 0x%08X\n"), FUSE.WDTCFG);
    16d2:	00 e8       	ldi	r16, 0x80	; 128
    16d4:	12 e1       	ldi	r17, 0x12	; 18
    16d6:	f8 01       	movw	r30, r16
    16d8:	80 81       	ld	r24, Z
    16da:	1f 92       	push	r1
    16dc:	8f 93       	push	r24
    16de:	83 e9       	ldi	r24, 0x93	; 147
    16e0:	94 e0       	ldi	r25, 0x04	; 4
    16e2:	9f 93       	push	r25
    16e4:	8f 93       	push	r24
    16e6:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 cliPrintf_P(PSTR("     WINDOW[3:0] \t : 0x%X\n"), (FUSE.WDTCFG >> FUSE_WINDOW_gp) & FUSE_WINDOW_gm);
    16ea:	d8 01       	movw	r26, r16
    16ec:	8c 91       	ld	r24, X
    16ee:	1f 92       	push	r1
    16f0:	1f 92       	push	r1
    16f2:	88 e7       	ldi	r24, 0x78	; 120
    16f4:	94 e0       	ldi	r25, 0x04	; 4
    16f6:	9f 93       	push	r25
    16f8:	8f 93       	push	r24
    16fa:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 cliPrintf_P(PSTR("     PERIOD[3:0] \t : 0x%X\n"), (FUSE.WDTCFG >> FUSE_PERIOD_gp) & FUSE_PERIOD_gm);
    16fe:	f8 01       	movw	r30, r16
    1700:	80 81       	ld	r24, Z
    1702:	8f 70       	andi	r24, 0x0F	; 15
    1704:	1f 92       	push	r1
    1706:	8f 93       	push	r24
    1708:	8d e5       	ldi	r24, 0x5D	; 93
    170a:	94 e0       	ldi	r25, 0x04	; 4
    170c:	9f 93       	push	r25
    170e:	8f 93       	push	r24
    1710:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

		 uint16_t reg;

		 // FUSE.BODCFG
		 //
		 cliPrintf_P(PSTR("\nFUSE.BODCFG      \t : 0x%08X\n"), FUSE.BODCFG);
    1714:	d8 01       	movw	r26, r16
    1716:	11 96       	adiw	r26, 0x01	; 1
    1718:	8c 91       	ld	r24, X
    171a:	1f 92       	push	r1
    171c:	8f 93       	push	r24
    171e:	8f e3       	ldi	r24, 0x3F	; 63
    1720:	94 e0       	ldi	r25, 0x04	; 4
    1722:	9f 93       	push	r25
    1724:	8f 93       	push	r24
    1726:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

		 const char * PROGMEM lvl_tbl[] = {PSTR("1.9V"), PSTR("2.45V"), PSTR("2.70V"), PSTR("2.85V")};
    172a:	8a e3       	ldi	r24, 0x3A	; 58
    172c:	94 e0       	ldi	r25, 0x04	; 4
    172e:	89 a7       	std	Y+41, r24	; 0x29
    1730:	9a a7       	std	Y+42, r25	; 0x2a
    1732:	84 e3       	ldi	r24, 0x34	; 52
    1734:	94 e0       	ldi	r25, 0x04	; 4
    1736:	8b a7       	std	Y+43, r24	; 0x2b
    1738:	9c a7       	std	Y+44, r25	; 0x2c
    173a:	8e e2       	ldi	r24, 0x2E	; 46
    173c:	94 e0       	ldi	r25, 0x04	; 4
    173e:	8d a7       	std	Y+45, r24	; 0x2d
    1740:	9e a7       	std	Y+46, r25	; 0x2e
    1742:	88 e2       	ldi	r24, 0x28	; 40
    1744:	94 e0       	ldi	r25, 0x04	; 4
    1746:	8f a7       	std	Y+47, r24	; 0x2f
    1748:	98 ab       	std	Y+48, r25	; 0x30
		 const char * PROGMEM sampfreq_tbl[] = {PSTR("128Hz"), PSTR("32Hz")};
    174a:	82 e2       	ldi	r24, 0x22	; 34
    174c:	94 e0       	ldi	r25, 0x04	; 4
    174e:	89 af       	std	Y+57, r24	; 0x39
    1750:	9a af       	std	Y+58, r25	; 0x3a
    1752:	8d e1       	ldi	r24, 0x1D	; 29
    1754:	94 e0       	ldi	r25, 0x04	; 4
    1756:	8b af       	std	Y+59, r24	; 0x3b
    1758:	9c af       	std	Y+60, r25	; 0x3c
		 const char * PROGMEM active_tbl[] = {PSTR("DISABLE"), PSTR("ENABLE"), PSTR("SAMPLE"), PSTR("ENABLEWAIT")};
    175a:	85 e1       	ldi	r24, 0x15	; 21
    175c:	94 e0       	ldi	r25, 0x04	; 4
    175e:	89 a3       	std	Y+33, r24	; 0x21
    1760:	9a a3       	std	Y+34, r25	; 0x22
    1762:	8e e0       	ldi	r24, 0x0E	; 14
    1764:	94 e0       	ldi	r25, 0x04	; 4
    1766:	8b a3       	std	Y+35, r24	; 0x23
    1768:	9c a3       	std	Y+36, r25	; 0x24
    176a:	87 e0       	ldi	r24, 0x07	; 7
    176c:	94 e0       	ldi	r25, 0x04	; 4
    176e:	8d a3       	std	Y+37, r24	; 0x25
    1770:	9e a3       	std	Y+38, r25	; 0x26
    1772:	8c ef       	ldi	r24, 0xFC	; 252
    1774:	93 e0       	ldi	r25, 0x03	; 3
    1776:	8f a3       	std	Y+39, r24	; 0x27
    1778:	98 a7       	std	Y+40, r25	; 0x28
		 const char * PROGMEM sleep_tbl[] = {PSTR("DISABLE"), PSTR("ENABLE"), PSTR("SAMPLE"), PSTR("Reserved")};
    177a:	84 ef       	ldi	r24, 0xF4	; 244
    177c:	93 e0       	ldi	r25, 0x03	; 3
    177e:	89 8f       	std	Y+25, r24	; 0x19
    1780:	9a 8f       	std	Y+26, r25	; 0x1a
    1782:	8d ee       	ldi	r24, 0xED	; 237
    1784:	93 e0       	ldi	r25, 0x03	; 3
    1786:	8b 8f       	std	Y+27, r24	; 0x1b
    1788:	9c 8f       	std	Y+28, r25	; 0x1c
    178a:	86 ee       	ldi	r24, 0xE6	; 230
    178c:	93 e0       	ldi	r25, 0x03	; 3
    178e:	8d 8f       	std	Y+29, r24	; 0x1d
    1790:	9e 8f       	std	Y+30, r25	; 0x1e
    1792:	8d ed       	ldi	r24, 0xDD	; 221
    1794:	93 e0       	ldi	r25, 0x03	; 3
    1796:	8f 8f       	std	Y+31, r24	; 0x1f
    1798:	98 a3       	std	Y+32, r25	; 0x20

		 reg = (FUSE.BODCFG & FUSE_LVL_gm) >> FUSE_LVL_gp;
    179a:	f8 01       	movw	r30, r16
    179c:	c1 80       	ldd	r12, Z+1	; 0x01
    179e:	c6 94       	lsr	r12
    17a0:	c6 94       	lsr	r12
    17a2:	c6 94       	lsr	r12
    17a4:	c6 94       	lsr	r12
    17a6:	c6 94       	lsr	r12
    17a8:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     LVL         \t : ")); cliPrintf_P(lvl_tbl[reg]); cliPrintf_P(PSTR("\n"));
    17aa:	87 ec       	ldi	r24, 0xC7	; 199
    17ac:	93 e0       	ldi	r25, 0x03	; 3
    17ae:	9f 93       	push	r25
    17b0:	8f 93       	push	r24
    17b2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    17b6:	f6 01       	movw	r30, r12
    17b8:	ee 0f       	add	r30, r30
    17ba:	ff 1f       	adc	r31, r31
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	8c 0f       	add	r24, r28
    17c2:	9d 1f       	adc	r25, r29
    17c4:	e8 0f       	add	r30, r24
    17c6:	f9 1f       	adc	r31, r25
    17c8:	80 a5       	ldd	r24, Z+40	; 0x28
    17ca:	91 a5       	ldd	r25, Z+41	; 0x29
    17cc:	9f 93       	push	r25
    17ce:	8f 93       	push	r24
    17d0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    17d4:	85 ec       	ldi	r24, 0xC5	; 197
    17d6:	93 e0       	ldi	r25, 0x03	; 3
    17d8:	9f 93       	push	r25
    17da:	8f 93       	push	r24
    17dc:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_SAMPFREQ_bm) >> FUSE_SAMPFREQ_bp;
    17e0:	d8 01       	movw	r26, r16
    17e2:	11 96       	adiw	r26, 0x01	; 1
    17e4:	8c 91       	ld	r24, X
    17e6:	80 71       	andi	r24, 0x10	; 16
    17e8:	c8 2e       	mov	r12, r24
    17ea:	d1 2c       	mov	r13, r1
    17ec:	d5 94       	asr	r13
    17ee:	c7 94       	ror	r12
    17f0:	d5 94       	asr	r13
    17f2:	c7 94       	ror	r12
    17f4:	d5 94       	asr	r13
    17f6:	c7 94       	ror	r12
    17f8:	d5 94       	asr	r13
    17fa:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     SAMPFREQ    \t : ")); cliPrintf_P(sampfreq_tbl[reg]); cliPrintf_P(PSTR("\n"));
    17fc:	8f ea       	ldi	r24, 0xAF	; 175
    17fe:	93 e0       	ldi	r25, 0x03	; 3
    1800:	9f 93       	push	r25
    1802:	8f 93       	push	r24
    1804:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1808:	f6 01       	movw	r30, r12
    180a:	ee 0f       	add	r30, r30
    180c:	ff 1f       	adc	r31, r31
    180e:	81 e0       	ldi	r24, 0x01	; 1
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	8c 0f       	add	r24, r28
    1814:	9d 1f       	adc	r25, r29
    1816:	e8 0f       	add	r30, r24
    1818:	f9 1f       	adc	r31, r25
    181a:	80 ad       	ldd	r24, Z+56	; 0x38
    181c:	91 ad       	ldd	r25, Z+57	; 0x39
    181e:	9f 93       	push	r25
    1820:	8f 93       	push	r24
    1822:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1826:	8d ea       	ldi	r24, 0xAD	; 173
    1828:	93 e0       	ldi	r25, 0x03	; 3
    182a:	9f 93       	push	r25
    182c:	8f 93       	push	r24
    182e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_ACTIVE_gm) >> FUSE_ACTIVE_gp;
    1832:	d8 01       	movw	r26, r16
    1834:	11 96       	adiw	r26, 0x01	; 1
    1836:	8c 91       	ld	r24, X
    1838:	8c 70       	andi	r24, 0x0C	; 12
    183a:	c8 2e       	mov	r12, r24
    183c:	d1 2c       	mov	r13, r1
    183e:	d5 94       	asr	r13
    1840:	c7 94       	ror	r12
    1842:	d5 94       	asr	r13
    1844:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     ACTIVE      \t : ")); cliPrintf_P(active_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1846:	87 e9       	ldi	r24, 0x97	; 151
    1848:	93 e0       	ldi	r25, 0x03	; 3
    184a:	9f 93       	push	r25
    184c:	8f 93       	push	r24
    184e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1852:	f6 01       	movw	r30, r12
    1854:	ee 0f       	add	r30, r30
    1856:	ff 1f       	adc	r31, r31
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	8c 0f       	add	r24, r28
    185e:	9d 1f       	adc	r25, r29
    1860:	e8 0f       	add	r30, r24
    1862:	f9 1f       	adc	r31, r25
    1864:	80 a1       	ldd	r24, Z+32	; 0x20
    1866:	91 a1       	ldd	r25, Z+33	; 0x21
    1868:	9f 93       	push	r25
    186a:	8f 93       	push	r24
    186c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1870:	cd bf       	out	0x3d, r28	; 61
    1872:	de bf       	out	0x3e, r29	; 62
    1874:	85 e9       	ldi	r24, 0x95	; 149
    1876:	93 e0       	ldi	r25, 0x03	; 3
    1878:	9f 93       	push	r25
    187a:	8f 93       	push	r24
    187c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 reg = (FUSE.BODCFG & FUSE_SLEEP_gm) >> FUSE_SLEEP_gp;
    1880:	d8 01       	movw	r26, r16
    1882:	11 96       	adiw	r26, 0x01	; 1
    1884:	ec 91       	ld	r30, X
    1886:	e3 70       	andi	r30, 0x03	; 3
    1888:	ce 2e       	mov	r12, r30
    188a:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     SLEEP       \t : ")); cliPrintf_P(sleep_tbl[reg]); cliPrintf_P(PSTR("\n"));
    188c:	8f e7       	ldi	r24, 0x7F	; 127
    188e:	93 e0       	ldi	r25, 0x03	; 3
    1890:	9f 93       	push	r25
    1892:	8f 93       	push	r24
    1894:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1898:	f6 01       	movw	r30, r12
    189a:	ee 0f       	add	r30, r30
    189c:	ff 1f       	adc	r31, r31
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	8c 0f       	add	r24, r28
    18a4:	9d 1f       	adc	r25, r29
    18a6:	e8 0f       	add	r30, r24
    18a8:	f9 1f       	adc	r31, r25
    18aa:	80 8d       	ldd	r24, Z+24	; 0x18
    18ac:	91 8d       	ldd	r25, Z+25	; 0x19
    18ae:	9f 93       	push	r25
    18b0:	8f 93       	push	r24
    18b2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    18b6:	8d e7       	ldi	r24, 0x7D	; 125
    18b8:	93 e0       	ldi	r25, 0x03	; 3
    18ba:	9f 93       	push	r25
    18bc:	8f 93       	push	r24
    18be:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>


		 // FUSE.OSCCFG
		 //
		 cliPrintf_P(PSTR("\nFUSE.OSCCFG     \t : 0x%08X\n"), FUSE.OSCCFG);
    18c2:	d8 01       	movw	r26, r16
    18c4:	12 96       	adiw	r26, 0x02	; 2
    18c6:	8c 91       	ld	r24, X
    18c8:	1f 92       	push	r1
    18ca:	8f 93       	push	r24
    18cc:	80 e6       	ldi	r24, 0x60	; 96
    18ce:	93 e0       	ldi	r25, 0x03	; 3
    18d0:	9f 93       	push	r25
    18d2:	8f 93       	push	r24
    18d4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

		 const char * PROGMEM clksel_tbl[] = {PSTR("OSCHF"), PSTR("OSC32K")};
    18d8:	8a e5       	ldi	r24, 0x5A	; 90
    18da:	93 e0       	ldi	r25, 0x03	; 3
    18dc:	8d ab       	std	Y+53, r24	; 0x35
    18de:	9e ab       	std	Y+54, r25	; 0x36
    18e0:	83 e5       	ldi	r24, 0x53	; 83
    18e2:	93 e0       	ldi	r25, 0x03	; 3
    18e4:	8f ab       	std	Y+55, r24	; 0x37
    18e6:	98 af       	std	Y+56, r25	; 0x38

		 reg = (FUSE.OSCCFG & FUSE_FREQSEL_gm) >> FUSE_FREQSEL_gp;
    18e8:	d8 01       	movw	r26, r16
    18ea:	12 96       	adiw	r26, 0x02	; 2
    18ec:	ec 91       	ld	r30, X
    18ee:	e3 70       	andi	r30, 0x03	; 3
    18f0:	ce 2e       	mov	r12, r30
    18f2:	d1 2c       	mov	r13, r1
		 cliPrintf_P(PSTR("     CLKSEL     \t : ")); cliPrintf_P(clksel_tbl[reg]); cliPrintf_P(PSTR("\n"));
    18f4:	8e e3       	ldi	r24, 0x3E	; 62
    18f6:	93 e0       	ldi	r25, 0x03	; 3
    18f8:	9f 93       	push	r25
    18fa:	8f 93       	push	r24
    18fc:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1900:	f6 01       	movw	r30, r12
    1902:	ee 0f       	add	r30, r30
    1904:	ff 1f       	adc	r31, r31
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	8c 0f       	add	r24, r28
    190c:	9d 1f       	adc	r25, r29
    190e:	e8 0f       	add	r30, r24
    1910:	f9 1f       	adc	r31, r25
    1912:	84 a9       	ldd	r24, Z+52	; 0x34
    1914:	95 a9       	ldd	r25, Z+53	; 0x35
    1916:	9f 93       	push	r25
    1918:	8f 93       	push	r24
    191a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    191e:	8c e3       	ldi	r24, 0x3C	; 60
    1920:	93 e0       	ldi	r25, 0x03	; 3
    1922:	9f 93       	push	r25
    1924:	8f 93       	push	r24
    1926:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>


		 // FUSE.SYSCFG0
		 //
		 cliPrintf_P(PSTR("\nFUSE.SYSCFG0    \t : 0x%08X\n"), FUSE.SYSCFG0);
    192a:	d8 01       	movw	r26, r16
    192c:	15 96       	adiw	r26, 0x05	; 5
    192e:	8c 91       	ld	r24, X
    1930:	1f 92       	push	r1
    1932:	8f 93       	push	r24
    1934:	8f e1       	ldi	r24, 0x1F	; 31
    1936:	93 e0       	ldi	r25, 0x03	; 3
    1938:	9f 93       	push	r25
    193a:	8f 93       	push	r24
    193c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 const char * PROGMEM rstpincfg_tbl[] = {PSTR("INPUT PF6 configured as general input pin"),
    1940:	85 ef       	ldi	r24, 0xF5	; 245
    1942:	92 e0       	ldi	r25, 0x02	; 2
    1944:	89 8b       	std	Y+17, r24	; 0x11
    1946:	9a 8b       	std	Y+18, r25	; 0x12
    1948:	82 ef       	ldi	r24, 0xF2	; 242
    194a:	92 e0       	ldi	r25, 0x02	; 2
    194c:	8b 8b       	std	Y+19, r24	; 0x13
    194e:	9c 8b       	std	Y+20, r25	; 0x14
    1950:	8e ec       	ldi	r24, 0xCE	; 206
    1952:	92 e0       	ldi	r25, 0x02	; 2
    1954:	8d 8b       	std	Y+21, r24	; 0x15
    1956:	9e 8b       	std	Y+22, r25	; 0x16
    1958:	8b ec       	ldi	r24, 0xCB	; 203
    195a:	92 e0       	ldi	r25, 0x02	; 2
    195c:	8f 8b       	std	Y+23, r24	; 0x17
    195e:	98 8f       	std	Y+24, r25	; 0x18
			 PSTR("- "),
			 PSTR("RESET External Reset enabled on PF6"),
		 PSTR("- ")};
		 const char * PROGMEM eesave_tbl[] = {PSTR("EEPROM erased during Chip Erase"), PSTR("EEPROM not erased under Chip Erase")};
    1960:	8b ea       	ldi	r24, 0xAB	; 171
    1962:	92 e0       	ldi	r25, 0x02	; 2
    1964:	89 ab       	std	Y+49, r24	; 0x31
    1966:	9a ab       	std	Y+50, r25	; 0x32
    1968:	88 e8       	ldi	r24, 0x88	; 136
    196a:	92 e0       	ldi	r25, 0x02	; 2
    196c:	8b ab       	std	Y+51, r24	; 0x33
    196e:	9c ab       	std	Y+52, r25	; 0x34

		 reg = (FUSE.SYSCFG0 & FUSE_RSTPINCFG_gm) >> FUSE_RSTPINCFG_gp;
    1970:	f8 01       	movw	r30, r16
    1972:	85 81       	ldd	r24, Z+5	; 0x05
    1974:	8c 70       	andi	r24, 0x0C	; 12
    1976:	c8 2e       	mov	r12, r24
    1978:	d1 2c       	mov	r13, r1
    197a:	d5 94       	asr	r13
    197c:	c7 94       	ror	r12
    197e:	d5 94       	asr	r13
    1980:	c7 94       	ror	r12
		 cliPrintf_P(PSTR("     RSTPINCFG  \t : ")); cliPrintf_P(rstpincfg_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1982:	83 e7       	ldi	r24, 0x73	; 115
    1984:	92 e0       	ldi	r25, 0x02	; 2
    1986:	9f 93       	push	r25
    1988:	8f 93       	push	r24
    198a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    198e:	f6 01       	movw	r30, r12
    1990:	ee 0f       	add	r30, r30
    1992:	ff 1f       	adc	r31, r31
    1994:	81 e0       	ldi	r24, 0x01	; 1
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	8c 0f       	add	r24, r28
    199a:	9d 1f       	adc	r25, r29
    199c:	e8 0f       	add	r30, r24
    199e:	f9 1f       	adc	r31, r25
    19a0:	80 89       	ldd	r24, Z+16	; 0x10
    19a2:	91 89       	ldd	r25, Z+17	; 0x11
    19a4:	9f 93       	push	r25
    19a6:	8f 93       	push	r24
    19a8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    19ac:	81 e7       	ldi	r24, 0x71	; 113
    19ae:	92 e0       	ldi	r25, 0x02	; 2
    19b0:	9f 93       	push	r25
    19b2:	8f 93       	push	r24
    19b4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 reg = (FUSE.SYSCFG0 & FUSE_EESAVE_bm) >> FUSE_EESAVE_bp;
    19b8:	d8 01       	movw	r26, r16
    19ba:	15 96       	adiw	r26, 0x05	; 5
    19bc:	8c 91       	ld	r24, X
    19be:	80 fb       	bst	r24, 0
    19c0:	ee 24       	eor	r14, r14
    19c2:	e0 f8       	bld	r14, 0
    19c4:	f1 2c       	mov	r15, r1
		 cliPrintf_P(PSTR("     EESAVE     \t : ")); cliPrintf_P(eesave_tbl[reg]); cliPrintf_P(PSTR("\n"));
    19c6:	8c e5       	ldi	r24, 0x5C	; 92
    19c8:	92 e0       	ldi	r25, 0x02	; 2
    19ca:	9f 93       	push	r25
    19cc:	8f 93       	push	r24
    19ce:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    19d2:	ee 0c       	add	r14, r14
    19d4:	ff 1c       	adc	r15, r15
    19d6:	e1 e0       	ldi	r30, 0x01	; 1
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	ec 0f       	add	r30, r28
    19dc:	fd 1f       	adc	r31, r29
    19de:	ee 0d       	add	r30, r14
    19e0:	ff 1d       	adc	r31, r15
    19e2:	80 a9       	ldd	r24, Z+48	; 0x30
    19e4:	91 a9       	ldd	r25, Z+49	; 0x31
    19e6:	9f 93       	push	r25
    19e8:	8f 93       	push	r24
    19ea:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    19ee:	cd bf       	out	0x3d, r28	; 61
    19f0:	de bf       	out	0x3e, r29	; 62
    19f2:	8a e5       	ldi	r24, 0x5A	; 90
    19f4:	92 e0       	ldi	r25, 0x02	; 2
    19f6:	9f 93       	push	r25
    19f8:	8f 93       	push	r24
    19fa:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>


		 // FUSE.SYSCFG0
		 //
		 cliPrintf_P(PSTR("\nFUSE.SYSCFG1    \t : 0x%08X\n"), FUSE.SYSCFG1);
    19fe:	d8 01       	movw	r26, r16
    1a00:	16 96       	adiw	r26, 0x06	; 6
    1a02:	8c 91       	ld	r24, X
    1a04:	1f 92       	push	r1
    1a06:	8f 93       	push	r24
    1a08:	8d e3       	ldi	r24, 0x3D	; 61
    1a0a:	92 e0       	ldi	r25, 0x02	; 2
    1a0c:	9f 93       	push	r25
    1a0e:	8f 93       	push	r24
    1a10:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

		 const char * PROGMEM sut_tbl[] = {PSTR("0 ms"), PSTR("1 ms"), PSTR("2 ms"), PSTR("4 ms"),
    1a14:	88 e3       	ldi	r24, 0x38	; 56
    1a16:	92 e0       	ldi	r25, 0x02	; 2
    1a18:	89 83       	std	Y+1, r24	; 0x01
    1a1a:	9a 83       	std	Y+2, r25	; 0x02
    1a1c:	83 e3       	ldi	r24, 0x33	; 51
    1a1e:	92 e0       	ldi	r25, 0x02	; 2
    1a20:	8b 83       	std	Y+3, r24	; 0x03
    1a22:	9c 83       	std	Y+4, r25	; 0x04
    1a24:	8e e2       	ldi	r24, 0x2E	; 46
    1a26:	92 e0       	ldi	r25, 0x02	; 2
    1a28:	8d 83       	std	Y+5, r24	; 0x05
    1a2a:	9e 83       	std	Y+6, r25	; 0x06
    1a2c:	89 e2       	ldi	r24, 0x29	; 41
    1a2e:	92 e0       	ldi	r25, 0x02	; 2
    1a30:	8f 83       	std	Y+7, r24	; 0x07
    1a32:	98 87       	std	Y+8, r25	; 0x08
    1a34:	84 e2       	ldi	r24, 0x24	; 36
    1a36:	92 e0       	ldi	r25, 0x02	; 2
    1a38:	89 87       	std	Y+9, r24	; 0x09
    1a3a:	9a 87       	std	Y+10, r25	; 0x0a
    1a3c:	8e e1       	ldi	r24, 0x1E	; 30
    1a3e:	92 e0       	ldi	r25, 0x02	; 2
    1a40:	8b 87       	std	Y+11, r24	; 0x0b
    1a42:	9c 87       	std	Y+12, r25	; 0x0c
    1a44:	88 e1       	ldi	r24, 0x18	; 24
    1a46:	92 e0       	ldi	r25, 0x02	; 2
    1a48:	8d 87       	std	Y+13, r24	; 0x0d
    1a4a:	9e 87       	std	Y+14, r25	; 0x0e
    1a4c:	82 e1       	ldi	r24, 0x12	; 18
    1a4e:	92 e0       	ldi	r25, 0x02	; 2
    1a50:	8f 87       	std	Y+15, r24	; 0x0f
    1a52:	98 8b       	std	Y+16, r25	; 0x10
		 PSTR("8 ms"), PSTR("16 ms"), PSTR("32 ms"), PSTR("64 ms")};

		 reg = (FUSE.SYSCFG1 & FUSE_SUT_gm) >> FUSE_SUT_gp;
    1a54:	d8 01       	movw	r26, r16
    1a56:	16 96       	adiw	r26, 0x06	; 6
    1a58:	ec 91       	ld	r30, X
    1a5a:	e7 70       	andi	r30, 0x07	; 7
    1a5c:	ee 2e       	mov	r14, r30
    1a5e:	f1 2c       	mov	r15, r1
		 cliPrintf_P(PSTR("     SUT          \t : ")); cliPrintf_P(sut_tbl[reg]); cliPrintf_P(PSTR("\n"));
    1a60:	8b ef       	ldi	r24, 0xFB	; 251
    1a62:	91 e0       	ldi	r25, 0x01	; 1
    1a64:	9f 93       	push	r25
    1a66:	8f 93       	push	r24
    1a68:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1a6c:	f7 01       	movw	r30, r14
    1a6e:	ee 0f       	add	r30, r30
    1a70:	ff 1f       	adc	r31, r31
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	8c 0f       	add	r24, r28
    1a78:	9d 1f       	adc	r25, r29
    1a7a:	e8 0f       	add	r30, r24
    1a7c:	f9 1f       	adc	r31, r25
    1a7e:	80 81       	ld	r24, Z
    1a80:	91 81       	ldd	r25, Z+1	; 0x01
    1a82:	9f 93       	push	r25
    1a84:	8f 93       	push	r24
    1a86:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1a8a:	89 ef       	ldi	r24, 0xF9	; 249
    1a8c:	91 e0       	ldi	r25, 0x01	; 1
    1a8e:	9f 93       	push	r25
    1a90:	8f 93       	push	r24
    1a92:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>


		 // FUSE.BOOTSIZE
		 //
		 cliPrintf_P(PSTR("\nFUSE.BOOTEND   \t : 0x%08X\n"), FUSE.BOOTEND);
    1a96:	d8 01       	movw	r26, r16
    1a98:	18 96       	adiw	r26, 0x08	; 8
    1a9a:	8c 91       	ld	r24, X
    1a9c:	1f 92       	push	r1
    1a9e:	8f 93       	push	r24
    1aa0:	8d ed       	ldi	r24, 0xDD	; 221
    1aa2:	91 e0       	ldi	r25, 0x01	; 1
    1aa4:	9f 93       	push	r25
    1aa6:	8f 93       	push	r24
    1aa8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 cliPrintf_P(PSTR("     BOOTEND     \t : %d KB\n"), FUSE.BOOTEND*512/1024);
    1aac:	f8 01       	movw	r30, r16
    1aae:	20 85       	ldd	r18, Z+8	; 0x08
    1ab0:	80 e0       	ldi	r24, 0x00	; 0
    1ab2:	92 2f       	mov	r25, r18
    1ab4:	99 0f       	add	r25, r25
    1ab6:	99 23       	and	r25, r25
    1ab8:	14 f4       	brge	.+4      	; 0x1abe <cliInfo+0x42c>
    1aba:	81 50       	subi	r24, 0x01	; 1
    1abc:	9c 4f       	sbci	r25, 0xFC	; 252
    1abe:	29 2f       	mov	r18, r25
    1ac0:	22 0f       	add	r18, r18
    1ac2:	22 0b       	sbc	r18, r18
    1ac4:	89 2f       	mov	r24, r25
    1ac6:	85 95       	asr	r24
    1ac8:	85 95       	asr	r24
    1aca:	2f 93       	push	r18
    1acc:	8f 93       	push	r24
    1ace:	81 ec       	ldi	r24, 0xC1	; 193
    1ad0:	91 e0       	ldi	r25, 0x01	; 1
    1ad2:	9f 93       	push	r25
    1ad4:	8f 93       	push	r24
    1ad6:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

		 // FUSE.CODESIZE
		 //
		 cliPrintf_P(PSTR("\nFUSE.APPEND   \t : 0x%08X\n"), FUSE.APPEND);
    1ada:	00 e8       	ldi	r16, 0x80	; 128
    1adc:	12 e1       	ldi	r17, 0x12	; 18
    1ade:	d8 01       	movw	r26, r16
    1ae0:	17 96       	adiw	r26, 0x07	; 7
    1ae2:	8c 91       	ld	r24, X
    1ae4:	1f 92       	push	r1
    1ae6:	8f 93       	push	r24
    1ae8:	86 ea       	ldi	r24, 0xA6	; 166
    1aea:	91 e0       	ldi	r25, 0x01	; 1
    1aec:	9f 93       	push	r25
    1aee:	8f 93       	push	r24
    1af0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		 cliPrintf_P(PSTR("     APPEND     \t : %d KB\n"), FUSE.APPEND*512/1024);
    1af4:	f8 01       	movw	r30, r16
    1af6:	27 81       	ldd	r18, Z+7	; 0x07
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	92 2f       	mov	r25, r18
    1afc:	99 0f       	add	r25, r25
    1afe:	99 23       	and	r25, r25
    1b00:	14 f4       	brge	.+4      	; 0x1b06 <cliInfo+0x474>
    1b02:	81 50       	subi	r24, 0x01	; 1
    1b04:	9c 4f       	sbci	r25, 0xFC	; 252
    1b06:	29 2f       	mov	r18, r25
    1b08:	22 0f       	add	r18, r18
    1b0a:	22 0b       	sbc	r18, r18
    1b0c:	89 2f       	mov	r24, r25
    1b0e:	85 95       	asr	r24
    1b10:	85 95       	asr	r24
    1b12:	2f 93       	push	r18
    1b14:	8f 93       	push	r24
    1b16:	8b e8       	ldi	r24, 0x8B	; 139
    1b18:	91 e0       	ldi	r25, 0x01	; 1
    1b1a:	9f 93       	push	r25
    1b1c:	8f 93       	push	r24
    1b1e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1b22:	cd bf       	out	0x3d, r28	; 61
    1b24:	de bf       	out	0x3e, r29	; 62

		 ret = true;
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	03 c0       	rjmp	.+6      	; 0x1b30 <cliInfo+0x49e>
	 return true;
 }

 void cliInfo(cli_args_t *args)
 {
	 bool ret = false;
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	01 c0       	rjmp	.+2      	; 0x1b30 <cliInfo+0x49e>
    1b2e:	80 e0       	ldi	r24, 0x00	; 0
		 cliPrintf_P(PSTR("     APPEND     \t : %d KB\n"), FUSE.APPEND*512/1024);

		 ret = true;
	 }

	 if (ret != true)
    1b30:	81 11       	cpse	r24, r1
    1b32:	08 c0       	rjmp	.+16     	; 0x1b44 <cliInfo+0x4b2>
	 {
		 cliPrintf_P(PSTR("info fuse\n"));
    1b34:	80 e8       	ldi	r24, 0x80	; 128
    1b36:	91 e0       	ldi	r25, 0x01	; 1
    1b38:	9f 93       	push	r25
    1b3a:	8f 93       	push	r24
    1b3c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1b40:	0f 90       	pop	r0
    1b42:	0f 90       	pop	r0
	 }
 }
    1b44:	ec 96       	adiw	r28, 0x3c	; 60
    1b46:	cd bf       	out	0x3d, r28	; 61
    1b48:	de bf       	out	0x3e, r29	; 62
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	1f 91       	pop	r17
    1b50:	0f 91       	pop	r16
    1b52:	ff 90       	pop	r15
    1b54:	ef 90       	pop	r14
    1b56:	df 90       	pop	r13
    1b58:	cf 90       	pop	r12
    1b5a:	08 95       	ret

00001b5c <infoInit>:
 void cliInfo(cli_args_t *args);

 
 bool infoInit(void)
 {
	 cliAdd("info", cliInfo);
    1b5c:	69 e4       	ldi	r22, 0x49	; 73
    1b5e:	7b e0       	ldi	r23, 0x0B	; 11
    1b60:	8d ef       	ldi	r24, 0xFD	; 253
    1b62:	9f ea       	ldi	r25, 0xAF	; 175
    1b64:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <cliAdd>

	 return true;
 }
    1b68:	81 e0       	ldi	r24, 0x01	; 1
    1b6a:	08 95       	ret

00001b6c <ledInit>:
	{
		*reg &= ~(1<<pgm_read_byte(&pin_tbl[ch].pin_num));
	}
	else
	{
		*reg |= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    1b6c:	20 e0       	ldi	r18, 0x00	; 0
    1b6e:	30 e0       	ldi	r19, 0x00	; 0
    1b70:	20 c0       	rjmp	.+64     	; 0x1bb2 <ledInit+0x46>
    1b72:	c9 01       	movw	r24, r18
    1b74:	88 0f       	add	r24, r24
    1b76:	99 1f       	adc	r25, r25
    1b78:	fc 01       	movw	r30, r24
    1b7a:	e2 0f       	add	r30, r18
    1b7c:	f3 1f       	adc	r31, r19
    1b7e:	ee 0f       	add	r30, r30
    1b80:	ff 1f       	adc	r31, r31
    1b82:	ef 54       	subi	r30, 0x4F	; 79
    1b84:	fb 4f       	sbci	r31, 0xFB	; 251
    1b86:	a5 91       	lpm	r26, Z+
    1b88:	b4 91       	lpm	r27, Z
    1b8a:	fc 01       	movw	r30, r24
    1b8c:	e2 0f       	add	r30, r18
    1b8e:	f3 1f       	adc	r31, r19
    1b90:	ee 0f       	add	r30, r30
    1b92:	ff 1f       	adc	r31, r31
    1b94:	eb 54       	subi	r30, 0x4B	; 75
    1b96:	fb 4f       	sbci	r31, 0xFB	; 251
    1b98:	e4 91       	lpm	r30, Z
    1b9a:	81 e0       	ldi	r24, 0x01	; 1
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	02 c0       	rjmp	.+4      	; 0x1ba4 <ledInit+0x38>
    1ba0:	88 0f       	add	r24, r24
    1ba2:	99 1f       	adc	r25, r25
    1ba4:	ea 95       	dec	r30
    1ba6:	e2 f7       	brpl	.-8      	; 0x1ba0 <ledInit+0x34>
    1ba8:	9c 91       	ld	r25, X
    1baa:	89 2b       	or	r24, r25
    1bac:	8c 93       	st	X, r24
    1bae:	2f 5f       	subi	r18, 0xFF	; 255
    1bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1bb2:	12 16       	cp	r1, r18
    1bb4:	13 06       	cpc	r1, r19
    1bb6:	ec f6       	brge	.-70     	; 0x1b72 <ledInit+0x6>
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	08 95       	ret

00001bbc <ledToggle>:
void ledToggle(uint8_t ch)
{
	volatile uint8_t *reg;


	reg = (volatile uint8_t *)( pgm_read_word(&pin_tbl[ch].out_port));
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	9c 01       	movw	r18, r24
    1bc0:	22 0f       	add	r18, r18
    1bc2:	33 1f       	adc	r19, r19
    1bc4:	f9 01       	movw	r30, r18
    1bc6:	e8 0f       	add	r30, r24
    1bc8:	f9 1f       	adc	r31, r25
    1bca:	ee 0f       	add	r30, r30
    1bcc:	ff 1f       	adc	r31, r31
    1bce:	ed 54       	subi	r30, 0x4D	; 77
    1bd0:	fb 4f       	sbci	r31, 0xFB	; 251
    1bd2:	a5 91       	lpm	r26, Z+
    1bd4:	b4 91       	lpm	r27, Z

	*reg ^= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    1bd6:	f9 01       	movw	r30, r18
    1bd8:	e8 0f       	add	r30, r24
    1bda:	f9 1f       	adc	r31, r25
    1bdc:	ee 0f       	add	r30, r30
    1bde:	ff 1f       	adc	r31, r31
    1be0:	eb 54       	subi	r30, 0x4B	; 75
    1be2:	fb 4f       	sbci	r31, 0xFB	; 251
    1be4:	e4 91       	lpm	r30, Z
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	02 c0       	rjmp	.+4      	; 0x1bf0 <ledToggle+0x34>
    1bec:	88 0f       	add	r24, r24
    1bee:	99 1f       	adc	r25, r25
    1bf0:	ea 95       	dec	r30
    1bf2:	e2 f7       	brpl	.-8      	; 0x1bec <ledToggle+0x30>
    1bf4:	9c 91       	ld	r25, X
    1bf6:	89 27       	eor	r24, r25
    1bf8:	8c 93       	st	X, r24
    1bfa:	08 95       	ret

00001bfc <resetInit>:
static void cliReset(cli_args_t *args);


bool resetInit(void)
{
	reset_reg = RSTCTRL.RSTFR;
    1bfc:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <__RODATA_PM_OFFSET__+0x7f8040>

	if(reset_reg & RSTCTRL_PORF_bm)
    1c00:	80 ff       	sbrs	r24, 0
    1c02:	05 c0       	rjmp	.+10     	; 0x1c0e <resetInit+0x12>
		reset_bits |= RESET_FROM_POWER;
    1c04:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1c08:	91 60       	ori	r25, 0x01	; 1
    1c0a:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_BORF_bm)
    1c0e:	81 ff       	sbrs	r24, 1
    1c10:	05 c0       	rjmp	.+10     	; 0x1c1c <resetInit+0x20>
		reset_bits |= RESET_FROM_BOD;
    1c12:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1c16:	92 60       	ori	r25, 0x02	; 2
    1c18:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_EXTRF_bm)
    1c1c:	82 ff       	sbrs	r24, 2
    1c1e:	05 c0       	rjmp	.+10     	; 0x1c2a <resetInit+0x2e>
		reset_bits |= RESET_FROM_PIN;
    1c20:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1c24:	94 60       	ori	r25, 0x04	; 4
    1c26:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_WDRF_bm)
    1c2a:	83 ff       	sbrs	r24, 3
    1c2c:	05 c0       	rjmp	.+10     	; 0x1c38 <resetInit+0x3c>
		reset_bits |= RESET_FROM_WDG;
    1c2e:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1c32:	98 60       	ori	r25, 0x08	; 8
    1c34:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_SWRF_bm)
    1c38:	84 ff       	sbrs	r24, 4
    1c3a:	05 c0       	rjmp	.+10     	; 0x1c46 <resetInit+0x4a>
		reset_bits |= RESET_FROM_SOFT;
    1c3c:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <reset_bits>
    1c40:	90 61       	ori	r25, 0x10	; 16
    1c42:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <reset_bits>

	if(reset_reg & RSTCTRL_UPDIRF_bm)
    1c46:	85 ff       	sbrs	r24, 5
    1c48:	05 c0       	rjmp	.+10     	; 0x1c54 <resetInit+0x58>
		reset_bits |= RESET_FROM_ETC;
    1c4a:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1c4e:	80 62       	ori	r24, 0x20	; 32
    1c50:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <reset_bits>

	RSTCTRL.RSTFR = RSTCTRL.RSTFR;
    1c54:	e0 e4       	ldi	r30, 0x40	; 64
    1c56:	f0 e0       	ldi	r31, 0x00	; 0
    1c58:	80 81       	ld	r24, Z
    1c5a:	80 83       	st	Z, r24

	#ifdef _USE_HW_CLI
	cliAdd("reset", cliReset);
    1c5c:	6d e9       	ldi	r22, 0x9D	; 157
    1c5e:	7e e0       	ldi	r23, 0x0E	; 14
    1c60:	82 e0       	ldi	r24, 0x02	; 2
    1c62:	90 eb       	ldi	r25, 0xB0	; 176
    1c64:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <cliAdd>
	#endif
	
	return true;
}
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	08 95       	ret

00001c6c <resetLog>:

void resetLog(void)
{
	cliPrintf_P(PSTR("\n"));
    1c6c:	8b e3       	ldi	r24, 0x3B	; 59
    1c6e:	95 e0       	ldi	r25, 0x05	; 5
    1c70:	9f 93       	push	r25
    1c72:	8f 93       	push	r24
    1c74:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
	cliPrintf_P(PSTR("ResetMode : 0x%02X\r\n"), reset_mode);
    1c78:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <reset_mode>
    1c7c:	1f 92       	push	r1
    1c7e:	8f 93       	push	r24
    1c80:	86 e2       	ldi	r24, 0x26	; 38
    1c82:	95 e0       	ldi	r25, 0x05	; 5
    1c84:	9f 93       	push	r25
    1c86:	8f 93       	push	r24
    1c88:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>

	if (reset_bits & RESET_FROM_POWER)
    1c8c:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1c90:	0f 90       	pop	r0
    1c92:	0f 90       	pop	r0
    1c94:	0f 90       	pop	r0
    1c96:	0f 90       	pop	r0
    1c98:	0f 90       	pop	r0
    1c9a:	0f 90       	pop	r0
    1c9c:	80 ff       	sbrs	r24, 0
    1c9e:	08 c0       	rjmp	.+16     	; 0x1cb0 <resetLog+0x44>
	{
		cliPrintf_P(PSTR("ResetFrom : Power\r\n"));
    1ca0:	82 e1       	ldi	r24, 0x12	; 18
    1ca2:	95 e0       	ldi	r25, 0x05	; 5
    1ca4:	9f 93       	push	r25
    1ca6:	8f 93       	push	r24
    1ca8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1cac:	0f 90       	pop	r0
    1cae:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_PIN)
    1cb0:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1cb4:	82 ff       	sbrs	r24, 2
    1cb6:	08 c0       	rjmp	.+16     	; 0x1cc8 <resetLog+0x5c>
	{
		cliPrintf_P(PSTR("ResetFrom : Pin\r\n"));
    1cb8:	80 e0       	ldi	r24, 0x00	; 0
    1cba:	95 e0       	ldi	r25, 0x05	; 5
    1cbc:	9f 93       	push	r25
    1cbe:	8f 93       	push	r24
    1cc0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1cc4:	0f 90       	pop	r0
    1cc6:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_WDG)
    1cc8:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1ccc:	83 ff       	sbrs	r24, 3
    1cce:	08 c0       	rjmp	.+16     	; 0x1ce0 <resetLog+0x74>
	{
		cliPrintf_P(PSTR("ResetFrom : Wdg\r\n"));
    1cd0:	8e ee       	ldi	r24, 0xEE	; 238
    1cd2:	94 e0       	ldi	r25, 0x04	; 4
    1cd4:	9f 93       	push	r25
    1cd6:	8f 93       	push	r24
    1cd8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1cdc:	0f 90       	pop	r0
    1cde:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_SOFT)
    1ce0:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1ce4:	84 ff       	sbrs	r24, 4
    1ce6:	08 c0       	rjmp	.+16     	; 0x1cf8 <resetLog+0x8c>
	{
		cliPrintf_P(PSTR("ResetFrom : Soft\r\n"));
    1ce8:	8b ed       	ldi	r24, 0xDB	; 219
    1cea:	94 e0       	ldi	r25, 0x04	; 4
    1cec:	9f 93       	push	r25
    1cee:	8f 93       	push	r24
    1cf0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1cf4:	0f 90       	pop	r0
    1cf6:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_BOD)
    1cf8:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1cfc:	81 ff       	sbrs	r24, 1
    1cfe:	08 c0       	rjmp	.+16     	; 0x1d10 <resetLog+0xa4>
	{
		cliPrintf_P(PSTR("ResetFrom : BoD\r\n"));
    1d00:	89 ec       	ldi	r24, 0xC9	; 201
    1d02:	94 e0       	ldi	r25, 0x04	; 4
    1d04:	9f 93       	push	r25
    1d06:	8f 93       	push	r24
    1d08:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1d0c:	0f 90       	pop	r0
    1d0e:	0f 90       	pop	r0
	}

	if (reset_bits & RESET_FROM_ETC)
    1d10:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <reset_bits>
    1d14:	85 ff       	sbrs	r24, 5
    1d16:	08 c0       	rjmp	.+16     	; 0x1d28 <resetLog+0xbc>
	{
		cliPrintf_P(PSTR("ResetFrom : Etc\r\n"));
    1d18:	87 eb       	ldi	r24, 0xB7	; 183
    1d1a:	94 e0       	ldi	r25, 0x04	; 4
    1d1c:	9f 93       	push	r25
    1d1e:	8f 93       	push	r24
    1d20:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1d24:	0f 90       	pop	r0
    1d26:	0f 90       	pop	r0
    1d28:	08 95       	ret

00001d2a <resetToBoot>:
	}
}

void resetToBoot(uint8_t mode)
{
	reset_mode = mode;
    1d2a:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <reset_mode>

	_PROTECTED_WRITE(RSTCTRL.SWRR, RSTCTRL_SWRE_bm);
    1d2e:	91 e0       	ldi	r25, 0x01	; 1
    1d30:	88 ed       	ldi	r24, 0xD8	; 216
    1d32:	84 bf       	out	0x34, r24	; 52
    1d34:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <__RODATA_PM_OFFSET__+0x7f8041>
    1d38:	08 95       	ret

00001d3a <cliReset>:



#ifdef _USE_HW_CLI
void cliReset(cli_args_t *args)
{
    1d3a:	1f 93       	push	r17
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	ec 01       	movw	r28, r24
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "info") == true)
    1d42:	88 81       	ld	r24, Y
    1d44:	99 81       	ldd	r25, Y+1	; 0x01
    1d46:	01 97       	sbiw	r24, 0x01	; 1
    1d48:	61 f4       	brne	.+24     	; 0x1d62 <cliReset+0x28>
    1d4a:	ea 85       	ldd	r30, Y+10	; 0x0a
    1d4c:	fb 85       	ldd	r31, Y+11	; 0x0b
    1d4e:	6d ef       	ldi	r22, 0xFD	; 253
    1d50:	7f ea       	ldi	r23, 0xAF	; 175
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	09 95       	icall
    1d56:	88 23       	and	r24, r24
    1d58:	31 f0       	breq	.+12     	; 0x1d66 <cliReset+0x2c>
	{
		resetLog();
    1d5a:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <resetLog>
		ret = true;
    1d5e:	11 e0       	ldi	r17, 0x01	; 1
    1d60:	03 c0       	rjmp	.+6      	; 0x1d68 <cliReset+0x2e>


#ifdef _USE_HW_CLI
void cliReset(cli_args_t *args)
{
	bool ret = false;
    1d62:	10 e0       	ldi	r17, 0x00	; 0
    1d64:	01 c0       	rjmp	.+2      	; 0x1d68 <cliReset+0x2e>
    1d66:	10 e0       	ldi	r17, 0x00	; 0
	if (args->argc == 1 && args->isStr(0, "info") == true)
	{
		resetLog();
		ret = true;
	}
	if (args->argc == 2 && args->isStr(0, "boot") == true)
    1d68:	88 81       	ld	r24, Y
    1d6a:	99 81       	ldd	r25, Y+1	; 0x01
    1d6c:	02 97       	sbiw	r24, 0x02	; 2
    1d6e:	b1 f4       	brne	.+44     	; 0x1d9c <cliReset+0x62>
    1d70:	ea 85       	ldd	r30, Y+10	; 0x0a
    1d72:	fb 85       	ldd	r31, Y+11	; 0x0b
    1d74:	68 e0       	ldi	r22, 0x08	; 8
    1d76:	70 eb       	ldi	r23, 0xB0	; 176
    1d78:	80 e0       	ldi	r24, 0x00	; 0
    1d7a:	09 95       	icall
    1d7c:	88 23       	and	r24, r24
    1d7e:	71 f0       	breq	.+28     	; 0x1d9c <cliReset+0x62>
	{
		uint8_t boot_mode;

		delay(10);
    1d80:	6a e0       	ldi	r22, 0x0A	; 10
    1d82:	70 e0       	ldi	r23, 0x00	; 0
    1d84:	80 e0       	ldi	r24, 0x00	; 0
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	0e 94 3b 03 	call	0x676	; 0x676 <delay>
		boot_mode = (uint8_t)args->getData(1);
    1d8c:	ec 81       	ldd	r30, Y+4	; 0x04
    1d8e:	fd 81       	ldd	r31, Y+5	; 0x05
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	09 95       	icall
    1d94:	86 2f       	mov	r24, r22
		resetToBoot(boot_mode);
    1d96:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <resetToBoot>
		ret = true;
    1d9a:	11 e0       	ldi	r17, 0x01	; 1
	}

	if (ret != true)
    1d9c:	11 11       	cpse	r17, r1
    1d9e:	10 c0       	rjmp	.+32     	; 0x1dc0 <cliReset+0x86>
	{
		cliPrintf_P(PSTR("reset info\n"));
    1da0:	83 e5       	ldi	r24, 0x53	; 83
    1da2:	95 e0       	ldi	r25, 0x05	; 5
    1da4:	9f 93       	push	r25
    1da6:	8f 93       	push	r24
    1da8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
		cliPrintf_P(PSTR("reset boot 0x00~0xFF\n"));
    1dac:	8d e3       	ldi	r24, 0x3D	; 61
    1dae:	95 e0       	ldi	r25, 0x05	; 5
    1db0:	9f 93       	push	r25
    1db2:	8f 93       	push	r24
    1db4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <cliPrintf_P>
    1db8:	0f 90       	pop	r0
    1dba:	0f 90       	pop	r0
    1dbc:	0f 90       	pop	r0
    1dbe:	0f 90       	pop	r0
	}
}
    1dc0:	df 91       	pop	r29
    1dc2:	cf 91       	pop	r28
    1dc4:	1f 91       	pop	r17
    1dc6:	08 95       	ret

00001dc8 <uartRxHandler>:
 }

 uint32_t uartGetBaud(uint8_t ch)
 {
	 return uart_tbl[ch].baud;
 }
    1dc8:	cf 93       	push	r28
    1dca:	df 93       	push	r29
    1dcc:	1f 92       	push	r1
    1dce:	cd b7       	in	r28, 0x3d	; 61
    1dd0:	de b7       	in	r29, 0x3e	; 62
    1dd2:	69 83       	std	Y+1, r22	; 0x01
    1dd4:	28 2f       	mov	r18, r24
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	87 e5       	ldi	r24, 0x57	; 87
    1dda:	82 9f       	mul	r24, r18
    1ddc:	f0 01       	movw	r30, r0
    1dde:	83 9f       	mul	r24, r19
    1de0:	f0 0d       	add	r31, r0
    1de2:	11 24       	eor	r1, r1
    1de4:	ea 59       	subi	r30, 0x9A	; 154
    1de6:	f4 4c       	sbci	r31, 0xC4	; 196
    1de8:	86 81       	ldd	r24, Z+6	; 0x06
    1dea:	81 30       	cpi	r24, 0x01	; 1
    1dec:	89 f4       	brne	.+34     	; 0x1e10 <uartRxHandler+0x48>
    1dee:	47 e5       	ldi	r20, 0x57	; 87
    1df0:	42 9f       	mul	r20, r18
    1df2:	c0 01       	movw	r24, r0
    1df4:	43 9f       	mul	r20, r19
    1df6:	90 0d       	add	r25, r0
    1df8:	11 24       	eor	r1, r1
    1dfa:	21 e0       	ldi	r18, 0x01	; 1
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	40 e0       	ldi	r20, 0x00	; 0
    1e00:	50 e0       	ldi	r21, 0x00	; 0
    1e02:	be 01       	movw	r22, r28
    1e04:	6f 5f       	subi	r22, 0xFF	; 255
    1e06:	7f 4f       	sbci	r23, 0xFF	; 255
    1e08:	81 55       	subi	r24, 0x51	; 81
    1e0a:	94 4c       	sbci	r25, 0xC4	; 196
    1e0c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <qbufferWrite>
    1e10:	0f 90       	pop	r0
    1e12:	df 91       	pop	r29
    1e14:	cf 91       	pop	r28
    1e16:	08 95       	ret

00001e18 <uartInit>:
    1e18:	80 e0       	ldi	r24, 0x00	; 0
    1e1a:	0a c0       	rjmp	.+20     	; 0x1e30 <uartInit+0x18>
    1e1c:	97 e5       	ldi	r25, 0x57	; 87
    1e1e:	89 9f       	mul	r24, r25
    1e20:	f0 01       	movw	r30, r0
    1e22:	11 24       	eor	r1, r1
    1e24:	ea 59       	subi	r30, 0x9A	; 154
    1e26:	f4 4c       	sbci	r31, 0xC4	; 196
    1e28:	10 82       	st	Z, r1
    1e2a:	16 82       	std	Z+6, r1	; 0x06
    1e2c:	15 82       	std	Z+5, r1	; 0x05
    1e2e:	8f 5f       	subi	r24, 0xFF	; 255
    1e30:	88 23       	and	r24, r24
    1e32:	a1 f3       	breq	.-24     	; 0x1e1c <uartInit+0x4>
    1e34:	81 e0       	ldi	r24, 0x01	; 1
    1e36:	08 95       	ret

00001e38 <uartOpen>:
    1e38:	cf 92       	push	r12
    1e3a:	df 92       	push	r13
    1e3c:	ef 92       	push	r14
    1e3e:	ff 92       	push	r15
    1e40:	1f 93       	push	r17
    1e42:	cf 93       	push	r28
    1e44:	df 93       	push	r29
    1e46:	81 11       	cpse	r24, r1
    1e48:	41 c0       	rjmp	.+130    	; 0x1ecc <uartOpen+0x94>
    1e4a:	6a 01       	movw	r12, r20
    1e4c:	7b 01       	movw	r14, r22
    1e4e:	f8 94       	cli
    1e50:	27 e5       	ldi	r18, 0x57	; 87
    1e52:	82 9f       	mul	r24, r18
    1e54:	c0 01       	movw	r24, r0
    1e56:	11 24       	eor	r1, r1
    1e58:	ec 01       	movw	r28, r24
    1e5a:	ca 59       	subi	r28, 0x9A	; 154
    1e5c:	d4 4c       	sbci	r29, 0xC4	; 196
    1e5e:	11 e0       	ldi	r17, 0x01	; 1
    1e60:	1e 83       	std	Y+6, r17	; 0x06
    1e62:	49 83       	std	Y+1, r20	; 0x01
    1e64:	5a 83       	std	Y+2, r21	; 0x02
    1e66:	6b 83       	std	Y+3, r22	; 0x03
    1e68:	7c 83       	std	Y+4, r23	; 0x04
    1e6a:	20 e0       	ldi	r18, 0x00	; 0
    1e6c:	38 e0       	ldi	r19, 0x08	; 8
    1e6e:	2f 83       	std	Y+7, r18	; 0x07
    1e70:	38 87       	std	Y+8, r19	; 0x08
    1e72:	bc 01       	movw	r22, r24
    1e74:	61 59       	subi	r22, 0x91	; 145
    1e76:	74 4c       	sbci	r23, 0xC4	; 196
    1e78:	20 e4       	ldi	r18, 0x40	; 64
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	40 e0       	ldi	r20, 0x00	; 0
    1e7e:	50 e0       	ldi	r21, 0x00	; 0
    1e80:	81 55       	subi	r24, 0x51	; 81
    1e82:	94 4c       	sbci	r25, 0xC4	; 196
    1e84:	0e 94 5f 03 	call	0x6be	; 0x6be <qbufferCreate>
    1e88:	60 e0       	ldi	r22, 0x00	; 0
    1e8a:	74 eb       	ldi	r23, 0xB4	; 180
    1e8c:	84 ec       	ldi	r24, 0xC4	; 196
    1e8e:	94 e0       	ldi	r25, 0x04	; 4
    1e90:	a7 01       	movw	r20, r14
    1e92:	96 01       	movw	r18, r12
    1e94:	0e 94 83 10 	call	0x2106	; 0x2106 <__udivmodsi4>
    1e98:	ef 81       	ldd	r30, Y+7	; 0x07
    1e9a:	f8 85       	ldd	r31, Y+8	; 0x08
    1e9c:	20 87       	std	Z+8, r18	; 0x08
    1e9e:	31 87       	std	Z+9, r19	; 0x09
    1ea0:	ef 81       	ldd	r30, Y+7	; 0x07
    1ea2:	f8 85       	ldd	r31, Y+8	; 0x08
    1ea4:	8b e0       	ldi	r24, 0x0B	; 11
    1ea6:	87 83       	std	Z+7, r24	; 0x07
    1ea8:	e0 e2       	ldi	r30, 0x20	; 32
    1eaa:	f4 e0       	ldi	r31, 0x04	; 4
    1eac:	84 e0       	ldi	r24, 0x04	; 4
    1eae:	81 83       	std	Z+1, r24	; 0x01
    1eb0:	88 e0       	ldi	r24, 0x08	; 8
    1eb2:	82 83       	std	Z+2, r24	; 0x02
    1eb4:	ef 81       	ldd	r30, Y+7	; 0x07
    1eb6:	f8 85       	ldd	r31, Y+8	; 0x08
    1eb8:	80 ec       	ldi	r24, 0xC0	; 192
    1eba:	86 83       	std	Z+6, r24	; 0x06
    1ebc:	ef 81       	ldd	r30, Y+7	; 0x07
    1ebe:	f8 85       	ldd	r31, Y+8	; 0x08
    1ec0:	80 e8       	ldi	r24, 0x80	; 128
    1ec2:	85 83       	std	Z+5, r24	; 0x05
    1ec4:	78 94       	sei
    1ec6:	18 83       	st	Y, r17
    1ec8:	81 e0       	ldi	r24, 0x01	; 1
    1eca:	01 c0       	rjmp	.+2      	; 0x1ece <uartOpen+0x96>
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	df 91       	pop	r29
    1ed0:	cf 91       	pop	r28
    1ed2:	1f 91       	pop	r17
    1ed4:	ff 90       	pop	r15
    1ed6:	ef 90       	pop	r14
    1ed8:	df 90       	pop	r13
    1eda:	cf 90       	pop	r12
    1edc:	08 95       	ret

00001ede <uartAvailable>:
    1ede:	81 11       	cpse	r24, r1
    1ee0:	09 c0       	rjmp	.+18     	; 0x1ef4 <uartAvailable+0x16>
    1ee2:	27 e5       	ldi	r18, 0x57	; 87
    1ee4:	82 9f       	mul	r24, r18
    1ee6:	c0 01       	movw	r24, r0
    1ee8:	11 24       	eor	r1, r1
    1eea:	81 55       	subi	r24, 0x51	; 81
    1eec:	94 4c       	sbci	r25, 0xC4	; 196
    1eee:	0e 94 2e 04 	call	0x85c	; 0x85c <qbufferAvailable>
    1ef2:	08 95       	ret
    1ef4:	60 e0       	ldi	r22, 0x00	; 0
    1ef6:	70 e0       	ldi	r23, 0x00	; 0
    1ef8:	cb 01       	movw	r24, r22
    1efa:	08 95       	ret

00001efc <uartWrite>:
    1efc:	4f 92       	push	r4
    1efe:	5f 92       	push	r5
    1f00:	6f 92       	push	r6
    1f02:	7f 92       	push	r7
    1f04:	8f 92       	push	r8
    1f06:	9f 92       	push	r9
    1f08:	af 92       	push	r10
    1f0a:	bf 92       	push	r11
    1f0c:	cf 92       	push	r12
    1f0e:	df 92       	push	r13
    1f10:	ef 92       	push	r14
    1f12:	ff 92       	push	r15
    1f14:	0f 93       	push	r16
    1f16:	1f 93       	push	r17
    1f18:	cf 93       	push	r28
    1f1a:	df 93       	push	r29
    1f1c:	e7 e5       	ldi	r30, 0x57	; 87
    1f1e:	8e 9f       	mul	r24, r30
    1f20:	c0 01       	movw	r24, r0
    1f22:	11 24       	eor	r1, r1
    1f24:	fc 01       	movw	r30, r24
    1f26:	ea 59       	subi	r30, 0x9A	; 154
    1f28:	f4 4c       	sbci	r31, 0xC4	; 196
    1f2a:	c7 81       	ldd	r28, Z+7	; 0x07
    1f2c:	d0 85       	ldd	r29, Z+8	; 0x08
    1f2e:	86 81       	ldd	r24, Z+6	; 0x06
    1f30:	81 30       	cpi	r24, 0x01	; 1
    1f32:	59 f5       	brne	.+86     	; 0x1f8a <uartWrite+0x8e>
    1f34:	49 01       	movw	r8, r18
    1f36:	5a 01       	movw	r10, r20
    1f38:	8b 01       	movw	r16, r22
    1f3a:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
    1f3e:	2b 01       	movw	r4, r22
    1f40:	3c 01       	movw	r6, r24
    1f42:	c1 2c       	mov	r12, r1
    1f44:	d1 2c       	mov	r13, r1
    1f46:	76 01       	movw	r14, r12
    1f48:	1a c0       	rjmp	.+52     	; 0x1f7e <uartWrite+0x82>
    1f4a:	8c 81       	ldd	r24, Y+4	; 0x04
    1f4c:	85 ff       	sbrs	r24, 5
    1f4e:	0a c0       	rjmp	.+20     	; 0x1f64 <uartWrite+0x68>
    1f50:	f8 01       	movw	r30, r16
    1f52:	ec 0d       	add	r30, r12
    1f54:	fd 1d       	adc	r31, r13
    1f56:	80 81       	ld	r24, Z
    1f58:	8a 83       	std	Y+2, r24	; 0x02
    1f5a:	2f ef       	ldi	r18, 0xFF	; 255
    1f5c:	c2 1a       	sub	r12, r18
    1f5e:	d2 0a       	sbc	r13, r18
    1f60:	e2 0a       	sbc	r14, r18
    1f62:	f2 0a       	sbc	r15, r18
    1f64:	0e 94 2f 03 	call	0x65e	; 0x65e <millis>
    1f68:	dc 01       	movw	r26, r24
    1f6a:	cb 01       	movw	r24, r22
    1f6c:	84 19       	sub	r24, r4
    1f6e:	95 09       	sbc	r25, r5
    1f70:	a6 09       	sbc	r26, r6
    1f72:	b7 09       	sbc	r27, r7
    1f74:	84 3f       	cpi	r24, 0xF4	; 244
    1f76:	91 40       	sbci	r25, 0x01	; 1
    1f78:	a1 05       	cpc	r26, r1
    1f7a:	b1 05       	cpc	r27, r1
    1f7c:	48 f4       	brcc	.+18     	; 0x1f90 <uartWrite+0x94>
    1f7e:	c8 14       	cp	r12, r8
    1f80:	d9 04       	cpc	r13, r9
    1f82:	ea 04       	cpc	r14, r10
    1f84:	fb 04       	cpc	r15, r11
    1f86:	08 f3       	brcs	.-62     	; 0x1f4a <uartWrite+0x4e>
    1f88:	03 c0       	rjmp	.+6      	; 0x1f90 <uartWrite+0x94>
    1f8a:	c1 2c       	mov	r12, r1
    1f8c:	d1 2c       	mov	r13, r1
    1f8e:	76 01       	movw	r14, r12
    1f90:	c7 01       	movw	r24, r14
    1f92:	b6 01       	movw	r22, r12
    1f94:	df 91       	pop	r29
    1f96:	cf 91       	pop	r28
    1f98:	1f 91       	pop	r17
    1f9a:	0f 91       	pop	r16
    1f9c:	ff 90       	pop	r15
    1f9e:	ef 90       	pop	r14
    1fa0:	df 90       	pop	r13
    1fa2:	cf 90       	pop	r12
    1fa4:	bf 90       	pop	r11
    1fa6:	af 90       	pop	r10
    1fa8:	9f 90       	pop	r9
    1faa:	8f 90       	pop	r8
    1fac:	7f 90       	pop	r7
    1fae:	6f 90       	pop	r6
    1fb0:	5f 90       	pop	r5
    1fb2:	4f 90       	pop	r4
    1fb4:	08 95       	ret

00001fb6 <uartRead>:
    1fb6:	cf 93       	push	r28
    1fb8:	df 93       	push	r29
    1fba:	1f 92       	push	r1
    1fbc:	cd b7       	in	r28, 0x3d	; 61
    1fbe:	de b7       	in	r29, 0x3e	; 62
    1fc0:	19 82       	std	Y+1, r1	; 0x01
    1fc2:	28 2f       	mov	r18, r24
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	87 e5       	ldi	r24, 0x57	; 87
    1fc8:	82 9f       	mul	r24, r18
    1fca:	f0 01       	movw	r30, r0
    1fcc:	83 9f       	mul	r24, r19
    1fce:	f0 0d       	add	r31, r0
    1fd0:	11 24       	eor	r1, r1
    1fd2:	ea 59       	subi	r30, 0x9A	; 154
    1fd4:	f4 4c       	sbci	r31, 0xC4	; 196
    1fd6:	86 81       	ldd	r24, Z+6	; 0x06
    1fd8:	81 30       	cpi	r24, 0x01	; 1
    1fda:	89 f4       	brne	.+34     	; 0x1ffe <uartRead+0x48>
    1fdc:	47 e5       	ldi	r20, 0x57	; 87
    1fde:	42 9f       	mul	r20, r18
    1fe0:	c0 01       	movw	r24, r0
    1fe2:	43 9f       	mul	r20, r19
    1fe4:	90 0d       	add	r25, r0
    1fe6:	11 24       	eor	r1, r1
    1fe8:	21 e0       	ldi	r18, 0x01	; 1
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	40 e0       	ldi	r20, 0x00	; 0
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	be 01       	movw	r22, r28
    1ff2:	6f 5f       	subi	r22, 0xFF	; 255
    1ff4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff6:	81 55       	subi	r24, 0x51	; 81
    1ff8:	94 4c       	sbci	r25, 0xC4	; 196
    1ffa:	0e 94 cd 03 	call	0x79a	; 0x79a <qbufferRead>
    1ffe:	89 81       	ldd	r24, Y+1	; 0x01
    2000:	0f 90       	pop	r0
    2002:	df 91       	pop	r29
    2004:	cf 91       	pop	r28
    2006:	08 95       	ret

00002008 <uartPrintf>:
    2008:	cf 93       	push	r28
    200a:	df 93       	push	r29
    200c:	cd b7       	in	r28, 0x3d	; 61
    200e:	de b7       	in	r29, 0x3e	; 62
    2010:	c0 58       	subi	r28, 0x80	; 128
    2012:	d1 09       	sbc	r29, r1
    2014:	cd bf       	out	0x3d, r28	; 61
    2016:	de bf       	out	0x3e, r29	; 62
    2018:	9e 01       	movw	r18, r28
    201a:	28 57       	subi	r18, 0x78	; 120
    201c:	3f 4f       	sbci	r19, 0xFF	; 255
    201e:	ca 57       	subi	r28, 0x7A	; 122
    2020:	df 4f       	sbci	r29, 0xFF	; 255
    2022:	48 81       	ld	r20, Y
    2024:	59 81       	ldd	r21, Y+1	; 0x01
    2026:	c6 58       	subi	r28, 0x86	; 134
    2028:	d0 40       	sbci	r29, 0x00	; 0
    202a:	60 e8       	ldi	r22, 0x80	; 128
    202c:	70 e0       	ldi	r23, 0x00	; 0
    202e:	ce 01       	movw	r24, r28
    2030:	01 96       	adiw	r24, 0x01	; 1
    2032:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <vsnprintf>
    2036:	9c 01       	movw	r18, r24
    2038:	99 0f       	add	r25, r25
    203a:	44 0b       	sbc	r20, r20
    203c:	55 0b       	sbc	r21, r21
    203e:	be 01       	movw	r22, r28
    2040:	6f 5f       	subi	r22, 0xFF	; 255
    2042:	7f 4f       	sbci	r23, 0xFF	; 255
    2044:	cb 57       	subi	r28, 0x7B	; 123
    2046:	df 4f       	sbci	r29, 0xFF	; 255
    2048:	88 81       	ld	r24, Y
    204a:	c5 58       	subi	r28, 0x85	; 133
    204c:	d0 40       	sbci	r29, 0x00	; 0
    204e:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <uartWrite>
    2052:	c0 58       	subi	r28, 0x80	; 128
    2054:	df 4f       	sbci	r29, 0xFF	; 255
    2056:	cd bf       	out	0x3d, r28	; 61
    2058:	de bf       	out	0x3e, r29	; 62
    205a:	df 91       	pop	r29
    205c:	cf 91       	pop	r28
    205e:	08 95       	ret

00002060 <__vector_17>:
		 qbufferWrite(&p_uart->qbuffer_rx, &rx_data, 1);
	 }
 }

 ISR(USART0_RXC_vect, ISR_NOBLOCK)
 {
    2060:	78 94       	sei
    2062:	1f 92       	push	r1
    2064:	0f 92       	push	r0
    2066:	0f b6       	in	r0, 0x3f	; 63
    2068:	0f 92       	push	r0
    206a:	11 24       	eor	r1, r1
    206c:	2f 93       	push	r18
    206e:	3f 93       	push	r19
    2070:	4f 93       	push	r20
    2072:	5f 93       	push	r21
    2074:	6f 93       	push	r22
    2076:	7f 93       	push	r23
    2078:	8f 93       	push	r24
    207a:	9f 93       	push	r25
    207c:	af 93       	push	r26
    207e:	bf 93       	push	r27
    2080:	ef 93       	push	r30
    2082:	ff 93       	push	r31
	 uartRxHandler(_DEF_UART1, USART0.RXDATAL);
    2084:	60 91 00 08 	lds	r22, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
    2088:	80 e0       	ldi	r24, 0x00	; 0
    208a:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <uartRxHandler>
 }
    208e:	ff 91       	pop	r31
    2090:	ef 91       	pop	r30
    2092:	bf 91       	pop	r27
    2094:	af 91       	pop	r26
    2096:	9f 91       	pop	r25
    2098:	8f 91       	pop	r24
    209a:	7f 91       	pop	r23
    209c:	6f 91       	pop	r22
    209e:	5f 91       	pop	r21
    20a0:	4f 91       	pop	r20
    20a2:	3f 91       	pop	r19
    20a4:	2f 91       	pop	r18
    20a6:	0f 90       	pop	r0
    20a8:	0f be       	out	0x3f, r0	; 63
    20aa:	0f 90       	pop	r0
    20ac:	1f 90       	pop	r1
    20ae:	18 95       	reti

000020b0 <hwInit>:
#include "hw.h"


bool hwInit(void)
{
	bspInit();
    20b0:	0e 94 19 03 	call	0x632	; 0x632 <bspInit>

	cliInit();
    20b4:	0e 94 0d 0b 	call	0x161a	; 0x161a <cliInit>
	infoInit();
    20b8:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <infoInit>
  ledInit();
    20bc:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <ledInit>
	uartInit();
    20c0:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <uartInit>
	resetInit();
    20c4:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <resetInit>

  return true;
    20c8:	81 e0       	ldi	r24, 0x01	; 1
    20ca:	08 95       	ret

000020cc <main>:
#include "main.h"


int main(void)
{
	hwInit();
    20cc:	0e 94 58 10 	call	0x20b0	; 0x20b0 <hwInit>
	apInit();
    20d0:	0e 94 cd 02 	call	0x59a	; 0x59a <apInit>
	
	apMain();
    20d4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <apMain>
	
	return 0;
}
    20d8:	80 e0       	ldi	r24, 0x00	; 0
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	08 95       	ret

000020de <__divmodhi4>:
    20de:	97 fb       	bst	r25, 7
    20e0:	07 2e       	mov	r0, r23
    20e2:	16 f4       	brtc	.+4      	; 0x20e8 <__divmodhi4+0xa>
    20e4:	00 94       	com	r0
    20e6:	07 d0       	rcall	.+14     	; 0x20f6 <__divmodhi4_neg1>
    20e8:	77 fd       	sbrc	r23, 7
    20ea:	09 d0       	rcall	.+18     	; 0x20fe <__divmodhi4_neg2>
    20ec:	0e 94 a5 10 	call	0x214a	; 0x214a <__udivmodhi4>
    20f0:	07 fc       	sbrc	r0, 7
    20f2:	05 d0       	rcall	.+10     	; 0x20fe <__divmodhi4_neg2>
    20f4:	3e f4       	brtc	.+14     	; 0x2104 <__divmodhi4_exit>

000020f6 <__divmodhi4_neg1>:
    20f6:	90 95       	com	r25
    20f8:	81 95       	neg	r24
    20fa:	9f 4f       	sbci	r25, 0xFF	; 255
    20fc:	08 95       	ret

000020fe <__divmodhi4_neg2>:
    20fe:	70 95       	com	r23
    2100:	61 95       	neg	r22
    2102:	7f 4f       	sbci	r23, 0xFF	; 255

00002104 <__divmodhi4_exit>:
    2104:	08 95       	ret

00002106 <__udivmodsi4>:
    2106:	a1 e2       	ldi	r26, 0x21	; 33
    2108:	1a 2e       	mov	r1, r26
    210a:	aa 1b       	sub	r26, r26
    210c:	bb 1b       	sub	r27, r27
    210e:	fd 01       	movw	r30, r26
    2110:	0d c0       	rjmp	.+26     	; 0x212c <__udivmodsi4_ep>

00002112 <__udivmodsi4_loop>:
    2112:	aa 1f       	adc	r26, r26
    2114:	bb 1f       	adc	r27, r27
    2116:	ee 1f       	adc	r30, r30
    2118:	ff 1f       	adc	r31, r31
    211a:	a2 17       	cp	r26, r18
    211c:	b3 07       	cpc	r27, r19
    211e:	e4 07       	cpc	r30, r20
    2120:	f5 07       	cpc	r31, r21
    2122:	20 f0       	brcs	.+8      	; 0x212c <__udivmodsi4_ep>
    2124:	a2 1b       	sub	r26, r18
    2126:	b3 0b       	sbc	r27, r19
    2128:	e4 0b       	sbc	r30, r20
    212a:	f5 0b       	sbc	r31, r21

0000212c <__udivmodsi4_ep>:
    212c:	66 1f       	adc	r22, r22
    212e:	77 1f       	adc	r23, r23
    2130:	88 1f       	adc	r24, r24
    2132:	99 1f       	adc	r25, r25
    2134:	1a 94       	dec	r1
    2136:	69 f7       	brne	.-38     	; 0x2112 <__udivmodsi4_loop>
    2138:	60 95       	com	r22
    213a:	70 95       	com	r23
    213c:	80 95       	com	r24
    213e:	90 95       	com	r25
    2140:	9b 01       	movw	r18, r22
    2142:	ac 01       	movw	r20, r24
    2144:	bd 01       	movw	r22, r26
    2146:	cf 01       	movw	r24, r30
    2148:	08 95       	ret

0000214a <__udivmodhi4>:
    214a:	aa 1b       	sub	r26, r26
    214c:	bb 1b       	sub	r27, r27
    214e:	51 e1       	ldi	r21, 0x11	; 17
    2150:	07 c0       	rjmp	.+14     	; 0x2160 <__udivmodhi4_ep>

00002152 <__udivmodhi4_loop>:
    2152:	aa 1f       	adc	r26, r26
    2154:	bb 1f       	adc	r27, r27
    2156:	a6 17       	cp	r26, r22
    2158:	b7 07       	cpc	r27, r23
    215a:	10 f0       	brcs	.+4      	; 0x2160 <__udivmodhi4_ep>
    215c:	a6 1b       	sub	r26, r22
    215e:	b7 0b       	sbc	r27, r23

00002160 <__udivmodhi4_ep>:
    2160:	88 1f       	adc	r24, r24
    2162:	99 1f       	adc	r25, r25
    2164:	5a 95       	dec	r21
    2166:	a9 f7       	brne	.-22     	; 0x2152 <__udivmodhi4_loop>
    2168:	80 95       	com	r24
    216a:	90 95       	com	r25
    216c:	bc 01       	movw	r22, r24
    216e:	cd 01       	movw	r24, r26
    2170:	08 95       	ret

00002172 <strtod>:
    2172:	a0 e0       	ldi	r26, 0x00	; 0
    2174:	b0 e0       	ldi	r27, 0x00	; 0
    2176:	ef eb       	ldi	r30, 0xBF	; 191
    2178:	f0 e1       	ldi	r31, 0x10	; 16
    217a:	0c 94 ab 17 	jmp	0x2f56	; 0x2f56 <__prologue_saves__+0xc>
    217e:	ec 01       	movw	r28, r24
    2180:	6b 01       	movw	r12, r22
    2182:	61 15       	cp	r22, r1
    2184:	71 05       	cpc	r23, r1
    2186:	19 f0       	breq	.+6      	; 0x218e <strtod+0x1c>
    2188:	fb 01       	movw	r30, r22
    218a:	80 83       	st	Z, r24
    218c:	91 83       	std	Z+1, r25	; 0x01
    218e:	7e 01       	movw	r14, r28
    2190:	ff ef       	ldi	r31, 0xFF	; 255
    2192:	ef 1a       	sub	r14, r31
    2194:	ff 0a       	sbc	r15, r31
    2196:	08 81       	ld	r16, Y
    2198:	80 2f       	mov	r24, r16
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	0e 94 1a 13 	call	0x2634	; 0x2634 <isspace>
    21a0:	89 2b       	or	r24, r25
    21a2:	11 f0       	breq	.+4      	; 0x21a8 <strtod+0x36>
    21a4:	e7 01       	movw	r28, r14
    21a6:	f3 cf       	rjmp	.-26     	; 0x218e <strtod+0x1c>
    21a8:	0d 32       	cpi	r16, 0x2D	; 45
    21aa:	39 f4       	brne	.+14     	; 0x21ba <strtod+0x48>
    21ac:	7e 01       	movw	r14, r28
    21ae:	82 e0       	ldi	r24, 0x02	; 2
    21b0:	e8 0e       	add	r14, r24
    21b2:	f1 1c       	adc	r15, r1
    21b4:	09 81       	ldd	r16, Y+1	; 0x01
    21b6:	11 e0       	ldi	r17, 0x01	; 1
    21b8:	08 c0       	rjmp	.+16     	; 0x21ca <strtod+0x58>
    21ba:	0b 32       	cpi	r16, 0x2B	; 43
    21bc:	29 f4       	brne	.+10     	; 0x21c8 <strtod+0x56>
    21be:	7e 01       	movw	r14, r28
    21c0:	92 e0       	ldi	r25, 0x02	; 2
    21c2:	e9 0e       	add	r14, r25
    21c4:	f1 1c       	adc	r15, r1
    21c6:	09 81       	ldd	r16, Y+1	; 0x01
    21c8:	10 e0       	ldi	r17, 0x00	; 0
    21ca:	e7 01       	movw	r28, r14
    21cc:	21 97       	sbiw	r28, 0x01	; 1
    21ce:	43 e0       	ldi	r20, 0x03	; 3
    21d0:	50 e0       	ldi	r21, 0x00	; 0
    21d2:	60 e8       	ldi	r22, 0x80	; 128
    21d4:	70 e0       	ldi	r23, 0x00	; 0
    21d6:	ce 01       	movw	r24, r28
    21d8:	0e 94 23 13 	call	0x2646	; 0x2646 <strncasecmp_P>
    21dc:	89 2b       	or	r24, r25
    21de:	c1 f4       	brne	.+48     	; 0x2210 <strtod+0x9e>
    21e0:	23 96       	adiw	r28, 0x03	; 3
    21e2:	45 e0       	ldi	r20, 0x05	; 5
    21e4:	50 e0       	ldi	r21, 0x00	; 0
    21e6:	6b e7       	ldi	r22, 0x7B	; 123
    21e8:	70 e0       	ldi	r23, 0x00	; 0
    21ea:	ce 01       	movw	r24, r28
    21ec:	0e 94 23 13 	call	0x2646	; 0x2646 <strncasecmp_P>
    21f0:	89 2b       	or	r24, r25
    21f2:	09 f4       	brne	.+2      	; 0x21f6 <strtod+0x84>
    21f4:	25 96       	adiw	r28, 0x05	; 5
    21f6:	c1 14       	cp	r12, r1
    21f8:	d1 04       	cpc	r13, r1
    21fa:	19 f0       	breq	.+6      	; 0x2202 <strtod+0x90>
    21fc:	f6 01       	movw	r30, r12
    21fe:	c0 83       	st	Z, r28
    2200:	d1 83       	std	Z+1, r29	; 0x01
    2202:	11 11       	cpse	r17, r1
    2204:	f6 c0       	rjmp	.+492    	; 0x23f2 <strtod+0x280>
    2206:	60 e0       	ldi	r22, 0x00	; 0
    2208:	70 e0       	ldi	r23, 0x00	; 0
    220a:	80 e8       	ldi	r24, 0x80	; 128
    220c:	9f e7       	ldi	r25, 0x7F	; 127
    220e:	fa c0       	rjmp	.+500    	; 0x2404 <strtod+0x292>
    2210:	43 e0       	ldi	r20, 0x03	; 3
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	68 e7       	ldi	r22, 0x78	; 120
    2216:	70 e0       	ldi	r23, 0x00	; 0
    2218:	ce 01       	movw	r24, r28
    221a:	0e 94 23 13 	call	0x2646	; 0x2646 <strncasecmp_P>
    221e:	89 2b       	or	r24, r25
    2220:	59 f4       	brne	.+22     	; 0x2238 <strtod+0xc6>
    2222:	c1 14       	cp	r12, r1
    2224:	d1 04       	cpc	r13, r1
    2226:	09 f4       	brne	.+2      	; 0x222a <strtod+0xb8>
    2228:	e9 c0       	rjmp	.+466    	; 0x23fc <strtod+0x28a>
    222a:	f2 e0       	ldi	r31, 0x02	; 2
    222c:	ef 0e       	add	r14, r31
    222e:	f1 1c       	adc	r15, r1
    2230:	f6 01       	movw	r30, r12
    2232:	e0 82       	st	Z, r14
    2234:	f1 82       	std	Z+1, r15	; 0x01
    2236:	e2 c0       	rjmp	.+452    	; 0x23fc <strtod+0x28a>
    2238:	20 e0       	ldi	r18, 0x00	; 0
    223a:	30 e0       	ldi	r19, 0x00	; 0
    223c:	a9 01       	movw	r20, r18
    223e:	c0 e0       	ldi	r28, 0x00	; 0
    2240:	d0 e0       	ldi	r29, 0x00	; 0
    2242:	f7 01       	movw	r30, r14
    2244:	80 ed       	ldi	r24, 0xD0	; 208
    2246:	a8 2e       	mov	r10, r24
    2248:	a0 0e       	add	r10, r16
    224a:	89 e0       	ldi	r24, 0x09	; 9
    224c:	8a 15       	cp	r24, r10
    224e:	30 f1       	brcs	.+76     	; 0x229c <strtod+0x12a>
    2250:	91 2f       	mov	r25, r17
    2252:	92 60       	ori	r25, 0x02	; 2
    2254:	b9 2e       	mov	r11, r25
    2256:	81 2f       	mov	r24, r17
    2258:	88 70       	andi	r24, 0x08	; 8
    225a:	12 ff       	sbrs	r17, 2
    225c:	04 c0       	rjmp	.+8      	; 0x2266 <strtod+0xf4>
    225e:	81 11       	cpse	r24, r1
    2260:	24 c0       	rjmp	.+72     	; 0x22aa <strtod+0x138>
    2262:	21 96       	adiw	r28, 0x01	; 1
    2264:	22 c0       	rjmp	.+68     	; 0x22aa <strtod+0x138>
    2266:	81 11       	cpse	r24, r1
    2268:	21 97       	sbiw	r28, 0x01	; 1
    226a:	a5 e0       	ldi	r26, 0x05	; 5
    226c:	b0 e0       	ldi	r27, 0x00	; 0
    226e:	0e 94 9a 17 	call	0x2f34	; 0x2f34 <__muluhisi3>
    2272:	dc 01       	movw	r26, r24
    2274:	cb 01       	movw	r24, r22
    2276:	88 0f       	add	r24, r24
    2278:	99 1f       	adc	r25, r25
    227a:	aa 1f       	adc	r26, r26
    227c:	bb 1f       	adc	r27, r27
    227e:	9c 01       	movw	r18, r24
    2280:	ad 01       	movw	r20, r26
    2282:	2a 0d       	add	r18, r10
    2284:	31 1d       	adc	r19, r1
    2286:	41 1d       	adc	r20, r1
    2288:	51 1d       	adc	r21, r1
    228a:	28 39       	cpi	r18, 0x98	; 152
    228c:	89 e9       	ldi	r24, 0x99	; 153
    228e:	38 07       	cpc	r19, r24
    2290:	48 07       	cpc	r20, r24
    2292:	89 e1       	ldi	r24, 0x19	; 25
    2294:	58 07       	cpc	r21, r24
    2296:	48 f0       	brcs	.+18     	; 0x22aa <strtod+0x138>
    2298:	16 60       	ori	r17, 0x06	; 6
    229a:	06 c0       	rjmp	.+12     	; 0x22a8 <strtod+0x136>
    229c:	9e ef       	ldi	r25, 0xFE	; 254
    229e:	a9 12       	cpse	r10, r25
    22a0:	0a c0       	rjmp	.+20     	; 0x22b6 <strtod+0x144>
    22a2:	13 fd       	sbrc	r17, 3
    22a4:	40 c0       	rjmp	.+128    	; 0x2326 <strtod+0x1b4>
    22a6:	18 60       	ori	r17, 0x08	; 8
    22a8:	b1 2e       	mov	r11, r17
    22aa:	8f ef       	ldi	r24, 0xFF	; 255
    22ac:	e8 1a       	sub	r14, r24
    22ae:	f8 0a       	sbc	r15, r24
    22b0:	00 81       	ld	r16, Z
    22b2:	1b 2d       	mov	r17, r11
    22b4:	c6 cf       	rjmp	.-116    	; 0x2242 <strtod+0xd0>
    22b6:	80 2f       	mov	r24, r16
    22b8:	8f 7d       	andi	r24, 0xDF	; 223
    22ba:	85 34       	cpi	r24, 0x45	; 69
    22bc:	a1 f5       	brne	.+104    	; 0x2326 <strtod+0x1b4>
    22be:	80 81       	ld	r24, Z
    22c0:	8d 32       	cpi	r24, 0x2D	; 45
    22c2:	11 f4       	brne	.+4      	; 0x22c8 <strtod+0x156>
    22c4:	10 61       	ori	r17, 0x10	; 16
    22c6:	06 c0       	rjmp	.+12     	; 0x22d4 <strtod+0x162>
    22c8:	8b 32       	cpi	r24, 0x2B	; 43
    22ca:	21 f0       	breq	.+8      	; 0x22d4 <strtod+0x162>
    22cc:	31 96       	adiw	r30, 0x01	; 1
    22ce:	61 e0       	ldi	r22, 0x01	; 1
    22d0:	70 e0       	ldi	r23, 0x00	; 0
    22d2:	04 c0       	rjmp	.+8      	; 0x22dc <strtod+0x16a>
    22d4:	81 81       	ldd	r24, Z+1	; 0x01
    22d6:	32 96       	adiw	r30, 0x02	; 2
    22d8:	62 e0       	ldi	r22, 0x02	; 2
    22da:	70 e0       	ldi	r23, 0x00	; 0
    22dc:	80 53       	subi	r24, 0x30	; 48
    22de:	8a 30       	cpi	r24, 0x0A	; 10
    22e0:	18 f0       	brcs	.+6      	; 0x22e8 <strtod+0x176>
    22e2:	e6 1b       	sub	r30, r22
    22e4:	f7 0b       	sbc	r31, r23
    22e6:	1f c0       	rjmp	.+62     	; 0x2326 <strtod+0x1b4>
    22e8:	60 e0       	ldi	r22, 0x00	; 0
    22ea:	70 e0       	ldi	r23, 0x00	; 0
    22ec:	60 38       	cpi	r22, 0x80	; 128
    22ee:	9c e0       	ldi	r25, 0x0C	; 12
    22f0:	79 07       	cpc	r23, r25
    22f2:	5c f4       	brge	.+22     	; 0x230a <strtod+0x198>
    22f4:	db 01       	movw	r26, r22
    22f6:	aa 0f       	add	r26, r26
    22f8:	bb 1f       	adc	r27, r27
    22fa:	aa 0f       	add	r26, r26
    22fc:	bb 1f       	adc	r27, r27
    22fe:	6a 0f       	add	r22, r26
    2300:	7b 1f       	adc	r23, r27
    2302:	66 0f       	add	r22, r22
    2304:	77 1f       	adc	r23, r23
    2306:	68 0f       	add	r22, r24
    2308:	71 1d       	adc	r23, r1
    230a:	31 96       	adiw	r30, 0x01	; 1
    230c:	df 01       	movw	r26, r30
    230e:	11 97       	sbiw	r26, 0x01	; 1
    2310:	8c 91       	ld	r24, X
    2312:	80 53       	subi	r24, 0x30	; 48
    2314:	8a 30       	cpi	r24, 0x0A	; 10
    2316:	50 f3       	brcs	.-44     	; 0x22ec <strtod+0x17a>
    2318:	14 ff       	sbrs	r17, 4
    231a:	03 c0       	rjmp	.+6      	; 0x2322 <strtod+0x1b0>
    231c:	71 95       	neg	r23
    231e:	61 95       	neg	r22
    2320:	71 09       	sbc	r23, r1
    2322:	c6 0f       	add	r28, r22
    2324:	d7 1f       	adc	r29, r23
    2326:	11 ff       	sbrs	r17, 1
    2328:	08 c0       	rjmp	.+16     	; 0x233a <strtod+0x1c8>
    232a:	c1 14       	cp	r12, r1
    232c:	d1 04       	cpc	r13, r1
    232e:	29 f0       	breq	.+10     	; 0x233a <strtod+0x1c8>
    2330:	cf 01       	movw	r24, r30
    2332:	01 97       	sbiw	r24, 0x01	; 1
    2334:	f6 01       	movw	r30, r12
    2336:	80 83       	st	Z, r24
    2338:	91 83       	std	Z+1, r25	; 0x01
    233a:	ca 01       	movw	r24, r20
    233c:	b9 01       	movw	r22, r18
    233e:	0e 94 d7 13 	call	0x27ae	; 0x27ae <__floatunsisf>
    2342:	21 2f       	mov	r18, r17
    2344:	23 70       	andi	r18, 0x03	; 3
    2346:	23 30       	cpi	r18, 0x03	; 3
    2348:	19 f0       	breq	.+6      	; 0x2350 <strtod+0x1de>
    234a:	4b 01       	movw	r8, r22
    234c:	5c 01       	movw	r10, r24
    234e:	06 c0       	rjmp	.+12     	; 0x235c <strtod+0x1ea>
    2350:	4b 01       	movw	r8, r22
    2352:	5c 01       	movw	r10, r24
    2354:	b7 fa       	bst	r11, 7
    2356:	b0 94       	com	r11
    2358:	b7 f8       	bld	r11, 7
    235a:	b0 94       	com	r11
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	a9 01       	movw	r20, r18
    2362:	c5 01       	movw	r24, r10
    2364:	b4 01       	movw	r22, r8
    2366:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__cmpsf2>
    236a:	88 23       	and	r24, r24
    236c:	09 f4       	brne	.+2      	; 0x2370 <strtod+0x1fe>
    236e:	3e c0       	rjmp	.+124    	; 0x23ec <strtod+0x27a>
    2370:	d7 ff       	sbrs	r29, 7
    2372:	06 c0       	rjmp	.+12     	; 0x2380 <strtod+0x20e>
    2374:	d1 95       	neg	r29
    2376:	c1 95       	neg	r28
    2378:	d1 09       	sbc	r29, r1
    237a:	07 e9       	ldi	r16, 0x97	; 151
    237c:	10 e0       	ldi	r17, 0x00	; 0
    237e:	02 c0       	rjmp	.+4      	; 0x2384 <strtod+0x212>
    2380:	0f ea       	ldi	r16, 0xAF	; 175
    2382:	10 e0       	ldi	r17, 0x00	; 0
    2384:	68 01       	movw	r12, r16
    2386:	f8 e1       	ldi	r31, 0x18	; 24
    2388:	cf 1a       	sub	r12, r31
    238a:	d1 08       	sbc	r13, r1
    238c:	90 e2       	ldi	r25, 0x20	; 32
    238e:	e9 2e       	mov	r14, r25
    2390:	f1 2c       	mov	r15, r1
    2392:	ce 15       	cp	r28, r14
    2394:	df 05       	cpc	r29, r15
    2396:	74 f0       	brlt	.+28     	; 0x23b4 <strtod+0x242>
    2398:	f8 01       	movw	r30, r16
    239a:	25 91       	lpm	r18, Z+
    239c:	35 91       	lpm	r19, Z+
    239e:	45 91       	lpm	r20, Z+
    23a0:	54 91       	lpm	r21, Z
    23a2:	c5 01       	movw	r24, r10
    23a4:	b4 01       	movw	r22, r8
    23a6:	0e 94 38 14 	call	0x2870	; 0x2870 <__mulsf3>
    23aa:	4b 01       	movw	r8, r22
    23ac:	5c 01       	movw	r10, r24
    23ae:	ce 19       	sub	r28, r14
    23b0:	df 09       	sbc	r29, r15
    23b2:	ef cf       	rjmp	.-34     	; 0x2392 <strtod+0x220>
    23b4:	04 50       	subi	r16, 0x04	; 4
    23b6:	11 09       	sbc	r17, r1
    23b8:	f5 94       	asr	r15
    23ba:	e7 94       	ror	r14
    23bc:	0c 15       	cp	r16, r12
    23be:	1d 05       	cpc	r17, r13
    23c0:	41 f7       	brne	.-48     	; 0x2392 <strtod+0x220>
    23c2:	8a 2d       	mov	r24, r10
    23c4:	88 0f       	add	r24, r24
    23c6:	8b 2d       	mov	r24, r11
    23c8:	88 1f       	adc	r24, r24
    23ca:	8f 3f       	cpi	r24, 0xFF	; 255
    23cc:	49 f0       	breq	.+18     	; 0x23e0 <strtod+0x26e>
    23ce:	20 e0       	ldi	r18, 0x00	; 0
    23d0:	30 e0       	ldi	r19, 0x00	; 0
    23d2:	a9 01       	movw	r20, r18
    23d4:	c5 01       	movw	r24, r10
    23d6:	b4 01       	movw	r22, r8
    23d8:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__cmpsf2>
    23dc:	81 11       	cpse	r24, r1
    23de:	06 c0       	rjmp	.+12     	; 0x23ec <strtod+0x27a>
    23e0:	82 e2       	ldi	r24, 0x22	; 34
    23e2:	90 e0       	ldi	r25, 0x00	; 0
    23e4:	80 93 bd 3b 	sts	0x3BBD, r24	; 0x803bbd <errno>
    23e8:	90 93 be 3b 	sts	0x3BBE, r25	; 0x803bbe <errno+0x1>
    23ec:	c5 01       	movw	r24, r10
    23ee:	b4 01       	movw	r22, r8
    23f0:	09 c0       	rjmp	.+18     	; 0x2404 <strtod+0x292>
    23f2:	60 e0       	ldi	r22, 0x00	; 0
    23f4:	70 e0       	ldi	r23, 0x00	; 0
    23f6:	80 e8       	ldi	r24, 0x80	; 128
    23f8:	9f ef       	ldi	r25, 0xFF	; 255
    23fa:	04 c0       	rjmp	.+8      	; 0x2404 <strtod+0x292>
    23fc:	60 e0       	ldi	r22, 0x00	; 0
    23fe:	70 e0       	ldi	r23, 0x00	; 0
    2400:	80 ec       	ldi	r24, 0xC0	; 192
    2402:	9f e7       	ldi	r25, 0x7F	; 127
    2404:	cd b7       	in	r28, 0x3d	; 61
    2406:	de b7       	in	r29, 0x3e	; 62
    2408:	ec e0       	ldi	r30, 0x0C	; 12
    240a:	0c 94 c4 17 	jmp	0x2f88	; 0x2f88 <__epilogue_restores__+0xc>

0000240e <strtoul>:
    240e:	a0 e0       	ldi	r26, 0x00	; 0
    2410:	b0 e0       	ldi	r27, 0x00	; 0
    2412:	ed e0       	ldi	r30, 0x0D	; 13
    2414:	f2 e1       	ldi	r31, 0x12	; 18
    2416:	0c 94 a6 17 	jmp	0x2f4c	; 0x2f4c <__prologue_saves__+0x2>
    241a:	5c 01       	movw	r10, r24
    241c:	6b 01       	movw	r12, r22
    241e:	7a 01       	movw	r14, r20
    2420:	61 15       	cp	r22, r1
    2422:	71 05       	cpc	r23, r1
    2424:	19 f0       	breq	.+6      	; 0x242c <strtoul+0x1e>
    2426:	fb 01       	movw	r30, r22
    2428:	80 83       	st	Z, r24
    242a:	91 83       	std	Z+1, r25	; 0x01
    242c:	e1 14       	cp	r14, r1
    242e:	f1 04       	cpc	r15, r1
    2430:	29 f0       	breq	.+10     	; 0x243c <strtoul+0x2e>
    2432:	c7 01       	movw	r24, r14
    2434:	02 97       	sbiw	r24, 0x02	; 2
    2436:	83 97       	sbiw	r24, 0x23	; 35
    2438:	08 f0       	brcs	.+2      	; 0x243c <strtoul+0x2e>
    243a:	c9 c0       	rjmp	.+402    	; 0x25ce <strtoul+0x1c0>
    243c:	e5 01       	movw	r28, r10
    243e:	21 96       	adiw	r28, 0x01	; 1
    2440:	f5 01       	movw	r30, r10
    2442:	10 81       	ld	r17, Z
    2444:	81 2f       	mov	r24, r17
    2446:	90 e0       	ldi	r25, 0x00	; 0
    2448:	0e 94 1a 13 	call	0x2634	; 0x2634 <isspace>
    244c:	89 2b       	or	r24, r25
    244e:	11 f0       	breq	.+4      	; 0x2454 <strtoul+0x46>
    2450:	5e 01       	movw	r10, r28
    2452:	f4 cf       	rjmp	.-24     	; 0x243c <strtoul+0x2e>
    2454:	1d 32       	cpi	r17, 0x2D	; 45
    2456:	29 f4       	brne	.+10     	; 0x2462 <strtoul+0x54>
    2458:	21 96       	adiw	r28, 0x01	; 1
    245a:	f5 01       	movw	r30, r10
    245c:	11 81       	ldd	r17, Z+1	; 0x01
    245e:	01 e0       	ldi	r16, 0x01	; 1
    2460:	07 c0       	rjmp	.+14     	; 0x2470 <strtoul+0x62>
    2462:	1b 32       	cpi	r17, 0x2B	; 43
    2464:	21 f4       	brne	.+8      	; 0x246e <strtoul+0x60>
    2466:	e5 01       	movw	r28, r10
    2468:	22 96       	adiw	r28, 0x02	; 2
    246a:	f5 01       	movw	r30, r10
    246c:	11 81       	ldd	r17, Z+1	; 0x01
    246e:	00 e0       	ldi	r16, 0x00	; 0
    2470:	e1 14       	cp	r14, r1
    2472:	f1 04       	cpc	r15, r1
    2474:	b1 f0       	breq	.+44     	; 0x24a2 <strtoul+0x94>
    2476:	f0 e1       	ldi	r31, 0x10	; 16
    2478:	ef 16       	cp	r14, r31
    247a:	f1 04       	cpc	r15, r1
    247c:	29 f4       	brne	.+10     	; 0x2488 <strtoul+0x7a>
    247e:	b0 c0       	rjmp	.+352    	; 0x25e0 <strtoul+0x1d2>
    2480:	10 e3       	ldi	r17, 0x30	; 48
    2482:	e1 14       	cp	r14, r1
    2484:	f1 04       	cpc	r15, r1
    2486:	01 f1       	breq	.+64     	; 0x24c8 <strtoul+0xba>
    2488:	2a e0       	ldi	r18, 0x0A	; 10
    248a:	e2 16       	cp	r14, r18
    248c:	f1 04       	cpc	r15, r1
    248e:	b1 f1       	breq	.+108    	; 0x24fc <strtoul+0xee>
    2490:	80 e1       	ldi	r24, 0x10	; 16
    2492:	e8 16       	cp	r14, r24
    2494:	f1 04       	cpc	r15, r1
    2496:	71 f0       	breq	.+28     	; 0x24b4 <strtoul+0xa6>
    2498:	e8 e0       	ldi	r30, 0x08	; 8
    249a:	ee 16       	cp	r14, r30
    249c:	f1 04       	cpc	r15, r1
    249e:	f1 f4       	brne	.+60     	; 0x24dc <strtoul+0xce>
    24a0:	13 c0       	rjmp	.+38     	; 0x24c8 <strtoul+0xba>
    24a2:	10 33       	cpi	r17, 0x30	; 48
    24a4:	41 f5       	brne	.+80     	; 0x24f6 <strtoul+0xe8>
    24a6:	88 81       	ld	r24, Y
    24a8:	8f 7d       	andi	r24, 0xDF	; 223
    24aa:	88 35       	cpi	r24, 0x58	; 88
    24ac:	49 f7       	brne	.-46     	; 0x2480 <strtoul+0x72>
    24ae:	19 81       	ldd	r17, Y+1	; 0x01
    24b0:	22 96       	adiw	r28, 0x02	; 2
    24b2:	02 60       	ori	r16, 0x02	; 2
    24b4:	f0 e1       	ldi	r31, 0x10	; 16
    24b6:	ef 2e       	mov	r14, r31
    24b8:	f1 2c       	mov	r15, r1
    24ba:	88 24       	eor	r8, r8
    24bc:	8a 94       	dec	r8
    24be:	98 2c       	mov	r9, r8
    24c0:	a8 2c       	mov	r10, r8
    24c2:	af e0       	ldi	r26, 0x0F	; 15
    24c4:	ba 2e       	mov	r11, r26
    24c6:	20 c0       	rjmp	.+64     	; 0x2508 <strtoul+0xfa>
    24c8:	78 e0       	ldi	r23, 0x08	; 8
    24ca:	e7 2e       	mov	r14, r23
    24cc:	f1 2c       	mov	r15, r1
    24ce:	88 24       	eor	r8, r8
    24d0:	8a 94       	dec	r8
    24d2:	98 2c       	mov	r9, r8
    24d4:	a8 2c       	mov	r10, r8
    24d6:	ef e1       	ldi	r30, 0x1F	; 31
    24d8:	be 2e       	mov	r11, r30
    24da:	16 c0       	rjmp	.+44     	; 0x2508 <strtoul+0xfa>
    24dc:	6f ef       	ldi	r22, 0xFF	; 255
    24de:	7f ef       	ldi	r23, 0xFF	; 255
    24e0:	cb 01       	movw	r24, r22
    24e2:	97 01       	movw	r18, r14
    24e4:	0f 2c       	mov	r0, r15
    24e6:	00 0c       	add	r0, r0
    24e8:	44 0b       	sbc	r20, r20
    24ea:	55 0b       	sbc	r21, r21
    24ec:	0e 94 83 10 	call	0x2106	; 0x2106 <__udivmodsi4>
    24f0:	49 01       	movw	r8, r18
    24f2:	5a 01       	movw	r10, r20
    24f4:	09 c0       	rjmp	.+18     	; 0x2508 <strtoul+0xfa>
    24f6:	8a e0       	ldi	r24, 0x0A	; 10
    24f8:	e8 2e       	mov	r14, r24
    24fa:	f1 2c       	mov	r15, r1
    24fc:	69 e9       	ldi	r22, 0x99	; 153
    24fe:	86 2e       	mov	r8, r22
    2500:	98 2c       	mov	r9, r8
    2502:	a8 2c       	mov	r10, r8
    2504:	69 e1       	ldi	r22, 0x19	; 25
    2506:	b6 2e       	mov	r11, r22
    2508:	40 e0       	ldi	r20, 0x00	; 0
    250a:	60 e0       	ldi	r22, 0x00	; 0
    250c:	70 e0       	ldi	r23, 0x00	; 0
    250e:	cb 01       	movw	r24, r22
    2510:	27 01       	movw	r4, r14
    2512:	0f 2c       	mov	r0, r15
    2514:	00 0c       	add	r0, r0
    2516:	66 08       	sbc	r6, r6
    2518:	77 08       	sbc	r7, r7
    251a:	fe 01       	movw	r30, r28
    251c:	50 ed       	ldi	r21, 0xD0	; 208
    251e:	35 2e       	mov	r3, r21
    2520:	31 0e       	add	r3, r17
    2522:	29 e0       	ldi	r18, 0x09	; 9
    2524:	23 15       	cp	r18, r3
    2526:	70 f4       	brcc	.+28     	; 0x2544 <strtoul+0x136>
    2528:	2f eb       	ldi	r18, 0xBF	; 191
    252a:	21 0f       	add	r18, r17
    252c:	2a 31       	cpi	r18, 0x1A	; 26
    252e:	18 f4       	brcc	.+6      	; 0x2536 <strtoul+0x128>
    2530:	39 ec       	ldi	r19, 0xC9	; 201
    2532:	33 2e       	mov	r3, r19
    2534:	06 c0       	rjmp	.+12     	; 0x2542 <strtoul+0x134>
    2536:	2f e9       	ldi	r18, 0x9F	; 159
    2538:	21 0f       	add	r18, r17
    253a:	2a 31       	cpi	r18, 0x1A	; 26
    253c:	30 f5       	brcc	.+76     	; 0x258a <strtoul+0x17c>
    253e:	29 ea       	ldi	r18, 0xA9	; 169
    2540:	32 2e       	mov	r3, r18
    2542:	31 0e       	add	r3, r17
    2544:	23 2d       	mov	r18, r3
    2546:	30 e0       	ldi	r19, 0x00	; 0
    2548:	2e 15       	cp	r18, r14
    254a:	3f 05       	cpc	r19, r15
    254c:	f4 f4       	brge	.+60     	; 0x258a <strtoul+0x17c>
    254e:	4f 3f       	cpi	r20, 0xFF	; 255
    2550:	c9 f0       	breq	.+50     	; 0x2584 <strtoul+0x176>
    2552:	86 16       	cp	r8, r22
    2554:	97 06       	cpc	r9, r23
    2556:	a8 06       	cpc	r10, r24
    2558:	b9 06       	cpc	r11, r25
    255a:	88 f0       	brcs	.+34     	; 0x257e <strtoul+0x170>
    255c:	a3 01       	movw	r20, r6
    255e:	92 01       	movw	r18, r4
    2560:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <__mulsi3>
    2564:	23 2d       	mov	r18, r3
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	40 e0       	ldi	r20, 0x00	; 0
    256a:	50 e0       	ldi	r21, 0x00	; 0
    256c:	62 0f       	add	r22, r18
    256e:	73 1f       	adc	r23, r19
    2570:	84 1f       	adc	r24, r20
    2572:	95 1f       	adc	r25, r21
    2574:	62 17       	cp	r22, r18
    2576:	73 07       	cpc	r23, r19
    2578:	84 07       	cpc	r24, r20
    257a:	95 07       	cpc	r25, r21
    257c:	10 f4       	brcc	.+4      	; 0x2582 <strtoul+0x174>
    257e:	4f ef       	ldi	r20, 0xFF	; 255
    2580:	01 c0       	rjmp	.+2      	; 0x2584 <strtoul+0x176>
    2582:	41 e0       	ldi	r20, 0x01	; 1
    2584:	21 96       	adiw	r28, 0x01	; 1
    2586:	10 81       	ld	r17, Z
    2588:	c8 cf       	rjmp	.-112    	; 0x251a <strtoul+0x10c>
    258a:	c1 14       	cp	r12, r1
    258c:	d1 04       	cpc	r13, r1
    258e:	51 f0       	breq	.+20     	; 0x25a4 <strtoul+0x196>
    2590:	44 23       	and	r20, r20
    2592:	11 f0       	breq	.+4      	; 0x2598 <strtoul+0x18a>
    2594:	21 97       	sbiw	r28, 0x01	; 1
    2596:	03 c0       	rjmp	.+6      	; 0x259e <strtoul+0x190>
    2598:	01 ff       	sbrs	r16, 1
    259a:	04 c0       	rjmp	.+8      	; 0x25a4 <strtoul+0x196>
    259c:	22 97       	sbiw	r28, 0x02	; 2
    259e:	f6 01       	movw	r30, r12
    25a0:	c0 83       	st	Z, r28
    25a2:	d1 83       	std	Z+1, r29	; 0x01
    25a4:	00 ff       	sbrs	r16, 0
    25a6:	07 c0       	rjmp	.+14     	; 0x25b6 <strtoul+0x1a8>
    25a8:	90 95       	com	r25
    25aa:	80 95       	com	r24
    25ac:	70 95       	com	r23
    25ae:	61 95       	neg	r22
    25b0:	7f 4f       	sbci	r23, 0xFF	; 255
    25b2:	8f 4f       	sbci	r24, 0xFF	; 255
    25b4:	9f 4f       	sbci	r25, 0xFF	; 255
    25b6:	4f 3f       	cpi	r20, 0xFF	; 255
    25b8:	79 f4       	brne	.+30     	; 0x25d8 <strtoul+0x1ca>
    25ba:	82 e2       	ldi	r24, 0x22	; 34
    25bc:	90 e0       	ldi	r25, 0x00	; 0
    25be:	80 93 bd 3b 	sts	0x3BBD, r24	; 0x803bbd <errno>
    25c2:	90 93 be 3b 	sts	0x3BBE, r25	; 0x803bbe <errno+0x1>
    25c6:	3f ef       	ldi	r19, 0xFF	; 255
    25c8:	2f ef       	ldi	r18, 0xFF	; 255
    25ca:	9f ef       	ldi	r25, 0xFF	; 255
    25cc:	0d c0       	rjmp	.+26     	; 0x25e8 <strtoul+0x1da>
    25ce:	40 e0       	ldi	r20, 0x00	; 0
    25d0:	30 e0       	ldi	r19, 0x00	; 0
    25d2:	20 e0       	ldi	r18, 0x00	; 0
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	08 c0       	rjmp	.+16     	; 0x25e8 <strtoul+0x1da>
    25d8:	46 2f       	mov	r20, r22
    25da:	37 2f       	mov	r19, r23
    25dc:	28 2f       	mov	r18, r24
    25de:	04 c0       	rjmp	.+8      	; 0x25e8 <strtoul+0x1da>
    25e0:	10 33       	cpi	r17, 0x30	; 48
    25e2:	09 f0       	breq	.+2      	; 0x25e6 <strtoul+0x1d8>
    25e4:	67 cf       	rjmp	.-306    	; 0x24b4 <strtoul+0xa6>
    25e6:	5f cf       	rjmp	.-322    	; 0x24a6 <strtoul+0x98>
    25e8:	64 2f       	mov	r22, r20
    25ea:	73 2f       	mov	r23, r19
    25ec:	82 2f       	mov	r24, r18
    25ee:	cd b7       	in	r28, 0x3d	; 61
    25f0:	de b7       	in	r29, 0x3e	; 62
    25f2:	e1 e1       	ldi	r30, 0x11	; 17
    25f4:	0c 94 bf 17 	jmp	0x2f7e	; 0x2f7e <__epilogue_restores__+0x2>

000025f8 <atoi>:
    25f8:	fc 01       	movw	r30, r24
    25fa:	88 27       	eor	r24, r24
    25fc:	99 27       	eor	r25, r25
    25fe:	e8 94       	clt
    2600:	21 91       	ld	r18, Z+
    2602:	20 32       	cpi	r18, 0x20	; 32
    2604:	e9 f3       	breq	.-6      	; 0x2600 <atoi+0x8>
    2606:	29 30       	cpi	r18, 0x09	; 9
    2608:	10 f0       	brcs	.+4      	; 0x260e <atoi+0x16>
    260a:	2e 30       	cpi	r18, 0x0E	; 14
    260c:	c8 f3       	brcs	.-14     	; 0x2600 <atoi+0x8>
    260e:	2b 32       	cpi	r18, 0x2B	; 43
    2610:	41 f0       	breq	.+16     	; 0x2622 <atoi+0x2a>
    2612:	2d 32       	cpi	r18, 0x2D	; 45
    2614:	39 f4       	brne	.+14     	; 0x2624 <atoi+0x2c>
    2616:	68 94       	set
    2618:	04 c0       	rjmp	.+8      	; 0x2622 <atoi+0x2a>
    261a:	0e 94 72 13 	call	0x26e4	; 0x26e4 <__mulhi_const_10>
    261e:	82 0f       	add	r24, r18
    2620:	91 1d       	adc	r25, r1
    2622:	21 91       	ld	r18, Z+
    2624:	20 53       	subi	r18, 0x30	; 48
    2626:	2a 30       	cpi	r18, 0x0A	; 10
    2628:	c0 f3       	brcs	.-16     	; 0x261a <atoi+0x22>
    262a:	1e f4       	brtc	.+6      	; 0x2632 <atoi+0x3a>
    262c:	90 95       	com	r25
    262e:	81 95       	neg	r24
    2630:	9f 4f       	sbci	r25, 0xFF	; 255
    2632:	08 95       	ret

00002634 <isspace>:
    2634:	91 11       	cpse	r25, r1
    2636:	0c 94 86 16 	jmp	0x2d0c	; 0x2d0c <__ctype_isfalse>
    263a:	80 32       	cpi	r24, 0x20	; 32
    263c:	19 f0       	breq	.+6      	; 0x2644 <isspace+0x10>
    263e:	89 50       	subi	r24, 0x09	; 9
    2640:	85 50       	subi	r24, 0x05	; 5
    2642:	c8 f7       	brcc	.-14     	; 0x2636 <isspace+0x2>
    2644:	08 95       	ret

00002646 <strncasecmp_P>:
    2646:	fb 01       	movw	r30, r22
    2648:	dc 01       	movw	r26, r24
    264a:	41 50       	subi	r20, 0x01	; 1
    264c:	50 40       	sbci	r21, 0x00	; 0
    264e:	88 f0       	brcs	.+34     	; 0x2672 <strncasecmp_P+0x2c>
    2650:	8d 91       	ld	r24, X+
    2652:	81 34       	cpi	r24, 0x41	; 65
    2654:	1c f0       	brlt	.+6      	; 0x265c <strncasecmp_P+0x16>
    2656:	8b 35       	cpi	r24, 0x5B	; 91
    2658:	0c f4       	brge	.+2      	; 0x265c <strncasecmp_P+0x16>
    265a:	80 5e       	subi	r24, 0xE0	; 224
    265c:	65 91       	lpm	r22, Z+
    265e:	61 34       	cpi	r22, 0x41	; 65
    2660:	1c f0       	brlt	.+6      	; 0x2668 <strncasecmp_P+0x22>
    2662:	6b 35       	cpi	r22, 0x5B	; 91
    2664:	0c f4       	brge	.+2      	; 0x2668 <strncasecmp_P+0x22>
    2666:	60 5e       	subi	r22, 0xE0	; 224
    2668:	86 1b       	sub	r24, r22
    266a:	61 11       	cpse	r22, r1
    266c:	71 f3       	breq	.-36     	; 0x264a <strncasecmp_P+0x4>
    266e:	99 0b       	sbc	r25, r25
    2670:	08 95       	ret
    2672:	88 1b       	sub	r24, r24
    2674:	fc cf       	rjmp	.-8      	; 0x266e <strncasecmp_P+0x28>

00002676 <strcmp>:
    2676:	fb 01       	movw	r30, r22
    2678:	dc 01       	movw	r26, r24
    267a:	8d 91       	ld	r24, X+
    267c:	01 90       	ld	r0, Z+
    267e:	80 19       	sub	r24, r0
    2680:	01 10       	cpse	r0, r1
    2682:	d9 f3       	breq	.-10     	; 0x267a <strcmp+0x4>
    2684:	99 0b       	sbc	r25, r25
    2686:	08 95       	ret

00002688 <strcpy>:
    2688:	fb 01       	movw	r30, r22
    268a:	dc 01       	movw	r26, r24
    268c:	01 90       	ld	r0, Z+
    268e:	0d 92       	st	X+, r0
    2690:	00 20       	and	r0, r0
    2692:	e1 f7       	brne	.-8      	; 0x268c <strcpy+0x4>
    2694:	08 95       	ret

00002696 <strtok_r>:
    2696:	fa 01       	movw	r30, r20
    2698:	a1 91       	ld	r26, Z+
    269a:	b0 81       	ld	r27, Z
    269c:	00 97       	sbiw	r24, 0x00	; 0
    269e:	19 f4       	brne	.+6      	; 0x26a6 <strtok_r+0x10>
    26a0:	10 97       	sbiw	r26, 0x00	; 0
    26a2:	e1 f0       	breq	.+56     	; 0x26dc <strtok_r+0x46>
    26a4:	cd 01       	movw	r24, r26
    26a6:	dc 01       	movw	r26, r24
    26a8:	cd 01       	movw	r24, r26
    26aa:	0d 90       	ld	r0, X+
    26ac:	00 20       	and	r0, r0
    26ae:	11 f4       	brne	.+4      	; 0x26b4 <strtok_r+0x1e>
    26b0:	c0 01       	movw	r24, r0
    26b2:	13 c0       	rjmp	.+38     	; 0x26da <strtok_r+0x44>
    26b4:	fb 01       	movw	r30, r22
    26b6:	21 91       	ld	r18, Z+
    26b8:	22 23       	and	r18, r18
    26ba:	19 f0       	breq	.+6      	; 0x26c2 <strtok_r+0x2c>
    26bc:	20 15       	cp	r18, r0
    26be:	d9 f7       	brne	.-10     	; 0x26b6 <strtok_r+0x20>
    26c0:	f3 cf       	rjmp	.-26     	; 0x26a8 <strtok_r+0x12>
    26c2:	fb 01       	movw	r30, r22
    26c4:	21 91       	ld	r18, Z+
    26c6:	20 15       	cp	r18, r0
    26c8:	19 f4       	brne	.+6      	; 0x26d0 <strtok_r+0x3a>
    26ca:	1e 92       	st	-X, r1
    26cc:	11 96       	adiw	r26, 0x01	; 1
    26ce:	06 c0       	rjmp	.+12     	; 0x26dc <strtok_r+0x46>
    26d0:	22 23       	and	r18, r18
    26d2:	c1 f7       	brne	.-16     	; 0x26c4 <strtok_r+0x2e>
    26d4:	0d 90       	ld	r0, X+
    26d6:	00 20       	and	r0, r0
    26d8:	a1 f7       	brne	.-24     	; 0x26c2 <strtok_r+0x2c>
    26da:	d0 01       	movw	r26, r0
    26dc:	fa 01       	movw	r30, r20
    26de:	a1 93       	st	Z+, r26
    26e0:	b0 83       	st	Z, r27
    26e2:	08 95       	ret

000026e4 <__mulhi_const_10>:
    26e4:	7a e0       	ldi	r23, 0x0A	; 10
    26e6:	97 9f       	mul	r25, r23
    26e8:	90 2d       	mov	r25, r0
    26ea:	87 9f       	mul	r24, r23
    26ec:	80 2d       	mov	r24, r0
    26ee:	91 0d       	add	r25, r1
    26f0:	11 24       	eor	r1, r1
    26f2:	08 95       	ret

000026f4 <vsnprintf>:
    26f4:	ae e0       	ldi	r26, 0x0E	; 14
    26f6:	b0 e0       	ldi	r27, 0x00	; 0
    26f8:	e0 e8       	ldi	r30, 0x80	; 128
    26fa:	f3 e1       	ldi	r31, 0x13	; 19
    26fc:	0c 94 b3 17 	jmp	0x2f66	; 0x2f66 <__prologue_saves__+0x1c>
    2700:	8c 01       	movw	r16, r24
    2702:	fa 01       	movw	r30, r20
    2704:	86 e0       	ldi	r24, 0x06	; 6
    2706:	8c 83       	std	Y+4, r24	; 0x04
    2708:	09 83       	std	Y+1, r16	; 0x01
    270a:	1a 83       	std	Y+2, r17	; 0x02
    270c:	77 ff       	sbrs	r23, 7
    270e:	02 c0       	rjmp	.+4      	; 0x2714 <vsnprintf+0x20>
    2710:	60 e0       	ldi	r22, 0x00	; 0
    2712:	70 e8       	ldi	r23, 0x80	; 128
    2714:	cb 01       	movw	r24, r22
    2716:	01 97       	sbiw	r24, 0x01	; 1
    2718:	8d 83       	std	Y+5, r24	; 0x05
    271a:	9e 83       	std	Y+6, r25	; 0x06
    271c:	a9 01       	movw	r20, r18
    271e:	bf 01       	movw	r22, r30
    2720:	ce 01       	movw	r24, r28
    2722:	01 96       	adiw	r24, 0x01	; 1
    2724:	0e 94 a5 14 	call	0x294a	; 0x294a <vfprintf>
    2728:	4d 81       	ldd	r20, Y+5	; 0x05
    272a:	5e 81       	ldd	r21, Y+6	; 0x06
    272c:	57 fd       	sbrc	r21, 7
    272e:	0a c0       	rjmp	.+20     	; 0x2744 <vsnprintf+0x50>
    2730:	2f 81       	ldd	r18, Y+7	; 0x07
    2732:	38 85       	ldd	r19, Y+8	; 0x08
    2734:	42 17       	cp	r20, r18
    2736:	53 07       	cpc	r21, r19
    2738:	0c f4       	brge	.+2      	; 0x273c <vsnprintf+0x48>
    273a:	9a 01       	movw	r18, r20
    273c:	f8 01       	movw	r30, r16
    273e:	e2 0f       	add	r30, r18
    2740:	f3 1f       	adc	r31, r19
    2742:	10 82       	st	Z, r1
    2744:	2e 96       	adiw	r28, 0x0e	; 14
    2746:	e4 e0       	ldi	r30, 0x04	; 4
    2748:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__epilogue_restores__+0x1c>

0000274c <vsnprintf_P>:
    274c:	ae e0       	ldi	r26, 0x0E	; 14
    274e:	b0 e0       	ldi	r27, 0x00	; 0
    2750:	ec ea       	ldi	r30, 0xAC	; 172
    2752:	f3 e1       	ldi	r31, 0x13	; 19
    2754:	0c 94 b3 17 	jmp	0x2f66	; 0x2f66 <__prologue_saves__+0x1c>
    2758:	8c 01       	movw	r16, r24
    275a:	fa 01       	movw	r30, r20
    275c:	8e e0       	ldi	r24, 0x0E	; 14
    275e:	8c 83       	std	Y+4, r24	; 0x04
    2760:	09 83       	std	Y+1, r16	; 0x01
    2762:	1a 83       	std	Y+2, r17	; 0x02
    2764:	77 ff       	sbrs	r23, 7
    2766:	02 c0       	rjmp	.+4      	; 0x276c <vsnprintf_P+0x20>
    2768:	60 e0       	ldi	r22, 0x00	; 0
    276a:	70 e8       	ldi	r23, 0x80	; 128
    276c:	cb 01       	movw	r24, r22
    276e:	01 97       	sbiw	r24, 0x01	; 1
    2770:	8d 83       	std	Y+5, r24	; 0x05
    2772:	9e 83       	std	Y+6, r25	; 0x06
    2774:	a9 01       	movw	r20, r18
    2776:	bf 01       	movw	r22, r30
    2778:	ce 01       	movw	r24, r28
    277a:	01 96       	adiw	r24, 0x01	; 1
    277c:	0e 94 a5 14 	call	0x294a	; 0x294a <vfprintf>
    2780:	4d 81       	ldd	r20, Y+5	; 0x05
    2782:	5e 81       	ldd	r21, Y+6	; 0x06
    2784:	57 fd       	sbrc	r21, 7
    2786:	0a c0       	rjmp	.+20     	; 0x279c <vsnprintf_P+0x50>
    2788:	2f 81       	ldd	r18, Y+7	; 0x07
    278a:	38 85       	ldd	r19, Y+8	; 0x08
    278c:	42 17       	cp	r20, r18
    278e:	53 07       	cpc	r21, r19
    2790:	0c f4       	brge	.+2      	; 0x2794 <vsnprintf_P+0x48>
    2792:	9a 01       	movw	r18, r20
    2794:	f8 01       	movw	r30, r16
    2796:	e2 0f       	add	r30, r18
    2798:	f3 1f       	adc	r31, r19
    279a:	10 82       	st	Z, r1
    279c:	2e 96       	adiw	r28, 0x0e	; 14
    279e:	e4 e0       	ldi	r30, 0x04	; 4
    27a0:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__epilogue_restores__+0x1c>

000027a4 <__cmpsf2>:
    27a4:	0e 94 14 14 	call	0x2828	; 0x2828 <__fp_cmp>
    27a8:	08 f4       	brcc	.+2      	; 0x27ac <__cmpsf2+0x8>
    27aa:	81 e0       	ldi	r24, 0x01	; 1
    27ac:	08 95       	ret

000027ae <__floatunsisf>:
    27ae:	e8 94       	clt
    27b0:	09 c0       	rjmp	.+18     	; 0x27c4 <__floatsisf+0x12>

000027b2 <__floatsisf>:
    27b2:	97 fb       	bst	r25, 7
    27b4:	3e f4       	brtc	.+14     	; 0x27c4 <__floatsisf+0x12>
    27b6:	90 95       	com	r25
    27b8:	80 95       	com	r24
    27ba:	70 95       	com	r23
    27bc:	61 95       	neg	r22
    27be:	7f 4f       	sbci	r23, 0xFF	; 255
    27c0:	8f 4f       	sbci	r24, 0xFF	; 255
    27c2:	9f 4f       	sbci	r25, 0xFF	; 255
    27c4:	99 23       	and	r25, r25
    27c6:	a9 f0       	breq	.+42     	; 0x27f2 <__floatsisf+0x40>
    27c8:	f9 2f       	mov	r31, r25
    27ca:	96 e9       	ldi	r25, 0x96	; 150
    27cc:	bb 27       	eor	r27, r27
    27ce:	93 95       	inc	r25
    27d0:	f6 95       	lsr	r31
    27d2:	87 95       	ror	r24
    27d4:	77 95       	ror	r23
    27d6:	67 95       	ror	r22
    27d8:	b7 95       	ror	r27
    27da:	f1 11       	cpse	r31, r1
    27dc:	f8 cf       	rjmp	.-16     	; 0x27ce <__floatsisf+0x1c>
    27de:	fa f4       	brpl	.+62     	; 0x281e <__floatsisf+0x6c>
    27e0:	bb 0f       	add	r27, r27
    27e2:	11 f4       	brne	.+4      	; 0x27e8 <__floatsisf+0x36>
    27e4:	60 ff       	sbrs	r22, 0
    27e6:	1b c0       	rjmp	.+54     	; 0x281e <__floatsisf+0x6c>
    27e8:	6f 5f       	subi	r22, 0xFF	; 255
    27ea:	7f 4f       	sbci	r23, 0xFF	; 255
    27ec:	8f 4f       	sbci	r24, 0xFF	; 255
    27ee:	9f 4f       	sbci	r25, 0xFF	; 255
    27f0:	16 c0       	rjmp	.+44     	; 0x281e <__floatsisf+0x6c>
    27f2:	88 23       	and	r24, r24
    27f4:	11 f0       	breq	.+4      	; 0x27fa <__floatsisf+0x48>
    27f6:	96 e9       	ldi	r25, 0x96	; 150
    27f8:	11 c0       	rjmp	.+34     	; 0x281c <__floatsisf+0x6a>
    27fa:	77 23       	and	r23, r23
    27fc:	21 f0       	breq	.+8      	; 0x2806 <__floatsisf+0x54>
    27fe:	9e e8       	ldi	r25, 0x8E	; 142
    2800:	87 2f       	mov	r24, r23
    2802:	76 2f       	mov	r23, r22
    2804:	05 c0       	rjmp	.+10     	; 0x2810 <__floatsisf+0x5e>
    2806:	66 23       	and	r22, r22
    2808:	71 f0       	breq	.+28     	; 0x2826 <__floatsisf+0x74>
    280a:	96 e8       	ldi	r25, 0x86	; 134
    280c:	86 2f       	mov	r24, r22
    280e:	70 e0       	ldi	r23, 0x00	; 0
    2810:	60 e0       	ldi	r22, 0x00	; 0
    2812:	2a f0       	brmi	.+10     	; 0x281e <__floatsisf+0x6c>
    2814:	9a 95       	dec	r25
    2816:	66 0f       	add	r22, r22
    2818:	77 1f       	adc	r23, r23
    281a:	88 1f       	adc	r24, r24
    281c:	da f7       	brpl	.-10     	; 0x2814 <__floatsisf+0x62>
    281e:	88 0f       	add	r24, r24
    2820:	96 95       	lsr	r25
    2822:	87 95       	ror	r24
    2824:	97 f9       	bld	r25, 7
    2826:	08 95       	ret

00002828 <__fp_cmp>:
    2828:	99 0f       	add	r25, r25
    282a:	00 08       	sbc	r0, r0
    282c:	55 0f       	add	r21, r21
    282e:	aa 0b       	sbc	r26, r26
    2830:	e0 e8       	ldi	r30, 0x80	; 128
    2832:	fe ef       	ldi	r31, 0xFE	; 254
    2834:	16 16       	cp	r1, r22
    2836:	17 06       	cpc	r1, r23
    2838:	e8 07       	cpc	r30, r24
    283a:	f9 07       	cpc	r31, r25
    283c:	c0 f0       	brcs	.+48     	; 0x286e <__fp_cmp+0x46>
    283e:	12 16       	cp	r1, r18
    2840:	13 06       	cpc	r1, r19
    2842:	e4 07       	cpc	r30, r20
    2844:	f5 07       	cpc	r31, r21
    2846:	98 f0       	brcs	.+38     	; 0x286e <__fp_cmp+0x46>
    2848:	62 1b       	sub	r22, r18
    284a:	73 0b       	sbc	r23, r19
    284c:	84 0b       	sbc	r24, r20
    284e:	95 0b       	sbc	r25, r21
    2850:	39 f4       	brne	.+14     	; 0x2860 <__fp_cmp+0x38>
    2852:	0a 26       	eor	r0, r26
    2854:	61 f0       	breq	.+24     	; 0x286e <__fp_cmp+0x46>
    2856:	23 2b       	or	r18, r19
    2858:	24 2b       	or	r18, r20
    285a:	25 2b       	or	r18, r21
    285c:	21 f4       	brne	.+8      	; 0x2866 <__fp_cmp+0x3e>
    285e:	08 95       	ret
    2860:	0a 26       	eor	r0, r26
    2862:	09 f4       	brne	.+2      	; 0x2866 <__fp_cmp+0x3e>
    2864:	a1 40       	sbci	r26, 0x01	; 1
    2866:	a6 95       	lsr	r26
    2868:	8f ef       	ldi	r24, 0xFF	; 255
    286a:	81 1d       	adc	r24, r1
    286c:	81 1d       	adc	r24, r1
    286e:	08 95       	ret

00002870 <__mulsf3>:
    2870:	0e 94 4b 14 	call	0x2896	; 0x2896 <__mulsf3x>
    2874:	0c 94 50 17 	jmp	0x2ea0	; 0x2ea0 <__fp_round>
    2878:	0e 94 42 17 	call	0x2e84	; 0x2e84 <__fp_pscA>
    287c:	38 f0       	brcs	.+14     	; 0x288c <__mulsf3+0x1c>
    287e:	0e 94 49 17 	call	0x2e92	; 0x2e92 <__fp_pscB>
    2882:	20 f0       	brcs	.+8      	; 0x288c <__mulsf3+0x1c>
    2884:	95 23       	and	r25, r21
    2886:	11 f0       	breq	.+4      	; 0x288c <__mulsf3+0x1c>
    2888:	0c 94 39 17 	jmp	0x2e72	; 0x2e72 <__fp_inf>
    288c:	0c 94 3f 17 	jmp	0x2e7e	; 0x2e7e <__fp_nan>
    2890:	11 24       	eor	r1, r1
    2892:	0c 94 84 17 	jmp	0x2f08	; 0x2f08 <__fp_szero>

00002896 <__mulsf3x>:
    2896:	0e 94 61 17 	call	0x2ec2	; 0x2ec2 <__fp_split3>
    289a:	70 f3       	brcs	.-36     	; 0x2878 <__mulsf3+0x8>

0000289c <__mulsf3_pse>:
    289c:	95 9f       	mul	r25, r21
    289e:	c1 f3       	breq	.-16     	; 0x2890 <__mulsf3+0x20>
    28a0:	95 0f       	add	r25, r21
    28a2:	50 e0       	ldi	r21, 0x00	; 0
    28a4:	55 1f       	adc	r21, r21
    28a6:	62 9f       	mul	r22, r18
    28a8:	f0 01       	movw	r30, r0
    28aa:	72 9f       	mul	r23, r18
    28ac:	bb 27       	eor	r27, r27
    28ae:	f0 0d       	add	r31, r0
    28b0:	b1 1d       	adc	r27, r1
    28b2:	63 9f       	mul	r22, r19
    28b4:	aa 27       	eor	r26, r26
    28b6:	f0 0d       	add	r31, r0
    28b8:	b1 1d       	adc	r27, r1
    28ba:	aa 1f       	adc	r26, r26
    28bc:	64 9f       	mul	r22, r20
    28be:	66 27       	eor	r22, r22
    28c0:	b0 0d       	add	r27, r0
    28c2:	a1 1d       	adc	r26, r1
    28c4:	66 1f       	adc	r22, r22
    28c6:	82 9f       	mul	r24, r18
    28c8:	22 27       	eor	r18, r18
    28ca:	b0 0d       	add	r27, r0
    28cc:	a1 1d       	adc	r26, r1
    28ce:	62 1f       	adc	r22, r18
    28d0:	73 9f       	mul	r23, r19
    28d2:	b0 0d       	add	r27, r0
    28d4:	a1 1d       	adc	r26, r1
    28d6:	62 1f       	adc	r22, r18
    28d8:	83 9f       	mul	r24, r19
    28da:	a0 0d       	add	r26, r0
    28dc:	61 1d       	adc	r22, r1
    28de:	22 1f       	adc	r18, r18
    28e0:	74 9f       	mul	r23, r20
    28e2:	33 27       	eor	r19, r19
    28e4:	a0 0d       	add	r26, r0
    28e6:	61 1d       	adc	r22, r1
    28e8:	23 1f       	adc	r18, r19
    28ea:	84 9f       	mul	r24, r20
    28ec:	60 0d       	add	r22, r0
    28ee:	21 1d       	adc	r18, r1
    28f0:	82 2f       	mov	r24, r18
    28f2:	76 2f       	mov	r23, r22
    28f4:	6a 2f       	mov	r22, r26
    28f6:	11 24       	eor	r1, r1
    28f8:	9f 57       	subi	r25, 0x7F	; 127
    28fa:	50 40       	sbci	r21, 0x00	; 0
    28fc:	9a f0       	brmi	.+38     	; 0x2924 <__mulsf3_pse+0x88>
    28fe:	f1 f0       	breq	.+60     	; 0x293c <__mulsf3_pse+0xa0>
    2900:	88 23       	and	r24, r24
    2902:	4a f0       	brmi	.+18     	; 0x2916 <__mulsf3_pse+0x7a>
    2904:	ee 0f       	add	r30, r30
    2906:	ff 1f       	adc	r31, r31
    2908:	bb 1f       	adc	r27, r27
    290a:	66 1f       	adc	r22, r22
    290c:	77 1f       	adc	r23, r23
    290e:	88 1f       	adc	r24, r24
    2910:	91 50       	subi	r25, 0x01	; 1
    2912:	50 40       	sbci	r21, 0x00	; 0
    2914:	a9 f7       	brne	.-22     	; 0x2900 <__mulsf3_pse+0x64>
    2916:	9e 3f       	cpi	r25, 0xFE	; 254
    2918:	51 05       	cpc	r21, r1
    291a:	80 f0       	brcs	.+32     	; 0x293c <__mulsf3_pse+0xa0>
    291c:	0c 94 39 17 	jmp	0x2e72	; 0x2e72 <__fp_inf>
    2920:	0c 94 84 17 	jmp	0x2f08	; 0x2f08 <__fp_szero>
    2924:	5f 3f       	cpi	r21, 0xFF	; 255
    2926:	e4 f3       	brlt	.-8      	; 0x2920 <__mulsf3_pse+0x84>
    2928:	98 3e       	cpi	r25, 0xE8	; 232
    292a:	d4 f3       	brlt	.-12     	; 0x2920 <__mulsf3_pse+0x84>
    292c:	86 95       	lsr	r24
    292e:	77 95       	ror	r23
    2930:	67 95       	ror	r22
    2932:	b7 95       	ror	r27
    2934:	f7 95       	ror	r31
    2936:	e7 95       	ror	r30
    2938:	9f 5f       	subi	r25, 0xFF	; 255
    293a:	c1 f7       	brne	.-16     	; 0x292c <__mulsf3_pse+0x90>
    293c:	fe 2b       	or	r31, r30
    293e:	88 0f       	add	r24, r24
    2940:	91 1d       	adc	r25, r1
    2942:	96 95       	lsr	r25
    2944:	87 95       	ror	r24
    2946:	97 f9       	bld	r25, 7
    2948:	08 95       	ret

0000294a <vfprintf>:
    294a:	ab e0       	ldi	r26, 0x0B	; 11
    294c:	b0 e0       	ldi	r27, 0x00	; 0
    294e:	eb ea       	ldi	r30, 0xAB	; 171
    2950:	f4 e1       	ldi	r31, 0x14	; 20
    2952:	0c 94 a5 17 	jmp	0x2f4a	; 0x2f4a <__prologue_saves__>
    2956:	6c 01       	movw	r12, r24
    2958:	7b 01       	movw	r14, r22
    295a:	8a 01       	movw	r16, r20
    295c:	fc 01       	movw	r30, r24
    295e:	16 82       	std	Z+6, r1	; 0x06
    2960:	17 82       	std	Z+7, r1	; 0x07
    2962:	83 81       	ldd	r24, Z+3	; 0x03
    2964:	81 ff       	sbrs	r24, 1
    2966:	cc c1       	rjmp	.+920    	; 0x2d00 <vfprintf+0x3b6>
    2968:	ce 01       	movw	r24, r28
    296a:	01 96       	adiw	r24, 0x01	; 1
    296c:	3c 01       	movw	r6, r24
    296e:	f6 01       	movw	r30, r12
    2970:	93 81       	ldd	r25, Z+3	; 0x03
    2972:	f7 01       	movw	r30, r14
    2974:	93 fd       	sbrc	r25, 3
    2976:	85 91       	lpm	r24, Z+
    2978:	93 ff       	sbrs	r25, 3
    297a:	81 91       	ld	r24, Z+
    297c:	7f 01       	movw	r14, r30
    297e:	88 23       	and	r24, r24
    2980:	09 f4       	brne	.+2      	; 0x2984 <vfprintf+0x3a>
    2982:	ba c1       	rjmp	.+884    	; 0x2cf8 <vfprintf+0x3ae>
    2984:	85 32       	cpi	r24, 0x25	; 37
    2986:	39 f4       	brne	.+14     	; 0x2996 <vfprintf+0x4c>
    2988:	93 fd       	sbrc	r25, 3
    298a:	85 91       	lpm	r24, Z+
    298c:	93 ff       	sbrs	r25, 3
    298e:	81 91       	ld	r24, Z+
    2990:	7f 01       	movw	r14, r30
    2992:	85 32       	cpi	r24, 0x25	; 37
    2994:	29 f4       	brne	.+10     	; 0x29a0 <vfprintf+0x56>
    2996:	b6 01       	movw	r22, r12
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    299e:	e7 cf       	rjmp	.-50     	; 0x296e <vfprintf+0x24>
    29a0:	91 2c       	mov	r9, r1
    29a2:	21 2c       	mov	r2, r1
    29a4:	31 2c       	mov	r3, r1
    29a6:	ff e1       	ldi	r31, 0x1F	; 31
    29a8:	f3 15       	cp	r31, r3
    29aa:	d8 f0       	brcs	.+54     	; 0x29e2 <vfprintf+0x98>
    29ac:	8b 32       	cpi	r24, 0x2B	; 43
    29ae:	79 f0       	breq	.+30     	; 0x29ce <vfprintf+0x84>
    29b0:	38 f4       	brcc	.+14     	; 0x29c0 <vfprintf+0x76>
    29b2:	80 32       	cpi	r24, 0x20	; 32
    29b4:	79 f0       	breq	.+30     	; 0x29d4 <vfprintf+0x8a>
    29b6:	83 32       	cpi	r24, 0x23	; 35
    29b8:	a1 f4       	brne	.+40     	; 0x29e2 <vfprintf+0x98>
    29ba:	23 2d       	mov	r18, r3
    29bc:	20 61       	ori	r18, 0x10	; 16
    29be:	1d c0       	rjmp	.+58     	; 0x29fa <vfprintf+0xb0>
    29c0:	8d 32       	cpi	r24, 0x2D	; 45
    29c2:	61 f0       	breq	.+24     	; 0x29dc <vfprintf+0x92>
    29c4:	80 33       	cpi	r24, 0x30	; 48
    29c6:	69 f4       	brne	.+26     	; 0x29e2 <vfprintf+0x98>
    29c8:	23 2d       	mov	r18, r3
    29ca:	21 60       	ori	r18, 0x01	; 1
    29cc:	16 c0       	rjmp	.+44     	; 0x29fa <vfprintf+0xb0>
    29ce:	83 2d       	mov	r24, r3
    29d0:	82 60       	ori	r24, 0x02	; 2
    29d2:	38 2e       	mov	r3, r24
    29d4:	e3 2d       	mov	r30, r3
    29d6:	e4 60       	ori	r30, 0x04	; 4
    29d8:	3e 2e       	mov	r3, r30
    29da:	2a c0       	rjmp	.+84     	; 0x2a30 <vfprintf+0xe6>
    29dc:	f3 2d       	mov	r31, r3
    29de:	f8 60       	ori	r31, 0x08	; 8
    29e0:	1d c0       	rjmp	.+58     	; 0x2a1c <vfprintf+0xd2>
    29e2:	37 fc       	sbrc	r3, 7
    29e4:	2d c0       	rjmp	.+90     	; 0x2a40 <vfprintf+0xf6>
    29e6:	20 ed       	ldi	r18, 0xD0	; 208
    29e8:	28 0f       	add	r18, r24
    29ea:	2a 30       	cpi	r18, 0x0A	; 10
    29ec:	40 f0       	brcs	.+16     	; 0x29fe <vfprintf+0xb4>
    29ee:	8e 32       	cpi	r24, 0x2E	; 46
    29f0:	b9 f4       	brne	.+46     	; 0x2a20 <vfprintf+0xd6>
    29f2:	36 fc       	sbrc	r3, 6
    29f4:	81 c1       	rjmp	.+770    	; 0x2cf8 <vfprintf+0x3ae>
    29f6:	23 2d       	mov	r18, r3
    29f8:	20 64       	ori	r18, 0x40	; 64
    29fa:	32 2e       	mov	r3, r18
    29fc:	19 c0       	rjmp	.+50     	; 0x2a30 <vfprintf+0xe6>
    29fe:	36 fe       	sbrs	r3, 6
    2a00:	06 c0       	rjmp	.+12     	; 0x2a0e <vfprintf+0xc4>
    2a02:	8a e0       	ldi	r24, 0x0A	; 10
    2a04:	98 9e       	mul	r9, r24
    2a06:	20 0d       	add	r18, r0
    2a08:	11 24       	eor	r1, r1
    2a0a:	92 2e       	mov	r9, r18
    2a0c:	11 c0       	rjmp	.+34     	; 0x2a30 <vfprintf+0xe6>
    2a0e:	ea e0       	ldi	r30, 0x0A	; 10
    2a10:	2e 9e       	mul	r2, r30
    2a12:	20 0d       	add	r18, r0
    2a14:	11 24       	eor	r1, r1
    2a16:	22 2e       	mov	r2, r18
    2a18:	f3 2d       	mov	r31, r3
    2a1a:	f0 62       	ori	r31, 0x20	; 32
    2a1c:	3f 2e       	mov	r3, r31
    2a1e:	08 c0       	rjmp	.+16     	; 0x2a30 <vfprintf+0xe6>
    2a20:	8c 36       	cpi	r24, 0x6C	; 108
    2a22:	21 f4       	brne	.+8      	; 0x2a2c <vfprintf+0xe2>
    2a24:	83 2d       	mov	r24, r3
    2a26:	80 68       	ori	r24, 0x80	; 128
    2a28:	38 2e       	mov	r3, r24
    2a2a:	02 c0       	rjmp	.+4      	; 0x2a30 <vfprintf+0xe6>
    2a2c:	88 36       	cpi	r24, 0x68	; 104
    2a2e:	41 f4       	brne	.+16     	; 0x2a40 <vfprintf+0xf6>
    2a30:	f7 01       	movw	r30, r14
    2a32:	93 fd       	sbrc	r25, 3
    2a34:	85 91       	lpm	r24, Z+
    2a36:	93 ff       	sbrs	r25, 3
    2a38:	81 91       	ld	r24, Z+
    2a3a:	7f 01       	movw	r14, r30
    2a3c:	81 11       	cpse	r24, r1
    2a3e:	b3 cf       	rjmp	.-154    	; 0x29a6 <vfprintf+0x5c>
    2a40:	98 2f       	mov	r25, r24
    2a42:	9f 7d       	andi	r25, 0xDF	; 223
    2a44:	95 54       	subi	r25, 0x45	; 69
    2a46:	93 30       	cpi	r25, 0x03	; 3
    2a48:	28 f4       	brcc	.+10     	; 0x2a54 <vfprintf+0x10a>
    2a4a:	0c 5f       	subi	r16, 0xFC	; 252
    2a4c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a4e:	9f e3       	ldi	r25, 0x3F	; 63
    2a50:	99 83       	std	Y+1, r25	; 0x01
    2a52:	0d c0       	rjmp	.+26     	; 0x2a6e <vfprintf+0x124>
    2a54:	83 36       	cpi	r24, 0x63	; 99
    2a56:	31 f0       	breq	.+12     	; 0x2a64 <vfprintf+0x11a>
    2a58:	83 37       	cpi	r24, 0x73	; 115
    2a5a:	71 f0       	breq	.+28     	; 0x2a78 <vfprintf+0x12e>
    2a5c:	83 35       	cpi	r24, 0x53	; 83
    2a5e:	09 f0       	breq	.+2      	; 0x2a62 <vfprintf+0x118>
    2a60:	59 c0       	rjmp	.+178    	; 0x2b14 <vfprintf+0x1ca>
    2a62:	21 c0       	rjmp	.+66     	; 0x2aa6 <vfprintf+0x15c>
    2a64:	f8 01       	movw	r30, r16
    2a66:	80 81       	ld	r24, Z
    2a68:	89 83       	std	Y+1, r24	; 0x01
    2a6a:	0e 5f       	subi	r16, 0xFE	; 254
    2a6c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a6e:	88 24       	eor	r8, r8
    2a70:	83 94       	inc	r8
    2a72:	91 2c       	mov	r9, r1
    2a74:	53 01       	movw	r10, r6
    2a76:	13 c0       	rjmp	.+38     	; 0x2a9e <vfprintf+0x154>
    2a78:	28 01       	movw	r4, r16
    2a7a:	f2 e0       	ldi	r31, 0x02	; 2
    2a7c:	4f 0e       	add	r4, r31
    2a7e:	51 1c       	adc	r5, r1
    2a80:	f8 01       	movw	r30, r16
    2a82:	a0 80       	ld	r10, Z
    2a84:	b1 80       	ldd	r11, Z+1	; 0x01
    2a86:	36 fe       	sbrs	r3, 6
    2a88:	03 c0       	rjmp	.+6      	; 0x2a90 <vfprintf+0x146>
    2a8a:	69 2d       	mov	r22, r9
    2a8c:	70 e0       	ldi	r23, 0x00	; 0
    2a8e:	02 c0       	rjmp	.+4      	; 0x2a94 <vfprintf+0x14a>
    2a90:	6f ef       	ldi	r22, 0xFF	; 255
    2a92:	7f ef       	ldi	r23, 0xFF	; 255
    2a94:	c5 01       	movw	r24, r10
    2a96:	0e 94 94 16 	call	0x2d28	; 0x2d28 <strnlen>
    2a9a:	4c 01       	movw	r8, r24
    2a9c:	82 01       	movw	r16, r4
    2a9e:	f3 2d       	mov	r31, r3
    2aa0:	ff 77       	andi	r31, 0x7F	; 127
    2aa2:	3f 2e       	mov	r3, r31
    2aa4:	16 c0       	rjmp	.+44     	; 0x2ad2 <vfprintf+0x188>
    2aa6:	28 01       	movw	r4, r16
    2aa8:	22 e0       	ldi	r18, 0x02	; 2
    2aaa:	42 0e       	add	r4, r18
    2aac:	51 1c       	adc	r5, r1
    2aae:	f8 01       	movw	r30, r16
    2ab0:	a0 80       	ld	r10, Z
    2ab2:	b1 80       	ldd	r11, Z+1	; 0x01
    2ab4:	36 fe       	sbrs	r3, 6
    2ab6:	03 c0       	rjmp	.+6      	; 0x2abe <vfprintf+0x174>
    2ab8:	69 2d       	mov	r22, r9
    2aba:	70 e0       	ldi	r23, 0x00	; 0
    2abc:	02 c0       	rjmp	.+4      	; 0x2ac2 <vfprintf+0x178>
    2abe:	6f ef       	ldi	r22, 0xFF	; 255
    2ac0:	7f ef       	ldi	r23, 0xFF	; 255
    2ac2:	c5 01       	movw	r24, r10
    2ac4:	0e 94 89 16 	call	0x2d12	; 0x2d12 <strnlen_P>
    2ac8:	4c 01       	movw	r8, r24
    2aca:	f3 2d       	mov	r31, r3
    2acc:	f0 68       	ori	r31, 0x80	; 128
    2ace:	3f 2e       	mov	r3, r31
    2ad0:	82 01       	movw	r16, r4
    2ad2:	33 fc       	sbrc	r3, 3
    2ad4:	1b c0       	rjmp	.+54     	; 0x2b0c <vfprintf+0x1c2>
    2ad6:	82 2d       	mov	r24, r2
    2ad8:	90 e0       	ldi	r25, 0x00	; 0
    2ada:	88 16       	cp	r8, r24
    2adc:	99 06       	cpc	r9, r25
    2ade:	b0 f4       	brcc	.+44     	; 0x2b0c <vfprintf+0x1c2>
    2ae0:	b6 01       	movw	r22, r12
    2ae2:	80 e2       	ldi	r24, 0x20	; 32
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2aea:	2a 94       	dec	r2
    2aec:	f4 cf       	rjmp	.-24     	; 0x2ad6 <vfprintf+0x18c>
    2aee:	f5 01       	movw	r30, r10
    2af0:	37 fc       	sbrc	r3, 7
    2af2:	85 91       	lpm	r24, Z+
    2af4:	37 fe       	sbrs	r3, 7
    2af6:	81 91       	ld	r24, Z+
    2af8:	5f 01       	movw	r10, r30
    2afa:	b6 01       	movw	r22, r12
    2afc:	90 e0       	ldi	r25, 0x00	; 0
    2afe:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2b02:	21 10       	cpse	r2, r1
    2b04:	2a 94       	dec	r2
    2b06:	21 e0       	ldi	r18, 0x01	; 1
    2b08:	82 1a       	sub	r8, r18
    2b0a:	91 08       	sbc	r9, r1
    2b0c:	81 14       	cp	r8, r1
    2b0e:	91 04       	cpc	r9, r1
    2b10:	71 f7       	brne	.-36     	; 0x2aee <vfprintf+0x1a4>
    2b12:	e8 c0       	rjmp	.+464    	; 0x2ce4 <vfprintf+0x39a>
    2b14:	84 36       	cpi	r24, 0x64	; 100
    2b16:	11 f0       	breq	.+4      	; 0x2b1c <vfprintf+0x1d2>
    2b18:	89 36       	cpi	r24, 0x69	; 105
    2b1a:	41 f5       	brne	.+80     	; 0x2b6c <vfprintf+0x222>
    2b1c:	f8 01       	movw	r30, r16
    2b1e:	37 fe       	sbrs	r3, 7
    2b20:	07 c0       	rjmp	.+14     	; 0x2b30 <vfprintf+0x1e6>
    2b22:	60 81       	ld	r22, Z
    2b24:	71 81       	ldd	r23, Z+1	; 0x01
    2b26:	82 81       	ldd	r24, Z+2	; 0x02
    2b28:	93 81       	ldd	r25, Z+3	; 0x03
    2b2a:	0c 5f       	subi	r16, 0xFC	; 252
    2b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2e:	08 c0       	rjmp	.+16     	; 0x2b40 <vfprintf+0x1f6>
    2b30:	60 81       	ld	r22, Z
    2b32:	71 81       	ldd	r23, Z+1	; 0x01
    2b34:	07 2e       	mov	r0, r23
    2b36:	00 0c       	add	r0, r0
    2b38:	88 0b       	sbc	r24, r24
    2b3a:	99 0b       	sbc	r25, r25
    2b3c:	0e 5f       	subi	r16, 0xFE	; 254
    2b3e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b40:	f3 2d       	mov	r31, r3
    2b42:	ff 76       	andi	r31, 0x6F	; 111
    2b44:	3f 2e       	mov	r3, r31
    2b46:	97 ff       	sbrs	r25, 7
    2b48:	09 c0       	rjmp	.+18     	; 0x2b5c <vfprintf+0x212>
    2b4a:	90 95       	com	r25
    2b4c:	80 95       	com	r24
    2b4e:	70 95       	com	r23
    2b50:	61 95       	neg	r22
    2b52:	7f 4f       	sbci	r23, 0xFF	; 255
    2b54:	8f 4f       	sbci	r24, 0xFF	; 255
    2b56:	9f 4f       	sbci	r25, 0xFF	; 255
    2b58:	f0 68       	ori	r31, 0x80	; 128
    2b5a:	3f 2e       	mov	r3, r31
    2b5c:	2a e0       	ldi	r18, 0x0A	; 10
    2b5e:	30 e0       	ldi	r19, 0x00	; 0
    2b60:	a3 01       	movw	r20, r6
    2b62:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__ultoa_invert>
    2b66:	88 2e       	mov	r8, r24
    2b68:	86 18       	sub	r8, r6
    2b6a:	45 c0       	rjmp	.+138    	; 0x2bf6 <vfprintf+0x2ac>
    2b6c:	85 37       	cpi	r24, 0x75	; 117
    2b6e:	31 f4       	brne	.+12     	; 0x2b7c <vfprintf+0x232>
    2b70:	23 2d       	mov	r18, r3
    2b72:	2f 7e       	andi	r18, 0xEF	; 239
    2b74:	b2 2e       	mov	r11, r18
    2b76:	2a e0       	ldi	r18, 0x0A	; 10
    2b78:	30 e0       	ldi	r19, 0x00	; 0
    2b7a:	25 c0       	rjmp	.+74     	; 0x2bc6 <vfprintf+0x27c>
    2b7c:	93 2d       	mov	r25, r3
    2b7e:	99 7f       	andi	r25, 0xF9	; 249
    2b80:	b9 2e       	mov	r11, r25
    2b82:	8f 36       	cpi	r24, 0x6F	; 111
    2b84:	c1 f0       	breq	.+48     	; 0x2bb6 <vfprintf+0x26c>
    2b86:	18 f4       	brcc	.+6      	; 0x2b8e <vfprintf+0x244>
    2b88:	88 35       	cpi	r24, 0x58	; 88
    2b8a:	79 f0       	breq	.+30     	; 0x2baa <vfprintf+0x260>
    2b8c:	b5 c0       	rjmp	.+362    	; 0x2cf8 <vfprintf+0x3ae>
    2b8e:	80 37       	cpi	r24, 0x70	; 112
    2b90:	19 f0       	breq	.+6      	; 0x2b98 <vfprintf+0x24e>
    2b92:	88 37       	cpi	r24, 0x78	; 120
    2b94:	21 f0       	breq	.+8      	; 0x2b9e <vfprintf+0x254>
    2b96:	b0 c0       	rjmp	.+352    	; 0x2cf8 <vfprintf+0x3ae>
    2b98:	e9 2f       	mov	r30, r25
    2b9a:	e0 61       	ori	r30, 0x10	; 16
    2b9c:	be 2e       	mov	r11, r30
    2b9e:	b4 fe       	sbrs	r11, 4
    2ba0:	0d c0       	rjmp	.+26     	; 0x2bbc <vfprintf+0x272>
    2ba2:	fb 2d       	mov	r31, r11
    2ba4:	f4 60       	ori	r31, 0x04	; 4
    2ba6:	bf 2e       	mov	r11, r31
    2ba8:	09 c0       	rjmp	.+18     	; 0x2bbc <vfprintf+0x272>
    2baa:	34 fe       	sbrs	r3, 4
    2bac:	0a c0       	rjmp	.+20     	; 0x2bc2 <vfprintf+0x278>
    2bae:	29 2f       	mov	r18, r25
    2bb0:	26 60       	ori	r18, 0x06	; 6
    2bb2:	b2 2e       	mov	r11, r18
    2bb4:	06 c0       	rjmp	.+12     	; 0x2bc2 <vfprintf+0x278>
    2bb6:	28 e0       	ldi	r18, 0x08	; 8
    2bb8:	30 e0       	ldi	r19, 0x00	; 0
    2bba:	05 c0       	rjmp	.+10     	; 0x2bc6 <vfprintf+0x27c>
    2bbc:	20 e1       	ldi	r18, 0x10	; 16
    2bbe:	30 e0       	ldi	r19, 0x00	; 0
    2bc0:	02 c0       	rjmp	.+4      	; 0x2bc6 <vfprintf+0x27c>
    2bc2:	20 e1       	ldi	r18, 0x10	; 16
    2bc4:	32 e0       	ldi	r19, 0x02	; 2
    2bc6:	f8 01       	movw	r30, r16
    2bc8:	b7 fe       	sbrs	r11, 7
    2bca:	07 c0       	rjmp	.+14     	; 0x2bda <vfprintf+0x290>
    2bcc:	60 81       	ld	r22, Z
    2bce:	71 81       	ldd	r23, Z+1	; 0x01
    2bd0:	82 81       	ldd	r24, Z+2	; 0x02
    2bd2:	93 81       	ldd	r25, Z+3	; 0x03
    2bd4:	0c 5f       	subi	r16, 0xFC	; 252
    2bd6:	1f 4f       	sbci	r17, 0xFF	; 255
    2bd8:	06 c0       	rjmp	.+12     	; 0x2be6 <vfprintf+0x29c>
    2bda:	60 81       	ld	r22, Z
    2bdc:	71 81       	ldd	r23, Z+1	; 0x01
    2bde:	80 e0       	ldi	r24, 0x00	; 0
    2be0:	90 e0       	ldi	r25, 0x00	; 0
    2be2:	0e 5f       	subi	r16, 0xFE	; 254
    2be4:	1f 4f       	sbci	r17, 0xFF	; 255
    2be6:	a3 01       	movw	r20, r6
    2be8:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__ultoa_invert>
    2bec:	88 2e       	mov	r8, r24
    2bee:	86 18       	sub	r8, r6
    2bf0:	fb 2d       	mov	r31, r11
    2bf2:	ff 77       	andi	r31, 0x7F	; 127
    2bf4:	3f 2e       	mov	r3, r31
    2bf6:	36 fe       	sbrs	r3, 6
    2bf8:	0d c0       	rjmp	.+26     	; 0x2c14 <vfprintf+0x2ca>
    2bfa:	23 2d       	mov	r18, r3
    2bfc:	2e 7f       	andi	r18, 0xFE	; 254
    2bfe:	a2 2e       	mov	r10, r18
    2c00:	89 14       	cp	r8, r9
    2c02:	58 f4       	brcc	.+22     	; 0x2c1a <vfprintf+0x2d0>
    2c04:	34 fe       	sbrs	r3, 4
    2c06:	0b c0       	rjmp	.+22     	; 0x2c1e <vfprintf+0x2d4>
    2c08:	32 fc       	sbrc	r3, 2
    2c0a:	09 c0       	rjmp	.+18     	; 0x2c1e <vfprintf+0x2d4>
    2c0c:	83 2d       	mov	r24, r3
    2c0e:	8e 7e       	andi	r24, 0xEE	; 238
    2c10:	a8 2e       	mov	r10, r24
    2c12:	05 c0       	rjmp	.+10     	; 0x2c1e <vfprintf+0x2d4>
    2c14:	b8 2c       	mov	r11, r8
    2c16:	a3 2c       	mov	r10, r3
    2c18:	03 c0       	rjmp	.+6      	; 0x2c20 <vfprintf+0x2d6>
    2c1a:	b8 2c       	mov	r11, r8
    2c1c:	01 c0       	rjmp	.+2      	; 0x2c20 <vfprintf+0x2d6>
    2c1e:	b9 2c       	mov	r11, r9
    2c20:	a4 fe       	sbrs	r10, 4
    2c22:	0f c0       	rjmp	.+30     	; 0x2c42 <vfprintf+0x2f8>
    2c24:	fe 01       	movw	r30, r28
    2c26:	e8 0d       	add	r30, r8
    2c28:	f1 1d       	adc	r31, r1
    2c2a:	80 81       	ld	r24, Z
    2c2c:	80 33       	cpi	r24, 0x30	; 48
    2c2e:	21 f4       	brne	.+8      	; 0x2c38 <vfprintf+0x2ee>
    2c30:	9a 2d       	mov	r25, r10
    2c32:	99 7e       	andi	r25, 0xE9	; 233
    2c34:	a9 2e       	mov	r10, r25
    2c36:	09 c0       	rjmp	.+18     	; 0x2c4a <vfprintf+0x300>
    2c38:	a2 fe       	sbrs	r10, 2
    2c3a:	06 c0       	rjmp	.+12     	; 0x2c48 <vfprintf+0x2fe>
    2c3c:	b3 94       	inc	r11
    2c3e:	b3 94       	inc	r11
    2c40:	04 c0       	rjmp	.+8      	; 0x2c4a <vfprintf+0x300>
    2c42:	8a 2d       	mov	r24, r10
    2c44:	86 78       	andi	r24, 0x86	; 134
    2c46:	09 f0       	breq	.+2      	; 0x2c4a <vfprintf+0x300>
    2c48:	b3 94       	inc	r11
    2c4a:	a3 fc       	sbrc	r10, 3
    2c4c:	11 c0       	rjmp	.+34     	; 0x2c70 <vfprintf+0x326>
    2c4e:	a0 fe       	sbrs	r10, 0
    2c50:	06 c0       	rjmp	.+12     	; 0x2c5e <vfprintf+0x314>
    2c52:	b2 14       	cp	r11, r2
    2c54:	88 f4       	brcc	.+34     	; 0x2c78 <vfprintf+0x32e>
    2c56:	28 0c       	add	r2, r8
    2c58:	92 2c       	mov	r9, r2
    2c5a:	9b 18       	sub	r9, r11
    2c5c:	0e c0       	rjmp	.+28     	; 0x2c7a <vfprintf+0x330>
    2c5e:	b2 14       	cp	r11, r2
    2c60:	60 f4       	brcc	.+24     	; 0x2c7a <vfprintf+0x330>
    2c62:	b6 01       	movw	r22, r12
    2c64:	80 e2       	ldi	r24, 0x20	; 32
    2c66:	90 e0       	ldi	r25, 0x00	; 0
    2c68:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2c6c:	b3 94       	inc	r11
    2c6e:	f7 cf       	rjmp	.-18     	; 0x2c5e <vfprintf+0x314>
    2c70:	b2 14       	cp	r11, r2
    2c72:	18 f4       	brcc	.+6      	; 0x2c7a <vfprintf+0x330>
    2c74:	2b 18       	sub	r2, r11
    2c76:	02 c0       	rjmp	.+4      	; 0x2c7c <vfprintf+0x332>
    2c78:	98 2c       	mov	r9, r8
    2c7a:	21 2c       	mov	r2, r1
    2c7c:	a4 fe       	sbrs	r10, 4
    2c7e:	10 c0       	rjmp	.+32     	; 0x2ca0 <vfprintf+0x356>
    2c80:	b6 01       	movw	r22, r12
    2c82:	80 e3       	ldi	r24, 0x30	; 48
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2c8a:	a2 fe       	sbrs	r10, 2
    2c8c:	17 c0       	rjmp	.+46     	; 0x2cbc <vfprintf+0x372>
    2c8e:	a1 fc       	sbrc	r10, 1
    2c90:	03 c0       	rjmp	.+6      	; 0x2c98 <vfprintf+0x34e>
    2c92:	88 e7       	ldi	r24, 0x78	; 120
    2c94:	90 e0       	ldi	r25, 0x00	; 0
    2c96:	02 c0       	rjmp	.+4      	; 0x2c9c <vfprintf+0x352>
    2c98:	88 e5       	ldi	r24, 0x58	; 88
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
    2c9c:	b6 01       	movw	r22, r12
    2c9e:	0c c0       	rjmp	.+24     	; 0x2cb8 <vfprintf+0x36e>
    2ca0:	8a 2d       	mov	r24, r10
    2ca2:	86 78       	andi	r24, 0x86	; 134
    2ca4:	59 f0       	breq	.+22     	; 0x2cbc <vfprintf+0x372>
    2ca6:	a1 fe       	sbrs	r10, 1
    2ca8:	02 c0       	rjmp	.+4      	; 0x2cae <vfprintf+0x364>
    2caa:	8b e2       	ldi	r24, 0x2B	; 43
    2cac:	01 c0       	rjmp	.+2      	; 0x2cb0 <vfprintf+0x366>
    2cae:	80 e2       	ldi	r24, 0x20	; 32
    2cb0:	a7 fc       	sbrc	r10, 7
    2cb2:	8d e2       	ldi	r24, 0x2D	; 45
    2cb4:	b6 01       	movw	r22, r12
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2cbc:	89 14       	cp	r8, r9
    2cbe:	38 f4       	brcc	.+14     	; 0x2cce <vfprintf+0x384>
    2cc0:	b6 01       	movw	r22, r12
    2cc2:	80 e3       	ldi	r24, 0x30	; 48
    2cc4:	90 e0       	ldi	r25, 0x00	; 0
    2cc6:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2cca:	9a 94       	dec	r9
    2ccc:	f7 cf       	rjmp	.-18     	; 0x2cbc <vfprintf+0x372>
    2cce:	8a 94       	dec	r8
    2cd0:	f3 01       	movw	r30, r6
    2cd2:	e8 0d       	add	r30, r8
    2cd4:	f1 1d       	adc	r31, r1
    2cd6:	80 81       	ld	r24, Z
    2cd8:	b6 01       	movw	r22, r12
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2ce0:	81 10       	cpse	r8, r1
    2ce2:	f5 cf       	rjmp	.-22     	; 0x2cce <vfprintf+0x384>
    2ce4:	22 20       	and	r2, r2
    2ce6:	09 f4       	brne	.+2      	; 0x2cea <vfprintf+0x3a0>
    2ce8:	42 ce       	rjmp	.-892    	; 0x296e <vfprintf+0x24>
    2cea:	b6 01       	movw	r22, r12
    2cec:	80 e2       	ldi	r24, 0x20	; 32
    2cee:	90 e0       	ldi	r25, 0x00	; 0
    2cf0:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <fputc>
    2cf4:	2a 94       	dec	r2
    2cf6:	f6 cf       	rjmp	.-20     	; 0x2ce4 <vfprintf+0x39a>
    2cf8:	f6 01       	movw	r30, r12
    2cfa:	86 81       	ldd	r24, Z+6	; 0x06
    2cfc:	97 81       	ldd	r25, Z+7	; 0x07
    2cfe:	02 c0       	rjmp	.+4      	; 0x2d04 <vfprintf+0x3ba>
    2d00:	8f ef       	ldi	r24, 0xFF	; 255
    2d02:	9f ef       	ldi	r25, 0xFF	; 255
    2d04:	2b 96       	adiw	r28, 0x0b	; 11
    2d06:	e2 e1       	ldi	r30, 0x12	; 18
    2d08:	0c 94 be 17 	jmp	0x2f7c	; 0x2f7c <__epilogue_restores__>

00002d0c <__ctype_isfalse>:
    2d0c:	99 27       	eor	r25, r25
    2d0e:	88 27       	eor	r24, r24

00002d10 <__ctype_istrue>:
    2d10:	08 95       	ret

00002d12 <strnlen_P>:
    2d12:	fc 01       	movw	r30, r24
    2d14:	05 90       	lpm	r0, Z+
    2d16:	61 50       	subi	r22, 0x01	; 1
    2d18:	70 40       	sbci	r23, 0x00	; 0
    2d1a:	01 10       	cpse	r0, r1
    2d1c:	d8 f7       	brcc	.-10     	; 0x2d14 <strnlen_P+0x2>
    2d1e:	80 95       	com	r24
    2d20:	90 95       	com	r25
    2d22:	8e 0f       	add	r24, r30
    2d24:	9f 1f       	adc	r25, r31
    2d26:	08 95       	ret

00002d28 <strnlen>:
    2d28:	fc 01       	movw	r30, r24
    2d2a:	61 50       	subi	r22, 0x01	; 1
    2d2c:	70 40       	sbci	r23, 0x00	; 0
    2d2e:	01 90       	ld	r0, Z+
    2d30:	01 10       	cpse	r0, r1
    2d32:	d8 f7       	brcc	.-10     	; 0x2d2a <strnlen+0x2>
    2d34:	80 95       	com	r24
    2d36:	90 95       	com	r25
    2d38:	8e 0f       	add	r24, r30
    2d3a:	9f 1f       	adc	r25, r31
    2d3c:	08 95       	ret

00002d3e <fputc>:
    2d3e:	0f 93       	push	r16
    2d40:	1f 93       	push	r17
    2d42:	cf 93       	push	r28
    2d44:	df 93       	push	r29
    2d46:	fb 01       	movw	r30, r22
    2d48:	23 81       	ldd	r18, Z+3	; 0x03
    2d4a:	21 fd       	sbrc	r18, 1
    2d4c:	03 c0       	rjmp	.+6      	; 0x2d54 <fputc+0x16>
    2d4e:	8f ef       	ldi	r24, 0xFF	; 255
    2d50:	9f ef       	ldi	r25, 0xFF	; 255
    2d52:	2c c0       	rjmp	.+88     	; 0x2dac <fputc+0x6e>
    2d54:	22 ff       	sbrs	r18, 2
    2d56:	16 c0       	rjmp	.+44     	; 0x2d84 <fputc+0x46>
    2d58:	46 81       	ldd	r20, Z+6	; 0x06
    2d5a:	57 81       	ldd	r21, Z+7	; 0x07
    2d5c:	24 81       	ldd	r18, Z+4	; 0x04
    2d5e:	35 81       	ldd	r19, Z+5	; 0x05
    2d60:	42 17       	cp	r20, r18
    2d62:	53 07       	cpc	r21, r19
    2d64:	44 f4       	brge	.+16     	; 0x2d76 <fputc+0x38>
    2d66:	a0 81       	ld	r26, Z
    2d68:	b1 81       	ldd	r27, Z+1	; 0x01
    2d6a:	9d 01       	movw	r18, r26
    2d6c:	2f 5f       	subi	r18, 0xFF	; 255
    2d6e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d70:	20 83       	st	Z, r18
    2d72:	31 83       	std	Z+1, r19	; 0x01
    2d74:	8c 93       	st	X, r24
    2d76:	26 81       	ldd	r18, Z+6	; 0x06
    2d78:	37 81       	ldd	r19, Z+7	; 0x07
    2d7a:	2f 5f       	subi	r18, 0xFF	; 255
    2d7c:	3f 4f       	sbci	r19, 0xFF	; 255
    2d7e:	26 83       	std	Z+6, r18	; 0x06
    2d80:	37 83       	std	Z+7, r19	; 0x07
    2d82:	14 c0       	rjmp	.+40     	; 0x2dac <fputc+0x6e>
    2d84:	8b 01       	movw	r16, r22
    2d86:	ec 01       	movw	r28, r24
    2d88:	fb 01       	movw	r30, r22
    2d8a:	00 84       	ldd	r0, Z+8	; 0x08
    2d8c:	f1 85       	ldd	r31, Z+9	; 0x09
    2d8e:	e0 2d       	mov	r30, r0
    2d90:	09 95       	icall
    2d92:	89 2b       	or	r24, r25
    2d94:	e1 f6       	brne	.-72     	; 0x2d4e <fputc+0x10>
    2d96:	d8 01       	movw	r26, r16
    2d98:	16 96       	adiw	r26, 0x06	; 6
    2d9a:	8d 91       	ld	r24, X+
    2d9c:	9c 91       	ld	r25, X
    2d9e:	17 97       	sbiw	r26, 0x07	; 7
    2da0:	01 96       	adiw	r24, 0x01	; 1
    2da2:	16 96       	adiw	r26, 0x06	; 6
    2da4:	8d 93       	st	X+, r24
    2da6:	9c 93       	st	X, r25
    2da8:	17 97       	sbiw	r26, 0x07	; 7
    2daa:	ce 01       	movw	r24, r28
    2dac:	df 91       	pop	r29
    2dae:	cf 91       	pop	r28
    2db0:	1f 91       	pop	r17
    2db2:	0f 91       	pop	r16
    2db4:	08 95       	ret

00002db6 <__ultoa_invert>:
    2db6:	fa 01       	movw	r30, r20
    2db8:	aa 27       	eor	r26, r26
    2dba:	28 30       	cpi	r18, 0x08	; 8
    2dbc:	51 f1       	breq	.+84     	; 0x2e12 <__ultoa_invert+0x5c>
    2dbe:	20 31       	cpi	r18, 0x10	; 16
    2dc0:	81 f1       	breq	.+96     	; 0x2e22 <__ultoa_invert+0x6c>
    2dc2:	e8 94       	clt
    2dc4:	6f 93       	push	r22
    2dc6:	6e 7f       	andi	r22, 0xFE	; 254
    2dc8:	6e 5f       	subi	r22, 0xFE	; 254
    2dca:	7f 4f       	sbci	r23, 0xFF	; 255
    2dcc:	8f 4f       	sbci	r24, 0xFF	; 255
    2dce:	9f 4f       	sbci	r25, 0xFF	; 255
    2dd0:	af 4f       	sbci	r26, 0xFF	; 255
    2dd2:	b1 e0       	ldi	r27, 0x01	; 1
    2dd4:	3e d0       	rcall	.+124    	; 0x2e52 <__ultoa_invert+0x9c>
    2dd6:	b4 e0       	ldi	r27, 0x04	; 4
    2dd8:	3c d0       	rcall	.+120    	; 0x2e52 <__ultoa_invert+0x9c>
    2dda:	67 0f       	add	r22, r23
    2ddc:	78 1f       	adc	r23, r24
    2dde:	89 1f       	adc	r24, r25
    2de0:	9a 1f       	adc	r25, r26
    2de2:	a1 1d       	adc	r26, r1
    2de4:	68 0f       	add	r22, r24
    2de6:	79 1f       	adc	r23, r25
    2de8:	8a 1f       	adc	r24, r26
    2dea:	91 1d       	adc	r25, r1
    2dec:	a1 1d       	adc	r26, r1
    2dee:	6a 0f       	add	r22, r26
    2df0:	71 1d       	adc	r23, r1
    2df2:	81 1d       	adc	r24, r1
    2df4:	91 1d       	adc	r25, r1
    2df6:	a1 1d       	adc	r26, r1
    2df8:	20 d0       	rcall	.+64     	; 0x2e3a <__ultoa_invert+0x84>
    2dfa:	09 f4       	brne	.+2      	; 0x2dfe <__ultoa_invert+0x48>
    2dfc:	68 94       	set
    2dfe:	3f 91       	pop	r19
    2e00:	2a e0       	ldi	r18, 0x0A	; 10
    2e02:	26 9f       	mul	r18, r22
    2e04:	11 24       	eor	r1, r1
    2e06:	30 19       	sub	r19, r0
    2e08:	30 5d       	subi	r19, 0xD0	; 208
    2e0a:	31 93       	st	Z+, r19
    2e0c:	de f6       	brtc	.-74     	; 0x2dc4 <__ultoa_invert+0xe>
    2e0e:	cf 01       	movw	r24, r30
    2e10:	08 95       	ret
    2e12:	46 2f       	mov	r20, r22
    2e14:	47 70       	andi	r20, 0x07	; 7
    2e16:	40 5d       	subi	r20, 0xD0	; 208
    2e18:	41 93       	st	Z+, r20
    2e1a:	b3 e0       	ldi	r27, 0x03	; 3
    2e1c:	0f d0       	rcall	.+30     	; 0x2e3c <__ultoa_invert+0x86>
    2e1e:	c9 f7       	brne	.-14     	; 0x2e12 <__ultoa_invert+0x5c>
    2e20:	f6 cf       	rjmp	.-20     	; 0x2e0e <__ultoa_invert+0x58>
    2e22:	46 2f       	mov	r20, r22
    2e24:	4f 70       	andi	r20, 0x0F	; 15
    2e26:	40 5d       	subi	r20, 0xD0	; 208
    2e28:	4a 33       	cpi	r20, 0x3A	; 58
    2e2a:	18 f0       	brcs	.+6      	; 0x2e32 <__ultoa_invert+0x7c>
    2e2c:	49 5d       	subi	r20, 0xD9	; 217
    2e2e:	31 fd       	sbrc	r19, 1
    2e30:	40 52       	subi	r20, 0x20	; 32
    2e32:	41 93       	st	Z+, r20
    2e34:	02 d0       	rcall	.+4      	; 0x2e3a <__ultoa_invert+0x84>
    2e36:	a9 f7       	brne	.-22     	; 0x2e22 <__ultoa_invert+0x6c>
    2e38:	ea cf       	rjmp	.-44     	; 0x2e0e <__ultoa_invert+0x58>
    2e3a:	b4 e0       	ldi	r27, 0x04	; 4
    2e3c:	a6 95       	lsr	r26
    2e3e:	97 95       	ror	r25
    2e40:	87 95       	ror	r24
    2e42:	77 95       	ror	r23
    2e44:	67 95       	ror	r22
    2e46:	ba 95       	dec	r27
    2e48:	c9 f7       	brne	.-14     	; 0x2e3c <__ultoa_invert+0x86>
    2e4a:	00 97       	sbiw	r24, 0x00	; 0
    2e4c:	61 05       	cpc	r22, r1
    2e4e:	71 05       	cpc	r23, r1
    2e50:	08 95       	ret
    2e52:	9b 01       	movw	r18, r22
    2e54:	ac 01       	movw	r20, r24
    2e56:	0a 2e       	mov	r0, r26
    2e58:	06 94       	lsr	r0
    2e5a:	57 95       	ror	r21
    2e5c:	47 95       	ror	r20
    2e5e:	37 95       	ror	r19
    2e60:	27 95       	ror	r18
    2e62:	ba 95       	dec	r27
    2e64:	c9 f7       	brne	.-14     	; 0x2e58 <__ultoa_invert+0xa2>
    2e66:	62 0f       	add	r22, r18
    2e68:	73 1f       	adc	r23, r19
    2e6a:	84 1f       	adc	r24, r20
    2e6c:	95 1f       	adc	r25, r21
    2e6e:	a0 1d       	adc	r26, r0
    2e70:	08 95       	ret

00002e72 <__fp_inf>:
    2e72:	97 f9       	bld	r25, 7
    2e74:	9f 67       	ori	r25, 0x7F	; 127
    2e76:	80 e8       	ldi	r24, 0x80	; 128
    2e78:	70 e0       	ldi	r23, 0x00	; 0
    2e7a:	60 e0       	ldi	r22, 0x00	; 0
    2e7c:	08 95       	ret

00002e7e <__fp_nan>:
    2e7e:	9f ef       	ldi	r25, 0xFF	; 255
    2e80:	80 ec       	ldi	r24, 0xC0	; 192
    2e82:	08 95       	ret

00002e84 <__fp_pscA>:
    2e84:	00 24       	eor	r0, r0
    2e86:	0a 94       	dec	r0
    2e88:	16 16       	cp	r1, r22
    2e8a:	17 06       	cpc	r1, r23
    2e8c:	18 06       	cpc	r1, r24
    2e8e:	09 06       	cpc	r0, r25
    2e90:	08 95       	ret

00002e92 <__fp_pscB>:
    2e92:	00 24       	eor	r0, r0
    2e94:	0a 94       	dec	r0
    2e96:	12 16       	cp	r1, r18
    2e98:	13 06       	cpc	r1, r19
    2e9a:	14 06       	cpc	r1, r20
    2e9c:	05 06       	cpc	r0, r21
    2e9e:	08 95       	ret

00002ea0 <__fp_round>:
    2ea0:	09 2e       	mov	r0, r25
    2ea2:	03 94       	inc	r0
    2ea4:	00 0c       	add	r0, r0
    2ea6:	11 f4       	brne	.+4      	; 0x2eac <__fp_round+0xc>
    2ea8:	88 23       	and	r24, r24
    2eaa:	52 f0       	brmi	.+20     	; 0x2ec0 <__fp_round+0x20>
    2eac:	bb 0f       	add	r27, r27
    2eae:	40 f4       	brcc	.+16     	; 0x2ec0 <__fp_round+0x20>
    2eb0:	bf 2b       	or	r27, r31
    2eb2:	11 f4       	brne	.+4      	; 0x2eb8 <__fp_round+0x18>
    2eb4:	60 ff       	sbrs	r22, 0
    2eb6:	04 c0       	rjmp	.+8      	; 0x2ec0 <__fp_round+0x20>
    2eb8:	6f 5f       	subi	r22, 0xFF	; 255
    2eba:	7f 4f       	sbci	r23, 0xFF	; 255
    2ebc:	8f 4f       	sbci	r24, 0xFF	; 255
    2ebe:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec0:	08 95       	ret

00002ec2 <__fp_split3>:
    2ec2:	57 fd       	sbrc	r21, 7
    2ec4:	90 58       	subi	r25, 0x80	; 128
    2ec6:	44 0f       	add	r20, r20
    2ec8:	55 1f       	adc	r21, r21
    2eca:	59 f0       	breq	.+22     	; 0x2ee2 <__fp_splitA+0x10>
    2ecc:	5f 3f       	cpi	r21, 0xFF	; 255
    2ece:	71 f0       	breq	.+28     	; 0x2eec <__fp_splitA+0x1a>
    2ed0:	47 95       	ror	r20

00002ed2 <__fp_splitA>:
    2ed2:	88 0f       	add	r24, r24
    2ed4:	97 fb       	bst	r25, 7
    2ed6:	99 1f       	adc	r25, r25
    2ed8:	61 f0       	breq	.+24     	; 0x2ef2 <__fp_splitA+0x20>
    2eda:	9f 3f       	cpi	r25, 0xFF	; 255
    2edc:	79 f0       	breq	.+30     	; 0x2efc <__fp_splitA+0x2a>
    2ede:	87 95       	ror	r24
    2ee0:	08 95       	ret
    2ee2:	12 16       	cp	r1, r18
    2ee4:	13 06       	cpc	r1, r19
    2ee6:	14 06       	cpc	r1, r20
    2ee8:	55 1f       	adc	r21, r21
    2eea:	f2 cf       	rjmp	.-28     	; 0x2ed0 <__fp_split3+0xe>
    2eec:	46 95       	lsr	r20
    2eee:	f1 df       	rcall	.-30     	; 0x2ed2 <__fp_splitA>
    2ef0:	08 c0       	rjmp	.+16     	; 0x2f02 <__fp_splitA+0x30>
    2ef2:	16 16       	cp	r1, r22
    2ef4:	17 06       	cpc	r1, r23
    2ef6:	18 06       	cpc	r1, r24
    2ef8:	99 1f       	adc	r25, r25
    2efa:	f1 cf       	rjmp	.-30     	; 0x2ede <__fp_splitA+0xc>
    2efc:	86 95       	lsr	r24
    2efe:	71 05       	cpc	r23, r1
    2f00:	61 05       	cpc	r22, r1
    2f02:	08 94       	sec
    2f04:	08 95       	ret

00002f06 <__fp_zero>:
    2f06:	e8 94       	clt

00002f08 <__fp_szero>:
    2f08:	bb 27       	eor	r27, r27
    2f0a:	66 27       	eor	r22, r22
    2f0c:	77 27       	eor	r23, r23
    2f0e:	cb 01       	movw	r24, r22
    2f10:	97 f9       	bld	r25, 7
    2f12:	08 95       	ret

00002f14 <__mulsi3>:
    2f14:	db 01       	movw	r26, r22
    2f16:	8f 93       	push	r24
    2f18:	9f 93       	push	r25
    2f1a:	0e 94 9a 17 	call	0x2f34	; 0x2f34 <__muluhisi3>
    2f1e:	bf 91       	pop	r27
    2f20:	af 91       	pop	r26
    2f22:	a2 9f       	mul	r26, r18
    2f24:	80 0d       	add	r24, r0
    2f26:	91 1d       	adc	r25, r1
    2f28:	a3 9f       	mul	r26, r19
    2f2a:	90 0d       	add	r25, r0
    2f2c:	b2 9f       	mul	r27, r18
    2f2e:	90 0d       	add	r25, r0
    2f30:	11 24       	eor	r1, r1
    2f32:	08 95       	ret

00002f34 <__muluhisi3>:
    2f34:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__umulhisi3>
    2f38:	a5 9f       	mul	r26, r21
    2f3a:	90 0d       	add	r25, r0
    2f3c:	b4 9f       	mul	r27, r20
    2f3e:	90 0d       	add	r25, r0
    2f40:	a4 9f       	mul	r26, r20
    2f42:	80 0d       	add	r24, r0
    2f44:	91 1d       	adc	r25, r1
    2f46:	11 24       	eor	r1, r1
    2f48:	08 95       	ret

00002f4a <__prologue_saves__>:
    2f4a:	2f 92       	push	r2
    2f4c:	3f 92       	push	r3
    2f4e:	4f 92       	push	r4
    2f50:	5f 92       	push	r5
    2f52:	6f 92       	push	r6
    2f54:	7f 92       	push	r7
    2f56:	8f 92       	push	r8
    2f58:	9f 92       	push	r9
    2f5a:	af 92       	push	r10
    2f5c:	bf 92       	push	r11
    2f5e:	cf 92       	push	r12
    2f60:	df 92       	push	r13
    2f62:	ef 92       	push	r14
    2f64:	ff 92       	push	r15
    2f66:	0f 93       	push	r16
    2f68:	1f 93       	push	r17
    2f6a:	cf 93       	push	r28
    2f6c:	df 93       	push	r29
    2f6e:	cd b7       	in	r28, 0x3d	; 61
    2f70:	de b7       	in	r29, 0x3e	; 62
    2f72:	ca 1b       	sub	r28, r26
    2f74:	db 0b       	sbc	r29, r27
    2f76:	cd bf       	out	0x3d, r28	; 61
    2f78:	de bf       	out	0x3e, r29	; 62
    2f7a:	09 94       	ijmp

00002f7c <__epilogue_restores__>:
    2f7c:	2a 88       	ldd	r2, Y+18	; 0x12
    2f7e:	39 88       	ldd	r3, Y+17	; 0x11
    2f80:	48 88       	ldd	r4, Y+16	; 0x10
    2f82:	5f 84       	ldd	r5, Y+15	; 0x0f
    2f84:	6e 84       	ldd	r6, Y+14	; 0x0e
    2f86:	7d 84       	ldd	r7, Y+13	; 0x0d
    2f88:	8c 84       	ldd	r8, Y+12	; 0x0c
    2f8a:	9b 84       	ldd	r9, Y+11	; 0x0b
    2f8c:	aa 84       	ldd	r10, Y+10	; 0x0a
    2f8e:	b9 84       	ldd	r11, Y+9	; 0x09
    2f90:	c8 84       	ldd	r12, Y+8	; 0x08
    2f92:	df 80       	ldd	r13, Y+7	; 0x07
    2f94:	ee 80       	ldd	r14, Y+6	; 0x06
    2f96:	fd 80       	ldd	r15, Y+5	; 0x05
    2f98:	0c 81       	ldd	r16, Y+4	; 0x04
    2f9a:	1b 81       	ldd	r17, Y+3	; 0x03
    2f9c:	aa 81       	ldd	r26, Y+2	; 0x02
    2f9e:	b9 81       	ldd	r27, Y+1	; 0x01
    2fa0:	ce 0f       	add	r28, r30
    2fa2:	d1 1d       	adc	r29, r1
    2fa4:	cd bf       	out	0x3d, r28	; 61
    2fa6:	de bf       	out	0x3e, r29	; 62
    2fa8:	ed 01       	movw	r28, r26
    2faa:	08 95       	ret

00002fac <__umulhisi3>:
    2fac:	a2 9f       	mul	r26, r18
    2fae:	b0 01       	movw	r22, r0
    2fb0:	b3 9f       	mul	r27, r19
    2fb2:	c0 01       	movw	r24, r0
    2fb4:	a3 9f       	mul	r26, r19
    2fb6:	70 0d       	add	r23, r0
    2fb8:	81 1d       	adc	r24, r1
    2fba:	11 24       	eor	r1, r1
    2fbc:	91 1d       	adc	r25, r1
    2fbe:	b2 9f       	mul	r27, r18
    2fc0:	70 0d       	add	r23, r0
    2fc2:	81 1d       	adc	r24, r1
    2fc4:	11 24       	eor	r1, r1
    2fc6:	91 1d       	adc	r25, r1
    2fc8:	08 95       	ret

00002fca <_exit>:
    2fca:	f8 94       	cli

00002fcc <__stop_program>:
    2fcc:	ff cf       	rjmp	.-2      	; 0x2fcc <__stop_program>
